{"mappings":"A,M,uB,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,SCIA,IAAM,EAAQ,SAAS,cAAc,CAAC,UAChC,EAAmB,SAAS,cAAc,CAAC,qBAC3C,EAAgB,EAAiB,UAAU,CAAC,MAE9C,EAAgB,KAChB,EAAc,KAQlB,eAAe,IACb,GAAI,EAAe,MACnB,OAAM,EAAA,UAAA,CAAc,SACpB,MAAM,EAAN,KAAA,GACA,IAAM,EAAgB,EAAA,eAAA,CAAkC,cAAc,CAKtE,EAAgB,MAAM,EAAA,cAAA,CAAiC,EAJhC,CACrB,QAAS,OACT,UAAW,MACb,EAEF,CAEA,eAAe,IACb,IAAI,EACJ,GAAI,CACF,MAAM,IAEN,IAAM,EAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC,CAAE,MAAO,CAAA,CAAK,GACvE,EAAc,EACd,EAAM,SAAS,CAAG,EAClB,EAAM,gBAAgB,CAAG,KACvB,EAAiB,KAAK,CAAG,EAAM,UAAU,CACzC,EAAiB,MAAM,CAAG,EAAM,WAAW,AAC7C,EACA,MAAM,EAAM,IAAI,GAChB,GACF,CAAE,MAAO,EAAK,CACZ,QAAQ,KAAK,CAAC,sCAAuC,EACvD,CACF,CAEA,eAAe,IACb,GAAI,CAAC,GAAa,QAAU,CAAC,EAC3B,OAGF,EAAc,SAAS,CAAC,EAAO,EAAG,EAAG,EAAiB,KAAK,CAAE,EAAiB,MAAM,EAEpF,IAAM,EAAc,MAAM,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,EAAe,GACpD,EAAY,EAAY,MAAM,CAAG,EAAI,CAAW,CAAC,EAAE,CAAC,SAAS,CAAG,KAEtE,OAAO,OAAO,CAAC,WAAW,CAAC,CACzB,KAAM,YACN,UAAW,CACb,GAEA,WAAW,EAAmB,GAChC,CArDA,OAAO,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,MAAO,IACtC,AAAe,cAAf,EAAI,MAAM,EAAoB,AAAa,iBAAb,EAAI,IAAI,EACxC,MAAM,GAEV","sources":["<anon>","src/ui/js/offscreen.js"],"sourcesContent":["import \"./options.1bd2caf9.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire88c7\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire88c7\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $klb57 = parcelRequire(\"klb57\");\n\nvar $3tltx = parcelRequire(\"3tltx\");\n\nvar $bi7XK = parcelRequire(\"bi7XK\");\nconst $b27f12ad713abc09$var$video = document.getElementById('webcam');\nconst $b27f12ad713abc09$var$processingCanvas = document.getElementById(\"processing-canvas\");\nconst $b27f12ad713abc09$var$processingCtx = $b27f12ad713abc09$var$processingCanvas.getContext(\"2d\");\nlet $b27f12ad713abc09$var$handposeModel = null;\nlet $b27f12ad713abc09$var$localStream = null;\nchrome.runtime.onMessage.addListener(async (msg)=>{\n    if (msg.target === 'offscreen' && msg.type === 'start-camera') await $b27f12ad713abc09$var$startCamera();\n});\nasync function $b27f12ad713abc09$var$setupHandposeModel() {\n    if ($b27f12ad713abc09$var$handposeModel) return;\n    await $klb57.setBackend('webgl');\n    await $klb57.ready();\n    const detectorModel = $3tltx.SupportedModels.MediaPipeHands;\n    const detectorConfig = {\n        runtime: 'tfjs',\n        modelType: 'lite'\n    };\n    $b27f12ad713abc09$var$handposeModel = await $3tltx.createDetector(detectorModel, detectorConfig);\n}\nasync function $b27f12ad713abc09$var$startCamera() {\n    if ($b27f12ad713abc09$var$localStream) return;\n    try {\n        await $b27f12ad713abc09$var$setupHandposeModel();\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        $b27f12ad713abc09$var$localStream = stream;\n        $b27f12ad713abc09$var$video.srcObject = stream;\n        $b27f12ad713abc09$var$video.onloadedmetadata = ()=>{\n            $b27f12ad713abc09$var$processingCanvas.width = $b27f12ad713abc09$var$video.videoWidth;\n            $b27f12ad713abc09$var$processingCanvas.height = $b27f12ad713abc09$var$video.videoHeight;\n        };\n        await $b27f12ad713abc09$var$video.play();\n        $b27f12ad713abc09$var$sendKeypointsLoop();\n    } catch (err) {\n        console.error(\"Error starting camera in offscreen:\", err);\n    }\n}\nasync function $b27f12ad713abc09$var$sendKeypointsLoop() {\n    if (!$b27f12ad713abc09$var$localStream?.active || !$b27f12ad713abc09$var$handposeModel) return;\n    $b27f12ad713abc09$var$processingCtx.drawImage($b27f12ad713abc09$var$video, 0, 0, $b27f12ad713abc09$var$processingCanvas.width, $b27f12ad713abc09$var$processingCanvas.height);\n    const predictions = await (0, $bi7XK.getFilteredHands)($b27f12ad713abc09$var$handposeModel, $b27f12ad713abc09$var$processingCanvas);\n    const keypoints = predictions.length > 0 ? predictions[0].keypoints : null;\n    chrome.runtime.sendMessage({\n        type: 'keypoints',\n        keypoints: keypoints\n    });\n    setTimeout($b27f12ad713abc09$var$sendKeypointsLoop, 17);\n}\n\n\n//# sourceMappingURL=offscreen.efc5fe27.js.map\n","import * as tf from '@tensorflow/tfjs';\nimport * as handPoseDetection from '@tensorflow-models/hand-pose-detection';\nimport { getFilteredHands } from '../../core/gestureUtils';\n\nconst video = document.getElementById('webcam');\nconst processingCanvas = document.getElementById(\"processing-canvas\");\nconst processingCtx = processingCanvas.getContext(\"2d\");\n\nlet handposeModel = null;\nlet localStream = null;\n\nchrome.runtime.onMessage.addListener(async (msg) => {\n  if (msg.target === 'offscreen' && msg.type === 'start-camera') {\n    await startCamera();\n  }\n});\n\nasync function setupHandposeModel() {\n  if (handposeModel) return;\n  await tf.setBackend('webgl');\n  await tf.ready();\n  const detectorModel = handPoseDetection.SupportedModels.MediaPipeHands;\n  const detectorConfig = {\n    runtime: 'tfjs',\n    modelType: 'lite',\n  };\n  handposeModel = await handPoseDetection.createDetector(detectorModel, detectorConfig);\n}\n\nasync function startCamera() {\n  if (localStream) return;\n  try {\n    await setupHandposeModel();\n\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    localStream = stream;\n    video.srcObject = stream;\n    video.onloadedmetadata = () => {\n      processingCanvas.width = video.videoWidth;\n      processingCanvas.height = video.videoHeight;\n    };\n    await video.play();\n    sendKeypointsLoop();\n  } catch (err) {\n    console.error(\"Error starting camera in offscreen:\", err);\n  }\n}\n\nasync function sendKeypointsLoop() {\n  if (!localStream?.active || !handposeModel) {\n    return;\n  }\n\n  processingCtx.drawImage(video, 0, 0, processingCanvas.width, processingCanvas.height);\n\n  const predictions = await getFilteredHands(handposeModel, processingCanvas);\n  const keypoints = predictions.length > 0 ? predictions[0].keypoints : null;\n\n  chrome.runtime.sendMessage({\n    type: 'keypoints',\n    keypoints: keypoints\n  });\n\n  setTimeout(sendKeypointsLoop, 17);\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$klb57","$3tltx","$bi7XK","$b27f12ad713abc09$var$video","document","getElementById","$b27f12ad713abc09$var$processingCanvas","$b27f12ad713abc09$var$processingCtx","getContext","$b27f12ad713abc09$var$handposeModel","$b27f12ad713abc09$var$localStream","$b27f12ad713abc09$var$setupHandposeModel","setBackend","ready","detectorModel","SupportedModels","MediaPipeHands","createDetector","runtime","modelType","$b27f12ad713abc09$var$startCamera","stream","navigator","mediaDevices","getUserMedia","video","srcObject","onloadedmetadata","width","videoWidth","height","videoHeight","play","$b27f12ad713abc09$var$sendKeypointsLoop","console","error","active","drawImage","predictions","getFilteredHands","keypoints","length","chrome","sendMessage","type","setTimeout","onMessage","addListener","msg","target"],"version":3,"file":"offscreen.efc5fe27.js.map"}