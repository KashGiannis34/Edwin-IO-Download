{"mappings":"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","sources":["<anon>","src/ui/js/options.js"],"sourcesContent":["import \"./options.1bd2caf9.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire88c7\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire88c7\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $fXsES = parcelRequire(\"fXsES\");\n\nvar $klb57 = parcelRequire(\"klb57\");\n\nvar $3tltx = parcelRequire(\"3tltx\");\n\nvar $bi7XK = parcelRequire(\"bi7XK\");\n// ACTION MAP UI CODE\nlet $44f804d2195aa779$var$actionMap = {};\nfunction $44f804d2195aa779$var$createMappingPill(gesture, actionObj) {\n    const pill = document.createElement('div');\n    pill.className = 'mapping-pill';\n    const gsel = document.createElement('select');\n    gsel.classList.add('dropdown-arrow');\n    (0, $fXsES.GESTURES).forEach((g)=>{\n        const o = document.createElement('option');\n        o.value = g;\n        o.textContent = g;\n        if (g === gesture) o.selected = true;\n        gsel.append(o);\n    });\n    const asel = document.createElement('select');\n    asel.classList.add('dropdown-arrow');\n    (0, $fXsES.ACTIONS).forEach((a)=>{\n        const o = document.createElement('option');\n        o.value = a.id;\n        o.textContent = a.name;\n        if (a.id === actionObj.id) o.selected = true;\n        asel.append(o);\n    });\n    const valueContainer = document.createElement('span');\n    valueContainer.className = 'value-container';\n    const btn = document.createElement('button');\n    btn.textContent = \"\\u2715\";\n    btn.className = 'remove-btn';\n    const updateValueControls = ()=>{\n        valueContainer.innerHTML = '';\n        const selectedAction = (0, $fXsES.ACTIONS).find((a)=>a.id === asel.value);\n        if (!selectedAction?.hasValue) {\n            $44f804d2195aa779$var$actionMap[gesture].value = null;\n            $44f804d2195aa779$var$updateActionMap();\n            return;\n        }\n        const isCustom = !selectedAction.predefinedValues || !selectedAction.predefinedValues.some((pv)=>pv.value === actionObj.value);\n        const vInput = document.createElement('input');\n        vInput.type = 'text';\n        vInput.className = 'value-input';\n        vInput.placeholder = selectedAction.placeholder || '...';\n        vInput.addEventListener('input', ()=>{\n            $44f804d2195aa779$var$actionMap[gesture].value = vInput.value;\n            $44f804d2195aa779$var$updateActionMap();\n        });\n        if (selectedAction.predefinedValues) {\n            vInput.classList.add('dropdown-arrow');\n            const psel = document.createElement('select');\n            psel.className = 'predefined-select';\n            psel.classList.add('dropdown-arrow');\n            selectedAction.predefinedValues.forEach((pv)=>{\n                const o = document.createElement('option');\n                o.value = pv.value;\n                o.textContent = pv.name;\n                psel.append(o);\n            });\n            if (selectedAction.customValueLabel) {\n                const customOption = document.createElement('option');\n                customOption.value = 'custom';\n                customOption.textContent = selectedAction.customValueLabel;\n                psel.append(customOption);\n            }\n            valueContainer.append(psel);\n            psel.addEventListener('change', ()=>{\n                if (psel.value === 'custom') {\n                    vInput.style.display = 'inline-block';\n                    if (actionObj.id == 'openPage') vInput.value = 'https://';\n                    else vInput.value = '';\n                    $44f804d2195aa779$var$actionMap[gesture].value = vInput.value;\n                    vInput.focus();\n                } else {\n                    vInput.classList.toggle('focus-outline', false);\n                    vInput.style.display = 'none';\n                    $44f804d2195aa779$var$actionMap[gesture].value = psel.value;\n                }\n                $44f804d2195aa779$var$updateActionMap().then($44f804d2195aa779$var$handleActionMapUI);\n            });\n            if (isCustom) {\n                const vInputButton = document.createElement('button');\n                vInputButton.className = 'value-select-overlay';\n                vInputButton.addEventListener('click', ()=>{\n                    psel.showPicker();\n                    vInput.classList.toggle('focus-outline', true);\n                });\n                valueContainer.append(vInputButton);\n            }\n        }\n        valueContainer.append(vInput);\n        if (selectedAction.predefinedValues) {\n            const psel = valueContainer.querySelector('.predefined-select');\n            if (psel) psel.value = isCustom ? 'custom' : actionObj.value;\n        }\n        vInput.style.display = isCustom ? 'inline-block' : 'none';\n        if (actionObj.value) vInput.value = actionObj.value;\n    };\n    gsel.addEventListener('change', ()=>{\n        delete $44f804d2195aa779$var$actionMap[gesture];\n        gesture = gsel.value;\n        $44f804d2195aa779$var$actionMap[gesture] = actionObj;\n        $44f804d2195aa779$var$updateActionMap().then($44f804d2195aa779$var$handleActionMapUI);\n    });\n    asel.addEventListener('change', ()=>{\n        actionObj.id = asel.value;\n        const newAction = (0, $fXsES.ACTIONS).find((a)=>a.id === asel.value);\n        actionObj.value = newAction.predefinedValues ? newAction.predefinedValues[0].value : null;\n        updateValueControls();\n        $44f804d2195aa779$var$updateActionMap();\n    });\n    btn.addEventListener('click', ()=>{\n        delete $44f804d2195aa779$var$actionMap[gesture];\n        pill.remove();\n        $44f804d2195aa779$var$updateActionMap();\n    });\n    pill.append(gsel);\n    pill.append(document.createTextNode(\" \\u2192 \"));\n    pill.append(asel);\n    pill.append(valueContainer);\n    pill.append(btn);\n    updateValueControls();\n    return pill;\n}\nfunction $44f804d2195aa779$var$handleActionMapUI() {\n    const container = document.getElementById('action-map-container');\n    container.innerHTML = '';\n    Object.entries($44f804d2195aa779$var$actionMap).forEach(([gesture, actionObj])=>{\n        const validActionObj = typeof actionObj === 'string' ? {\n            id: actionObj,\n            value: null\n        } : actionObj;\n        container.append($44f804d2195aa779$var$createMappingPill(gesture, validActionObj));\n    });\n    document.getElementById('add-mapping').onclick = ()=>{\n        const used = new Set(Object.keys($44f804d2195aa779$var$actionMap));\n        const free = (0, $fXsES.GESTURES).find((g)=>!used.has(g)) || (0, $fXsES.GESTURES)[0];\n        $44f804d2195aa779$var$actionMap[free] = {\n            id: (0, $fXsES.ACTIONS)[0].id,\n            value: null\n        };\n        $44f804d2195aa779$var$updateActionMap();\n        $44f804d2195aa779$var$handleActionMapUI();\n    };\n    document.getElementById('set-to-default').onclick = ()=>{\n        if (confirm(\"Are you sure you want to reset all mappings to their default settings?\")) {\n            $44f804d2195aa779$var$actionMap = (0, $fXsES.DEFAULT_ACTION_MAP);\n            $44f804d2195aa779$var$updateActionMap();\n            $44f804d2195aa779$var$handleActionMapUI();\n        }\n    };\n}\nasync function $44f804d2195aa779$var$updateActionMap() {\n    await chrome.storage.sync.set({\n        actionMap: $44f804d2195aa779$var$actionMap\n    });\n}\nasync function $44f804d2195aa779$var$initActionMap(defaultVal, extraActions) {\n    const data = await chrome.storage.sync.get('actionMap');\n    if (data['actionMap'] === undefined) {\n        $44f804d2195aa779$var$actionMap = defaultVal;\n        chrome.storage.sync.set({\n            ['actionMap']: defaultVal\n        });\n    } else $44f804d2195aa779$var$actionMap = data['actionMap'];\n    extraActions();\n}\n// CAMERA FEED CODE\nconst $44f804d2195aa779$var$video = document.getElementById(\"webcam\");\nconst $44f804d2195aa779$var$gestureArea = document.getElementById(\"gesture-area\");\nconst $44f804d2195aa779$var$gestureOutput = document.getElementById(\"gesture-output\");\nconst $44f804d2195aa779$var$videoWrapper = document.getElementById(\"video-wrapper\");\nconst $44f804d2195aa779$var$displayCanvas = document.getElementById(\"overlay-canvas\");\nconst $44f804d2195aa779$var$displayCtx = $44f804d2195aa779$var$displayCanvas.getContext(\"2d\");\nconst $44f804d2195aa779$var$processingCanvas = document.getElementById(\"processing-canvas\");\nconst $44f804d2195aa779$var$processingCtx = $44f804d2195aa779$var$processingCanvas.getContext(\"2d\");\nlet $44f804d2195aa779$var$localStream = null;\nlet $44f804d2195aa779$var$lastFrameSendTime = 0;\nlet $44f804d2195aa779$var$noneFrameSend = true;\nlet $44f804d2195aa779$var$animationFrameId = null;\nlet $44f804d2195aa779$var$handposeModel = null;\nconst $44f804d2195aa779$var$port = chrome.runtime.connect({\n    name: \"options-page\"\n});\nasync function $44f804d2195aa779$var$updateMirror() {\n    const data = await chrome.storage.sync.get([\n        'mirrorEnabled'\n    ]);\n    const mirrorEnabled = data.mirrorEnabled ?? false;\n    if ($44f804d2195aa779$var$gestureArea.style.display === 'none') return;\n    $44f804d2195aa779$var$videoWrapper.classList.toggle('mirror', mirrorEnabled);\n}\nasync function $44f804d2195aa779$var$setupHandposeModel() {\n    if ($44f804d2195aa779$var$handposeModel) return;\n    await $klb57.setBackend('webgl');\n    await $klb57.ready();\n    const detectorModel = $3tltx.SupportedModels.MediaPipeHands;\n    const detectorConfig = {\n        runtime: 'tfjs',\n        modelType: 'full'\n    };\n    $44f804d2195aa779$var$handposeModel = await $3tltx.createDetector(detectorModel, detectorConfig);\n}\nasync function $44f804d2195aa779$var$startLocalCamera() {\n    if ($44f804d2195aa779$var$localStream) return;\n    try {\n        $44f804d2195aa779$var$gestureArea.style.display = 'block';\n        $44f804d2195aa779$var$gestureOutput.textContent = \"Loading model...\";\n        await $44f804d2195aa779$var$updateMirror();\n        await $44f804d2195aa779$var$setupHandposeModel();\n        $44f804d2195aa779$var$gestureOutput.textContent = \"\";\n        $44f804d2195aa779$var$localStream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        $44f804d2195aa779$var$video.srcObject = $44f804d2195aa779$var$localStream;\n        $44f804d2195aa779$var$video.onloadedmetadata = ()=>{\n            $44f804d2195aa779$var$displayCanvas.width = $44f804d2195aa779$var$video.videoWidth;\n            $44f804d2195aa779$var$displayCanvas.height = $44f804d2195aa779$var$video.videoHeight;\n            $44f804d2195aa779$var$processingCanvas.width = $44f804d2195aa779$var$video.videoWidth;\n            $44f804d2195aa779$var$processingCanvas.height = $44f804d2195aa779$var$video.videoHeight;\n        };\n        await $44f804d2195aa779$var$video.play();\n        $44f804d2195aa779$var$renderLoop();\n    } catch (err) {\n        console.error(\"Could not start camera on options page:\", err);\n        $44f804d2195aa779$var$gestureOutput.textContent = \"\";\n    }\n}\nfunction $44f804d2195aa779$var$stopLocalCamera() {\n    $44f804d2195aa779$var$gestureArea.style.display = 'none';\n    if (!$44f804d2195aa779$var$localStream) return;\n    cancelAnimationFrame($44f804d2195aa779$var$animationFrameId);\n    $44f804d2195aa779$var$localStream.getTracks().forEach((track)=>track.stop());\n    $44f804d2195aa779$var$localStream = null;\n    $44f804d2195aa779$var$video.srcObject = null;\n}\nfunction $44f804d2195aa779$var$drawHand(keypoints, keypoints3D) {\n    // Always clear the visible overlay canvas before drawing new keypoints\n    $44f804d2195aa779$var$displayCtx.clearRect(0, 0, $44f804d2195aa779$var$displayCanvas.width, $44f804d2195aa779$var$displayCanvas.height);\n    if (!keypoints) return;\n    const connections = [\n        [\n            0,\n            1\n        ],\n        [\n            1,\n            2\n        ],\n        [\n            2,\n            3\n        ],\n        [\n            3,\n            4\n        ],\n        [\n            0,\n            5\n        ],\n        [\n            5,\n            6\n        ],\n        [\n            6,\n            7\n        ],\n        [\n            7,\n            8\n        ],\n        [\n            0,\n            9\n        ],\n        [\n            9,\n            10\n        ],\n        [\n            10,\n            11\n        ],\n        [\n            11,\n            12\n        ],\n        [\n            0,\n            13\n        ],\n        [\n            13,\n            14\n        ],\n        [\n            14,\n            15\n        ],\n        [\n            15,\n            16\n        ],\n        [\n            0,\n            17\n        ],\n        [\n            17,\n            18\n        ],\n        [\n            18,\n            19\n        ],\n        [\n            19,\n            20\n        ],\n        [\n            5,\n            9\n        ],\n        [\n            9,\n            13\n        ],\n        [\n            13,\n            17\n        ],\n        [\n            0,\n            5\n        ] // Palm\n    ];\n    $44f804d2195aa779$var$displayCtx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\n    $44f804d2195aa779$var$displayCtx.lineWidth = 2;\n    for (const connection of connections){\n        const start = keypoints[connection[0]];\n        const end = keypoints[connection[1]];\n        if (start && end) {\n            $44f804d2195aa779$var$displayCtx.beginPath();\n            $44f804d2195aa779$var$displayCtx.moveTo(start.x, start.y);\n            $44f804d2195aa779$var$displayCtx.lineTo(end.x, end.y);\n            $44f804d2195aa779$var$displayCtx.stroke();\n        }\n    }\n    $44f804d2195aa779$var$displayCtx.fillStyle = '#00B6FF';\n    for(let i = 0; i < keypoints.length; i++){\n        const keypoint = keypoints[i];\n        const keypoint3D = keypoints3D[i];\n        const radius = 4 + keypoint3D.z * 60;\n        $44f804d2195aa779$var$displayCtx.beginPath();\n        $44f804d2195aa779$var$displayCtx.arc(keypoint.x, keypoint.y, Math.max(1, radius), 0, 2 * Math.PI);\n        $44f804d2195aa779$var$displayCtx.fill();\n    }\n}\nasync function $44f804d2195aa779$var$renderLoop() {\n    if (!$44f804d2195aa779$var$localStream?.active || !$44f804d2195aa779$var$handposeModel) return;\n    if ($44f804d2195aa779$var$video.readyState < 2) {\n        requestAnimationFrame($44f804d2195aa779$var$renderLoop);\n        return;\n    }\n    $44f804d2195aa779$var$processingCtx.drawImage($44f804d2195aa779$var$video, 0, 0, $44f804d2195aa779$var$processingCanvas.width, $44f804d2195aa779$var$processingCanvas.height);\n    // Detect hands first\n    const predictions = await (0, $bi7XK.getFilteredHands)($44f804d2195aa779$var$handposeModel, $44f804d2195aa779$var$processingCanvas);\n    const now = performance.now();\n    if (predictions.length > 0) {\n        const latestKeypoints = predictions[0].keypoints;\n        const keypoints3D = predictions[0].keypoints3D;\n        $44f804d2195aa779$var$drawHand(latestKeypoints, keypoints3D);\n        if (now - $44f804d2195aa779$var$lastFrameSendTime > 17) {\n            $44f804d2195aa779$var$lastFrameSendTime = now;\n            chrome.runtime.sendMessage({\n                type: 'keypoints',\n                keypoints: latestKeypoints\n            });\n            $44f804d2195aa779$var$noneFrameSend = false;\n        }\n    } else {\n        $44f804d2195aa779$var$drawHand(null);\n        if (now - $44f804d2195aa779$var$lastFrameSendTime > 600 && !$44f804d2195aa779$var$noneFrameSend) {\n            $44f804d2195aa779$var$lastFrameSendTime = now;\n            chrome.runtime.sendMessage({\n                type: 'keypoints',\n                keypoints: null\n            });\n            $44f804d2195aa779$var$noneFrameSend = true;\n        }\n    }\n    $44f804d2195aa779$var$animationFrameId = requestAnimationFrame($44f804d2195aa779$var$renderLoop);\n}\n// LISTENERS\nchrome.storage.onChanged.addListener($44f804d2195aa779$var$updateMirror);\ndocument.addEventListener('DOMContentLoaded', async ()=>{\n    await $44f804d2195aa779$var$initActionMap((0, $fXsES.DEFAULT_ACTION_MAP), $44f804d2195aa779$var$handleActionMapUI);\n    $44f804d2195aa779$var$stopLocalCamera();\n});\nwindow.addEventListener(\"beforeunload\", ()=>{\n    $44f804d2195aa779$var$stopLocalCamera();\n});\n$44f804d2195aa779$var$port.onMessage.addListener((msg)=>{\n    switch(msg.type){\n        case \"gesture-data\":\n            const { gesture: gesture } = msg.data;\n            $44f804d2195aa779$var$gestureOutput.textContent = `Detected Gesture: ${gesture || 'None'}`;\n            break;\n        case \"start-camera\":\n            $44f804d2195aa779$var$startLocalCamera();\n            break;\n        case \"stop-camera\":\n            $44f804d2195aa779$var$stopLocalCamera();\n            break;\n    }\n});\n\n\n//# sourceMappingURL=options.b6051402.js.map\n","import { GESTURES, ACTIONS, DEFAULT_ACTION_MAP } from './actionMap.js';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as handPoseDetection from '@tensorflow-models/hand-pose-detection';\r\nimport { getFilteredHands } from '../../core/gestureUtils.js';\r\n\r\n// ACTION MAP UI CODE\r\nlet actionMap = {};\r\n\r\nfunction createMappingPill(gesture, actionObj) {\r\n  const pill = document.createElement('div');\r\n  pill.className = 'mapping-pill';\r\n\r\n  const gsel = document.createElement('select');\r\n  gsel.classList.add('dropdown-arrow');\r\n  GESTURES.forEach(g => {\r\n    const o = document.createElement('option');\r\n    o.value = g; o.textContent = g;\r\n    if (g === gesture) o.selected = true;\r\n    gsel.append(o);\r\n  });\r\n\r\n  const asel = document.createElement('select');\r\n  asel.classList.add('dropdown-arrow');\r\n  ACTIONS.forEach(a => {\r\n    const o = document.createElement('option');\r\n    o.value = a.id;\r\n    o.textContent = a.name;\r\n    if (a.id === actionObj.id) o.selected = true;\r\n    asel.append(o);\r\n  });\r\n\r\n  const valueContainer = document.createElement('span');\r\n  valueContainer.className = 'value-container';\r\n\r\n  const btn = document.createElement('button');\r\n  btn.textContent = '✕';\r\n  btn.className = 'remove-btn';\r\n\r\n  const updateValueControls = () => {\r\n    valueContainer.innerHTML = '';\r\n    const selectedAction = ACTIONS.find(a => a.id === asel.value);\r\n\r\n    if (!selectedAction?.hasValue) {\r\n      actionMap[gesture].value = null;\r\n      updateActionMap();\r\n      return;\r\n    }\r\n\r\n    const isCustom = !selectedAction.predefinedValues ||\r\n                     !selectedAction.predefinedValues.some(pv => pv.value === actionObj.value);\r\n    const vInput = document.createElement('input');\r\n\r\n    vInput.type = 'text';\r\n    vInput.className = 'value-input';\r\n    vInput.placeholder = selectedAction.placeholder || '...';\r\n    vInput.addEventListener('input', () => {\r\n      actionMap[gesture].value = vInput.value;\r\n      updateActionMap();\r\n    });\r\n\r\n    if (selectedAction.predefinedValues) {\r\n      vInput.classList.add('dropdown-arrow');\r\n\r\n      const psel = document.createElement('select');\r\n      psel.className = 'predefined-select';\r\n      psel.classList.add('dropdown-arrow');\r\n\r\n      selectedAction.predefinedValues.forEach(pv => {\r\n        const o = document.createElement('option');\r\n        o.value = pv.value;\r\n        o.textContent = pv.name;\r\n        psel.append(o);\r\n      });\r\n\r\n      if (selectedAction.customValueLabel) {\r\n        const customOption = document.createElement('option');\r\n        customOption.value = 'custom';\r\n        customOption.textContent = selectedAction.customValueLabel;\r\n        psel.append(customOption);\r\n      }\r\n\r\n      valueContainer.append(psel);\r\n\r\n      psel.addEventListener('change', () => {\r\n        if (psel.value === 'custom') {\r\n          vInput.style.display = 'inline-block';\r\n          if (actionObj.id == 'openPage') {\r\n            vInput.value = 'https://';\r\n          } else {\r\n            vInput.value = '';\r\n          }\r\n          actionMap[gesture].value = vInput.value;\r\n          vInput.focus();\r\n        } else {\r\n          vInput.classList.toggle('focus-outline', false);\r\n          vInput.style.display = 'none';\r\n          actionMap[gesture].value = psel.value;\r\n        }\r\n        updateActionMap().then(handleActionMapUI);\r\n      });\r\n\r\n      if (isCustom) {\r\n        const vInputButton = document.createElement('button');\r\n\r\n        vInputButton.className = 'value-select-overlay';\r\n        vInputButton.addEventListener('click', () => {\r\n          psel.showPicker();\r\n          vInput.classList.toggle('focus-outline', true);\r\n        });\r\n        valueContainer.append(vInputButton);\r\n      }\r\n    }\r\n\r\n    valueContainer.append(vInput);\r\n\r\n    if (selectedAction.predefinedValues) {\r\n      const psel = valueContainer.querySelector('.predefined-select');\r\n      if(psel) psel.value = isCustom ? 'custom' : actionObj.value;\r\n    }\r\n\r\n    vInput.style.display = isCustom ? 'inline-block' : 'none';\r\n    if(actionObj.value) vInput.value = actionObj.value;\r\n  };\r\n\r\n  gsel.addEventListener('change', () => {\r\n    delete actionMap[gesture];\r\n    gesture = gsel.value;\r\n    actionMap[gesture] = actionObj;\r\n    updateActionMap().then(handleActionMapUI);\r\n  });\r\n\r\n  asel.addEventListener('change', () => {\r\n    actionObj.id = asel.value;\r\n    const newAction = ACTIONS.find(a => a.id === asel.value);\r\n    actionObj.value = newAction.predefinedValues ? newAction.predefinedValues[0].value : null;\r\n    updateValueControls();\r\n    updateActionMap();\r\n  });\r\n\r\n  btn.addEventListener('click', () => {\r\n    delete actionMap[gesture];\r\n    pill.remove();\r\n    updateActionMap();\r\n  });\r\n\r\n  pill.append(gsel);\r\n  pill.append(document.createTextNode(' → '));\r\n  pill.append(asel);\r\n  pill.append(valueContainer);\r\n  pill.append(btn);\r\n\r\n  updateValueControls();\r\n  return pill;\r\n}\r\n\r\nfunction handleActionMapUI() {\r\n  const container = document.getElementById('action-map-container');\r\n  container.innerHTML = '';\r\n\r\n  Object.entries(actionMap).forEach(([gesture, actionObj]) => {\r\n    const validActionObj = (typeof actionObj === 'string')\r\n      ? { id: actionObj, value: null }\r\n      : actionObj;\r\n    container.append(createMappingPill(gesture, validActionObj));\r\n  });\r\n\r\n  document.getElementById('add-mapping').onclick = () => {\r\n    const used = new Set(Object.keys(actionMap));\r\n    const free = GESTURES.find(g => !used.has(g)) || GESTURES[0];\r\n\r\n    actionMap[free] = { id: ACTIONS[0].id, value: null };\r\n    updateActionMap();\r\n    handleActionMapUI();\r\n  };\r\n\r\n  document.getElementById('set-to-default').onclick = () => {\r\n    if (confirm(\"Are you sure you want to reset all mappings to their default settings?\")) {\r\n      actionMap = DEFAULT_ACTION_MAP;\r\n      updateActionMap();\r\n      handleActionMapUI();\r\n    }\r\n  };\r\n}\r\n\r\nasync function updateActionMap() {\r\n  await chrome.storage.sync.set({ actionMap });\r\n}\r\n\r\nasync function initActionMap(defaultVal, extraActions) {\r\n  const data = await chrome.storage.sync.get('actionMap');\r\n  if (data['actionMap'] === undefined) {\r\n    actionMap = defaultVal;\r\n    chrome.storage.sync.set({ ['actionMap']: defaultVal });\r\n  } else {\r\n    actionMap = data['actionMap'];\r\n  }\r\n  extraActions();\r\n}\r\n\r\n// CAMERA FEED CODE\r\nconst video = document.getElementById(\"webcam\");\r\nconst gestureArea = document.getElementById(\"gesture-area\");\r\nconst gestureOutput = document.getElementById(\"gesture-output\");\r\nconst videoWrapper = document.getElementById(\"video-wrapper\");\r\n\r\nconst displayCanvas = document.getElementById(\"overlay-canvas\");\r\nconst displayCtx = displayCanvas.getContext(\"2d\");\r\n\r\nconst processingCanvas = document.getElementById(\"processing-canvas\");\r\nconst processingCtx = processingCanvas.getContext(\"2d\");\r\n\r\nlet localStream = null;\r\nlet lastFrameSendTime = 0;\r\nlet noneFrameSend = true;\r\nlet animationFrameId = null;\r\nlet handposeModel = null;\r\n\r\nconst port = chrome.runtime.connect({ name: \"options-page\" });\r\n\r\nasync function updateMirror() {\r\n  const data = await chrome.storage.sync.get(['mirrorEnabled']);\r\n  const mirrorEnabled = data.mirrorEnabled ?? false;\r\n\r\n  if (gestureArea.style.display === 'none') return;\r\n\r\n  videoWrapper.classList.toggle('mirror', mirrorEnabled);\r\n}\r\n\r\nasync function setupHandposeModel() {\r\n  if (handposeModel) return;\r\n  await tf.setBackend('webgl');\r\n  await tf.ready();\r\n  const detectorModel = handPoseDetection.SupportedModels.MediaPipeHands;\r\n  const detectorConfig = {\r\n    runtime: 'tfjs',\r\n    modelType: 'full',\r\n  };\r\n  handposeModel = await handPoseDetection.createDetector(detectorModel, detectorConfig);\r\n}\r\n\r\nasync function startLocalCamera() {\r\n  if (localStream) return;\r\n  try {\r\n    gestureArea.style.display = 'block';\r\n    gestureOutput.textContent = \"Loading model...\";\r\n\r\n    await updateMirror();\r\n    await setupHandposeModel();\r\n\r\n    gestureOutput.textContent = \"\";\r\n    localStream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    video.srcObject = localStream;\r\n    video.onloadedmetadata = () => {\r\n      displayCanvas.width = video.videoWidth;\r\n      displayCanvas.height = video.videoHeight;\r\n      processingCanvas.width = video.videoWidth;\r\n      processingCanvas.height = video.videoHeight;\r\n    };\r\n    await video.play();\r\n    renderLoop();\r\n  } catch (err) {\r\n    console.error(\"Could not start camera on options page:\", err);\r\n    gestureOutput.textContent = \"\";\r\n  }\r\n}\r\n\r\nfunction stopLocalCamera() {\r\n  gestureArea.style.display = 'none';\r\n  if (!localStream) return;\r\n  cancelAnimationFrame(animationFrameId);\r\n  localStream.getTracks().forEach(track => track.stop());\r\n  localStream = null;\r\n  video.srcObject = null;\r\n}\r\n\r\nfunction drawHand(keypoints, keypoints3D) {\r\n  // Always clear the visible overlay canvas before drawing new keypoints\r\n  displayCtx.clearRect(0, 0, displayCanvas.width, displayCanvas.height);\r\n  if (!keypoints) return;\r\n\r\n  const connections = [\r\n    [0, 1], [1, 2], [2, 3], [3, 4], // Thumb\r\n    [0, 5], [5, 6], [6, 7], [7, 8], // Index\r\n    [0, 9], [9, 10], [10, 11], [11, 12], // Middle\r\n    [0, 13], [13, 14], [14, 15], [15, 16], // Ring\r\n    [0, 17], [17, 18], [18, 19], [19, 20], // Pinky\r\n    [5, 9], [9, 13], [13, 17], [0, 5] // Palm\r\n  ];\r\n\r\n  displayCtx.strokeStyle = 'rgba(255, 255, 255, 0.8)';\r\n  displayCtx.lineWidth = 2;\r\n  for (const connection of connections) {\r\n    const start = keypoints[connection[0]];\r\n    const end = keypoints[connection[1]];\r\n    if (start && end) {\r\n      displayCtx.beginPath();\r\n      displayCtx.moveTo(start.x, start.y);\r\n      displayCtx.lineTo(end.x, end.y);\r\n      displayCtx.stroke();\r\n    }\r\n  }\r\n\r\n  displayCtx.fillStyle = '#00B6FF';\r\n  for (let i = 0; i < keypoints.length; i++) {\r\n    const keypoint = keypoints[i];\r\n    const keypoint3D = keypoints3D[i];\r\n    const radius = 4 + (keypoint3D.z * 60);\r\n\r\n    displayCtx.beginPath();\r\n    displayCtx.arc(keypoint.x, keypoint.y, Math.max(1, radius), 0, 2 * Math.PI);\r\n    displayCtx.fill();\r\n  }\r\n}\r\n\r\nasync function renderLoop() {\r\n  if (!localStream?.active || !handposeModel) return;\r\n\r\n  if (video.readyState < 2) {\r\n    requestAnimationFrame(renderLoop);\r\n    return;\r\n  }\r\n\r\n  processingCtx.drawImage(video, 0, 0, processingCanvas.width, processingCanvas.height);\r\n\r\n  // Detect hands first\r\n  const predictions = await getFilteredHands(handposeModel, processingCanvas);\r\n  const now = performance.now();\r\n\r\n  if (predictions.length > 0) {\r\n    const latestKeypoints = predictions[0].keypoints;\r\n    const keypoints3D = predictions[0].keypoints3D;\r\n\r\n    drawHand(latestKeypoints, keypoints3D);\r\n\r\n    if (now - lastFrameSendTime > 17) {\r\n      lastFrameSendTime = now;\r\n      chrome.runtime.sendMessage({\r\n        type: 'keypoints',\r\n        keypoints: latestKeypoints\r\n      });\r\n      noneFrameSend = false;\r\n    }\r\n  } else {\r\n    drawHand(null);\r\n    if (now - lastFrameSendTime > 600 && !noneFrameSend) {\r\n      lastFrameSendTime = now;\r\n      chrome.runtime.sendMessage({\r\n        type: 'keypoints',\r\n        keypoints: null\r\n      });\r\n      noneFrameSend = true;\r\n    }\r\n  }\r\n\r\n  animationFrameId = requestAnimationFrame(renderLoop);\r\n}\r\n\r\n// LISTENERS\r\nchrome.storage.onChanged.addListener(updateMirror);\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  await initActionMap(DEFAULT_ACTION_MAP, handleActionMapUI);\r\n  stopLocalCamera();\r\n});\r\n\r\nwindow.addEventListener(\"beforeunload\", () => {\r\n  stopLocalCamera();\r\n});\r\n\r\nport.onMessage.addListener((msg) => {\r\n  switch (msg.type) {\r\n    case \"gesture-data\":\r\n      const { gesture } = msg.data;\r\n      gestureOutput.textContent = `Detected Gesture: ${gesture || 'None'}`;\r\n      break;\r\n    case \"start-camera\":\r\n      startLocalCamera();\r\n      break;\r\n    case \"stop-camera\":\r\n      stopLocalCamera();\r\n      break;\r\n  }\r\n});"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$fXsES","$klb57","$3tltx","$bi7XK","$44f804d2195aa779$var$actionMap","$44f804d2195aa779$var$updateActionMap","chrome","storage","sync","set","actionMap","$44f804d2195aa779$var$initActionMap","defaultVal","extraActions","data","get","undefined","$44f804d2195aa779$var$video","document","getElementById","$44f804d2195aa779$var$gestureArea","$44f804d2195aa779$var$gestureOutput","$44f804d2195aa779$var$videoWrapper","$44f804d2195aa779$var$displayCanvas","$44f804d2195aa779$var$displayCtx","getContext","$44f804d2195aa779$var$processingCanvas","$44f804d2195aa779$var$processingCtx","$44f804d2195aa779$var$localStream","$44f804d2195aa779$var$lastFrameSendTime","$44f804d2195aa779$var$noneFrameSend","$44f804d2195aa779$var$animationFrameId","$44f804d2195aa779$var$handposeModel","$44f804d2195aa779$var$port","runtime","connect","name","$44f804d2195aa779$var$updateMirror","mirrorEnabled","style","display","classList","toggle","$44f804d2195aa779$var$setupHandposeModel","setBackend","ready","detectorModel","SupportedModels","MediaPipeHands","createDetector","modelType","$44f804d2195aa779$var$startLocalCamera","textContent","srcObject","navigator","mediaDevices","getUserMedia","video","onloadedmetadata","width","videoWidth","height","videoHeight","play","$44f804d2195aa779$var$renderLoop","console","error","$44f804d2195aa779$var$stopLocalCamera","cancelAnimationFrame","getTracks","forEach","track","stop","$44f804d2195aa779$var$drawHand","keypoints","keypoints3D","clearRect","connection","strokeStyle","lineWidth","start","end","beginPath","moveTo","x","y","lineTo","stroke","fillStyle","i","length","keypoint","radius","keypoint3D","z","arc","Math","max","PI","fill","active","readyState","requestAnimationFrame","drawImage","predictions","getFilteredHands","now","performance","latestKeypoints","sendMessage","type","onChanged","addListener","addEventListener","DEFAULT_ACTION_MAP","$44f804d2195aa779$var$handleActionMapUI","container","innerHTML","Object","entries","gesture","actionObj","append","$44f804d2195aa779$var$createMappingPill","pill","createElement","className","gsel","add","GESTURES","g","o","value","selected","asel","ACTIONS","a","valueContainer","btn","updateValueControls","selectedAction","find","hasValue","isCustom","predefinedValues","some","pv","vInput","placeholder","psel","customValueLabel","customOption","focus","then","vInputButton","showPicker","querySelector","newAction","remove","createTextNode","onclick","used","Set","keys","has","confirm","window","onMessage","msg"],"version":3,"file":"options.b6051402.js.map"}