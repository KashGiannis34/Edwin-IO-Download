let cameraToggle=document.getElementById("recognition-toggle"),mirrorToggle=document.getElementById("mirror-toggle"),openDashboardBtn=document.getElementById("open-dashboard-btn");async function handleCameraPermission(e){if(e)try{let e=await navigator.permissions.query({name:"camera"});if("granted"!==e.state){let e=chrome.runtime.getURL("ui/permissions.html");chrome.tabs.create({url:e});return}}catch(e){console.error("Could not check camera permission:",e),chrome.tabs.create({url:"permissions.html"});return}chrome.runtime.sendMessage({type:"toggle-recognition",isActive:e})}chrome.storage.local.get("recognitionActive",e=>{cameraToggle.checked=!!e.recognitionActive}),chrome.storage.sync.get("mirrorEnabled",e=>{mirrorToggle.checked=!!e.mirrorEnabled}),chrome.runtime.sendMessage({type:"getCameraStatus"},async e=>{!chrome.runtime.lastError&&e&&e.isCameraActive!=cameraToggle.checked&&await handleCameraPermission(cameraToggle.checked)}),openDashboardBtn.addEventListener("click",()=>{chrome.runtime.openOptionsPage()}),cameraToggle.addEventListener("change",async()=>{let e=cameraToggle.checked;chrome.storage.local.set({recognitionActive:e}),await handleCameraPermission(e)}),mirrorToggle.addEventListener("change",()=>{let e=mirrorToggle.checked;chrome.storage.sync.set({mirrorEnabled:e})});
//# sourceMappingURL=popup.6bc87e87.js.map
