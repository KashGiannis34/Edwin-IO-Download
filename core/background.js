(()=>{let e,t,n,r,a,s,i,o;function l(e,t){return Object.keys(t).forEach(function(n){"default"===n||"__esModule"===n||Object.prototype.hasOwnProperty.call(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})}),e}function u(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}var h,p,d,c,f,m,g,y,b,x,w,v,k,I,S,N,T,C,$,E,A,R=globalThis,F={},D={},O=R.parcelRequire88c7;null==O&&((O=function(e){if(e in F)return F[e].exports;if(e in D){var t=D[e];delete D[e];var n={id:e,exports:{}};return F[e]=n,t.call(n.exports,n,n.exports),n.exports}var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,t){D[e]=t},R.parcelRequire88c7=O);var _=O.register;_("foUwZ",function(e,t){}),_("gj6Et",function(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=0xefc8249d,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));t=r>>>0,r-=t,r*=t,t=r>>>0,r-=t,t+=0x100000000*r}return(t>>>0)*23283064365386963e-26});n.next=function(){var e=2091639*n.s0+23283064365386963e-26*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1)}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 0x100000000*n.next()|0},i.double=function(){return i()+(2097152*i()|0)*11102230246251565e-32},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.alea=s}(0,e,"function"==typeof define&&define)}),_("4gDjz",function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r)return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor128=s}(0,e,"function"==typeof define&&define)}),_("HLBv4",function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r)return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorwow=s}(0,e,"function"==typeof define&&define)}),_("ktaoY",function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],e^=e>>>7,n=e^e<<24^((e=r[a+1&7])^e>>>10)^((e=r[a+3&7])^e>>>3)^((e=r[a+4&7])^e<<7),e=r[a+7&7],e^=e<<13,n^=e^e<<9,r[a]=n,t.i=a+1&7,n};var n,r=e,a=[];if(r===(0|r))a[0]=r;else for(n=0,r=""+r;n<r.length;++n)a[7&n]=a[7&n]<<15^r.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r)return r},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xorshift7=s}(0,e,"function"==typeof define&&define)}),_("gBs5C",function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+0x61c88647|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},!function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+0x61c88647|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r)return r},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.xor4096=s}(0,e,"function"==typeof define&&define)}),_("ktLSh",function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-0x61c88647,t.d=0x517cc1b7,e===Math.floor(e)?(t.a=e/0x100000000|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/0x100000000};return i.double=function(){do var e=n.next()>>>11,t=(n.next()>>>0)/0x100000000,r=(e+t)/2097152;while(0===r)return r},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n(function(){return s}):this.tychei=s}(0,e,"function"==typeof define&&define)});var M={};u(M,"version",()=>FL),u(M,"data",()=>Ie);var L={};class z{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class P{refCount(e){return B("refCount")}incRef(e){return B("incRef")}timerAvailable(){return!0}time(e){return B("time")}read(e){return B("read")}readSync(e){return B("readSync")}readToGPU(e,t){return B("readToGPU")}numDataIds(){return B("numDataIds")}disposeData(e,t){return B("disposeData")}write(e,t,n){return B("write")}move(e,t,n,r,a){return B("move")}createTensorFromGPUData(e,t,n){return B("createTensorFromGPUData")}memory(){return B("memory")}floatPrecision(){return B("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return B("dispose")}}function B(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var W={};function U(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,j(e,--t,n)}function V(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,j(e,--n,r),j(t,n,r)}function G(e,t,n){return Math.max(e,Math.min(t,n))}function H(e){return e%2==0?e:e+1}function j(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function q(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function K(e,t){let n=Math.random();return t*n+(1-n)*e}function X(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Z(e,t){if(!e)throw Error("string"==typeof t?t:t())}function Y(e,t,n=""){Z(en(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function J(e){Z(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function Q(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ee(e){return 0===e.length}function et(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function en(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function er(e){return e%1==0}function ea(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;{if(e===-1/0)return -1;let t=Math.exp(2*e);return(t-1)/(t+1)}}function es(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ei(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return U(t),t}function eo(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function el(e,t=e=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e())return void a();let l=t(++i);if(null!=n&&i>=n)return void s();null!=r?r(o,l):setTimeout(o,l)};o()})}function eu(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function eh(e,t){let n=t.length;return Z((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),Z(e.every(e=>er(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function ep(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:eh(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ed(e,t){return ec(e,t)}function ec(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else if("string"===e)n=Array(t);else throw Error(`Unknown data type ${e}`);return n}function ef(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function em(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function eg(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function ey(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function eb(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function ex(e){return"string"==typeof e||e instanceof String}function ew(e){return"boolean"==typeof e}function ev(e){return"number"==typeof e}function ek(e){if(Array.isArray(e))return ek(e[0]);if(e instanceof Float32Array);else if(e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray)return"int32";else if(ev(e));else if(ex(e))return"string";else if(ew(e))return"bool";return"float32"}function eI(e){return!!(e&&e.constructor&&e.call&&e.apply)}function eS(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function eN(e){let t=e.length;if(t<2)return[];let n=Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function eT(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function e(t,n,r,a=!1){let s=[];if(1===n.length){let e=n[0]*(a?2:1);for(let n=0;n<e;n++)s[n]=r[t+n]}else{let i=n[0],o=n.slice(1),l=o.reduce((e,t)=>e*t)*(a?2:1);for(let n=0;n<i;n++)s[n]=e(t+n*l,o,r,a)}return s}(0,e,t,n)}function eC(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function e$(e,t){let n=eE(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function eE(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function eA(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return eT(e,new Float32Array(n));if("int32"===t)return eT(e,new Int32Array(n));if("bool"===t)return eT(e,new Uint8Array(n));throw Error(`Unknown data type ${t}`)}function eR(e){e.forEach(t=>{Z(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function eF(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function eD(e,t,n){if(0===t)return[];if(1===t)return[e];let r=Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function eO(e){return e&&e.then&&"function"==typeof e.then}u(W,"shuffle",()=>U),u(W,"swap",()=>j),u(W,"shuffleCombo",()=>V),u(W,"clamp",()=>G),u(W,"nearestLargerEven",()=>H),u(W,"sum",()=>q),u(W,"randUniform",()=>K),u(W,"distSquared",()=>X),u(W,"assert",()=>Z),u(W,"assertShapesMatch",()=>Y),u(W,"arraysEqual",()=>en),u(W,"assertNonNull",()=>J),u(W,"sizeFromShape",()=>Q),u(W,"isScalarShape",()=>ee),u(W,"arraysEqualWithNull",()=>et),u(W,"isInt",()=>er),u(W,"tanh",()=>ea),u(W,"sizeToSquarishShape",()=>es),u(W,"createShuffledIndices",()=>ei),u(W,"rightPad",()=>eo),u(W,"repeatedTry",()=>el),u(W,"inferFromImplicitShape",()=>eu),u(W,"parseAxisParam",()=>eh),u(W,"squeezeShape",()=>ep),u(W,"getTypedArrayFromDType",()=>ed),u(W,"getArrayFromDType",()=>ec),u(W,"checkConversionForErrors",()=>ef),u(W,"isValidDtype",()=>em),u(W,"hasEncodingLoss",()=>eg),u(W,"bytesPerElement",()=>ey),u(W,"bytesFromStringArray",()=>eb),u(W,"isString",()=>ex),u(W,"isBoolean",()=>ew),u(W,"isNumber",()=>ev),u(W,"inferDtype",()=>ek),u(W,"isFunction",()=>eI),u(W,"nearestDivisor",()=>eS),u(W,"computeStrides",()=>eN),u(W,"toNestedArray",()=>eT),u(W,"convertBackendValuesAndArrayBuffer",()=>eC),u(W,"makeOnesTypedArray",()=>e$),u(W,"makeZerosTypedArray",()=>eE),u(W,"makeZerosNestedTypedArray",()=>eA),u(W,"assertNonNegativeIntegerDimensions",()=>eR),u(W,"locToIndex",()=>eF),u(W,"indexToLoc",()=>eD),u(W,"isPromise",()=>eO);let e_="tfjsflags";class eM{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=eL,this.populateURLFlags()}setPlatform(e,t){null==this.platform||eP.getBool("IS_TEST")||eP.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];eP.getBool("IS_TEST")||eP.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(eO(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);e_ in e&&e[e_].split(",").forEach(e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:`${+n}`===n?+n:t}(0,n)})}}function eL(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>{var r,a,s;return r=t,a=n[0],s=n[1],r[decodeURIComponent(a)]=decodeURIComponent(s||""),n.join("=")}),t}function ez(){return eP}let eP=null;var eB={},eW=eB={};function eU(){throw Error("setTimeout has not been defined")}function eV(){throw Error("clearTimeout has not been defined")}try{h="function"==typeof setTimeout?setTimeout:eU}catch(e){h=eU}try{p="function"==typeof clearTimeout?clearTimeout:eV}catch(e){p=eV}function eG(e){if(h===setTimeout)return setTimeout(e,0);if((h===eU||!h)&&setTimeout)return h=setTimeout,setTimeout(e,0);try{return h(e,0)}catch(t){try{return h.call(null,e,0)}catch(t){return h.call(this,e,0)}}}var eH=[],ej=!1,eq=-1;function eK(){ej&&d&&(ej=!1,d.length?eH=d.concat(eH):eq=-1,eH.length&&eX())}function eX(){if(!ej){var e=eG(eK);ej=!0;for(var t=eH.length;t;){for(d=eH,eH=[];++eq<t;)d&&d[eq].run();eq=-1,t=eH.length}d=null,ej=!1,function(e){if(p===clearTimeout)return clearTimeout(e);if((p===eV||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(e);try{p(e)}catch(t){try{return p.call(null,e)}catch(t){return p.call(this,e)}}}(e)}}function eZ(e,t){this.fun=e,this.array=t}function eY(){}function eJ(){if(null==e){let t;if("undefined"!=typeof window)t=window;else if(void 0!==R)t=R;else if(void 0!==eB)t=eB;else if("undefined"!=typeof self)t=self;else throw Error("Could not find a global object");e=t}return e}function eQ(e,t){let n=function(){let e=eJ();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}eW.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];eH.push(new eZ(e,t)),1!==eH.length||ej||eG(eX)},eZ.prototype.run=function(){this.fun.apply(null,this.array)},eW.title="browser",eW.browser=!0,eW.env={},eW.argv=[],eW.version="",eW.versions={},eW.on=eY,eW.addListener=eY,eW.once=eY,eW.off=eY,eW.removeListener=eY,eW.removeAllListeners=eY,eW.emit=eY,eW.prependListener=eY,eW.prependOnceListener=eY,eW.listeners=function(e){return[]},eW.binding=function(e){throw Error("process.binding is not supported")},eW.cwd=function(){return"/"},eW.chdir=function(e){throw Error("process.chdir is not supported")},eW.umask=function(){return 0};var e0={};u(e0,"Abs",()=>e1),u(e0,"Acos",()=>e2),u(e0,"Acosh",()=>e3),u(e0,"Add",()=>e4),u(e0,"AddN",()=>e6),u(e0,"All",()=>e5),u(e0,"Any",()=>e8),u(e0,"ArgMax",()=>e7),u(e0,"ArgMin",()=>e9),u(e0,"Asin",()=>te),u(e0,"Asinh",()=>tt),u(e0,"Atan",()=>tn),u(e0,"Atanh",()=>tr),u(e0,"Atan2",()=>ta),u(e0,"AvgPool",()=>ts),u(e0,"AvgPoolGrad",()=>ti),u(e0,"AvgPool3D",()=>to),u(e0,"AvgPool3DGrad",()=>tl),u(e0,"BatchMatMul",()=>tu),u(e0,"BatchToSpaceND",()=>th),u(e0,"Bincount",()=>tp),u(e0,"BitwiseAnd",()=>td),u(e0,"BroadcastTo",()=>tc),u(e0,"BroadcastArgs",()=>tf),u(e0,"Cast",()=>tm),u(e0,"Ceil",()=>tg),u(e0,"ClipByValue",()=>ty),u(e0,"Complex",()=>tb),u(e0,"ComplexAbs",()=>tx),u(e0,"Concat",()=>tw),u(e0,"Conv2D",()=>tv),u(e0,"Conv2DBackpropFilter",()=>tk),u(e0,"Conv2DBackpropInput",()=>tI),u(e0,"Conv3D",()=>tS),u(e0,"Conv3DBackpropFilterV2",()=>tN),u(e0,"Conv3DBackpropInputV2",()=>tT),u(e0,"Cos",()=>tC),u(e0,"Cosh",()=>t$),u(e0,"Cumprod",()=>tE),u(e0,"Cumsum",()=>tA),u(e0,"CropAndResize",()=>tR),u(e0,"DenseBincount",()=>tF),u(e0,"DepthToSpace",()=>tD),u(e0,"DepthwiseConv2dNative",()=>tO),u(e0,"DepthwiseConv2dNativeBackpropFilter",()=>t_),u(e0,"DepthwiseConv2dNativeBackpropInput",()=>tM),u(e0,"Diag",()=>tL),u(e0,"Dilation2D",()=>tz),u(e0,"Dilation2DBackpropInput",()=>tP),u(e0,"Dilation2DBackpropFilter",()=>tB),u(e0,"Draw",()=>tW),u(e0,"RealDiv",()=>tU),u(e0,"Einsum",()=>tV),u(e0,"Elu",()=>tG),u(e0,"EluGrad",()=>tH),u(e0,"Erf",()=>tj),u(e0,"Equal",()=>tq),u(e0,"Exp",()=>tK),u(e0,"ExpandDims",()=>tX),u(e0,"Expm1",()=>tZ),u(e0,"FFT",()=>tY),u(e0,"Fill",()=>tJ),u(e0,"FlipLeftRight",()=>tQ),u(e0,"Floor",()=>t0),u(e0,"FloorDiv",()=>t1),u(e0,"FusedBatchNorm",()=>t2),u(e0,"GatherV2",()=>t3),u(e0,"GatherNd",()=>t4),u(e0,"Greater",()=>t6),u(e0,"GreaterEqual",()=>t5),u(e0,"Identity",()=>t8),u(e0,"IFFT",()=>t7),u(e0,"Imag",()=>t9),u(e0,"IsFinite",()=>ne),u(e0,"IsInf",()=>nt),u(e0,"IsNan",()=>nn),u(e0,"LeakyRelu",()=>nr),u(e0,"Less",()=>na),u(e0,"LessEqual",()=>ns),u(e0,"LinSpace",()=>ni),u(e0,"Log",()=>no),u(e0,"Log1p",()=>nl),u(e0,"LogicalAnd",()=>nu),u(e0,"LogicalNot",()=>nh),u(e0,"LogicalOr",()=>np),u(e0,"LogicalXor",()=>nd),u(e0,"LogSoftmax",()=>nc),u(e0,"LowerBound",()=>nf),u(e0,"LRN",()=>nm),u(e0,"LRNGrad",()=>ng),u(e0,"MatrixBandPart",()=>ny),u(e0,"Max",()=>nb),u(e0,"Maximum",()=>nx),u(e0,"MaxPool",()=>nw),u(e0,"MaxPoolGrad",()=>nv),u(e0,"MaxPool3D",()=>nk),u(e0,"MaxPool3DGrad",()=>nI),u(e0,"MaxPoolWithArgmax",()=>nS),u(e0,"Mean",()=>nN),u(e0,"Min",()=>nT),u(e0,"Minimum",()=>nC),u(e0,"MirrorPad",()=>n$),u(e0,"Mod",()=>nE),u(e0,"Multinomial",()=>nA),u(e0,"Multiply",()=>nR),u(e0,"Neg",()=>nF),u(e0,"NotEqual",()=>nD),u(e0,"NonMaxSuppressionV3",()=>nO),u(e0,"NonMaxSuppressionV4",()=>n_),u(e0,"NonMaxSuppressionV5",()=>nM),u(e0,"OnesLike",()=>nL),u(e0,"OneHot",()=>nz),u(e0,"Pack",()=>nP),u(e0,"PadV2",()=>nB),u(e0,"Pool",()=>nW),u(e0,"Pow",()=>nU),u(e0,"Prelu",()=>nV),u(e0,"Prod",()=>nG),u(e0,"RaggedGather",()=>nH),u(e0,"RaggedRange",()=>nj),u(e0,"RaggedTensorToTensor",()=>nq),u(e0,"Range",()=>nK),u(e0,"Real",()=>nX),u(e0,"Reciprocal",()=>nZ),u(e0,"Relu",()=>nY),u(e0,"Reshape",()=>nJ),u(e0,"ResizeNearestNeighbor",()=>nQ),u(e0,"ResizeNearestNeighborGrad",()=>n0),u(e0,"ResizeBilinear",()=>n1),u(e0,"ResizeBilinearGrad",()=>n2),u(e0,"Relu6",()=>n3),u(e0,"Reverse",()=>n4),u(e0,"Round",()=>n6),u(e0,"Rsqrt",()=>n5),u(e0,"ScatterNd",()=>n8),u(e0,"TensorScatterUpdate",()=>n7),u(e0,"SearchSorted",()=>n9),u(e0,"Select",()=>re),u(e0,"Selu",()=>rt),u(e0,"Slice",()=>rn),u(e0,"Sin",()=>rr),u(e0,"Sinh",()=>ra),u(e0,"Sign",()=>rs),u(e0,"Sigmoid",()=>ri),u(e0,"Softplus",()=>ro),u(e0,"Sqrt",()=>rl),u(e0,"Sum",()=>ru),u(e0,"SpaceToBatchND",()=>rh),u(e0,"SplitV",()=>rp),u(e0,"Softmax",()=>rd),u(e0,"SparseFillEmptyRows",()=>rc),u(e0,"SparseReshape",()=>rf),u(e0,"SparseSegmentMean",()=>rm),u(e0,"SparseSegmentSum",()=>rg),u(e0,"SparseToDense",()=>ry),u(e0,"SquaredDifference",()=>rb),u(e0,"Square",()=>rx),u(e0,"StaticRegexReplace",()=>rw),u(e0,"StridedSlice",()=>rv),u(e0,"StringNGrams",()=>rk),u(e0,"StringSplit",()=>rI),u(e0,"StringToHashBucketFast",()=>rS),u(e0,"Sub",()=>rN),u(e0,"Tan",()=>rT),u(e0,"Tanh",()=>rC),u(e0,"Tile",()=>r$),u(e0,"TopK",()=>rE),u(e0,"Transform",()=>rA),u(e0,"Transpose",()=>rR),u(e0,"Unique",()=>rF),u(e0,"Unpack",()=>rD),u(e0,"UnsortedSegmentSum",()=>rO),u(e0,"UpperBound",()=>r_),u(e0,"ZerosLike",()=>rM),u(e0,"Step",()=>rL),u(e0,"FromPixels",()=>rz),u(e0,"RotateWithOffset",()=>rP),u(e0,"_FusedMatMul",()=>rB),u(e0,"FusedConv2D",()=>rW),u(e0,"FusedDepthwiseConv2D",()=>rU);let e1="Abs",e2="Acos",e3="Acosh",e4="Add",e6="AddN",e5="All",e8="Any",e7="ArgMax",e9="ArgMin",te="Asin",tt="Asinh",tn="Atan",tr="Atanh",ta="Atan2",ts="AvgPool",ti="AvgPoolGrad",to="AvgPool3D",tl="AvgPool3DGrad",tu="BatchMatMul",th="BatchToSpaceND",tp="Bincount",td="BitwiseAnd",tc="BroadcastTo",tf="BroadcastArgs",tm="Cast",tg="Ceil",ty="ClipByValue",tb="Complex",tx="ComplexAbs",tw="Concat",tv="Conv2D",tk="Conv2DBackpropFilter",tI="Conv2DBackpropInput",tS="Conv3D",tN="Conv3DBackpropFilterV2",tT="Conv3DBackpropInputV2",tC="Cos",t$="Cosh",tE="Cumprod",tA="Cumsum",tR="CropAndResize",tF="DenseBincount",tD="DepthToSpace",tO="DepthwiseConv2dNative",t_="DepthwiseConv2dNativeBackpropFilter",tM="DepthwiseConv2dNativeBackpropInput",tL="Diag",tz="Dilation2D",tP="Dilation2DBackpropInput",tB="Dilation2DBackpropFilter",tW="Draw",tU="RealDiv",tV="Einsum",tG="Elu",tH="EluGrad",tj="Erf",tq="Equal",tK="Exp",tX="ExpandDims",tZ="Expm1",tY="FFT",tJ="Fill",tQ="FlipLeftRight",t0="Floor",t1="FloorDiv",t2="FusedBatchNorm",t3="GatherV2",t4="GatherNd",t6="Greater",t5="GreaterEqual",t8="Identity",t7="IFFT",t9="Imag",ne="IsFinite",nt="IsInf",nn="IsNan",nr="LeakyRelu",na="Less",ns="LessEqual",ni="LinSpace",no="Log",nl="Log1p",nu="LogicalAnd",nh="LogicalNot",np="LogicalOr",nd="LogicalXor",nc="LogSoftmax",nf="LowerBound",nm="LRN",ng="LRNGrad",ny="MatrixBandPart",nb="Max",nx="Maximum",nw="MaxPool",nv="MaxPoolGrad",nk="MaxPool3D",nI="MaxPool3DGrad",nS="MaxPoolWithArgmax",nN="Mean",nT="Min",nC="Minimum",n$="MirrorPad",nE="Mod",nA="Multinomial",nR="Multiply",nF="Neg",nD="NotEqual",nO="NonMaxSuppressionV3",n_="NonMaxSuppressionV4",nM="NonMaxSuppressionV5",nL="OnesLike",nz="OneHot",nP="Pack",nB="PadV2",nW="Pool",nU="Pow",nV="Prelu",nG="Prod",nH="RaggedGather",nj="RaggedRange",nq="RaggedTensorToTensor",nK="Range",nX="Real",nZ="Reciprocal",nY="Relu",nJ="Reshape",nQ="ResizeNearestNeighbor",n0="ResizeNearestNeighborGrad",n1="ResizeBilinear",n2="ResizeBilinearGrad",n3="Relu6",n4="Reverse",n6="Round",n5="Rsqrt",n8="ScatterNd",n7="TensorScatterUpdate",n9="SearchSorted",re="Select",rt="Selu",rn="Slice",rr="Sin",ra="Sinh",rs="Sign",ri="Sigmoid",ro="Softplus",rl="Sqrt",ru="Sum",rh="SpaceToBatchND",rp="SplitV",rd="Softmax",rc="SparseFillEmptyRows",rf="SparseReshape",rm="SparseSegmentMean",rg="SparseSegmentSum",ry="SparseToDense",rb="SquaredDifference",rx="Square",rw="StaticRegexReplace",rv="StridedSlice",rk="StringNGrams",rI="StringSplit",rS="StringToHashBucketFast",rN="Sub",rT="Tan",rC="Tanh",r$="Tile",rE="TopK",rA="Transform",rR="Transpose",rF="Unique",rD="Unpack",rO="UnsortedSegmentSum",r_="UpperBound",rM="ZerosLike",rL="Step",rz="FromPixels",rP="RotateWithOffset",rB="_FusedMatMul",rW="FusedConv2D",rU="FusedDepthwiseConv2D";var rV={};u(rV,"getKernel",()=>rX),u(rV,"getGradient",()=>rZ),u(rV,"getKernelsForBackend",()=>rY),u(rV,"registerKernel",()=>rJ),u(rV,"registerGradient",()=>rQ),u(rV,"unregisterKernel",()=>r0),u(rV,"unregisterGradient",()=>r1),u(rV,"copyRegisteredKernels",()=>r2);var rG={};function rH(...e){eP.getBool("IS_TEST")||eP.getBool("PROD")||console.warn(...e)}function rj(...e){eP.getBool("IS_TEST")||eP.getBool("PROD")||console.log(...e)}u(rG,"warn",()=>rH),u(rG,"log",()=>rj);let rq=eQ("kernelRegistry",()=>new Map),rK=eQ("gradRegistry",()=>new Map);function rX(e,t){let n=r3(e,t);return rq.get(n)}function rZ(e){return rK.get(e)}function rY(e){let t=rq.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function rJ(e){let{kernelName:t,backendName:n}=e,r=r3(t,n);rq.has(r)&&rH(`The kernel '${t}' for backend '${n}' is already registered`),rq.set(r,e)}function rQ(e){let{kernelName:t}=e;rK.has(t)&&eP.getBool("DEBUG")&&rH(`Overriding the gradient for '${t}'`),rK.set(t,e)}function r0(e,t){let n=r3(e,t);if(!rq.has(n))throw Error(`The kernel '${e}' for backend '${t}' is not registered`);rq.delete(n)}function r1(e){if(!rK.has(e))throw Error(`The gradient '${e}' for backend is not registered`);rK.delete(e)}function r2(e,t){rY(e).forEach(e=>{rJ(Object.assign({},e,{backendName:t}))})}function r3(e,t){return`${t}_${e}`}var r4={};function r6(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}u(r4,"createScalarValue",()=>aO),u(r4,"encodeString",()=>az),u(r4,"toTypedArray",()=>a_),u(r4,"flatten",()=>aW),u(r4,"now",()=>aM),u(r4,"fetch",()=>aL),u(r4,"decodeString",()=>aP),u(r4,"isTypedArray",()=>aB);var r5={};u(r5,"hexToLong",()=>aI),u(r5,"fingerPrint64",()=>aD);var r8={};r8=r9;var r7=null;try{r7=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r9(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function ae(e){return!0===(e&&e.__isLong__)}r9.prototype.__isLong__,Object.defineProperty(r9.prototype,"__isLong__",{value:!0}),r9.isLong=ae;var at={},an={};function ar(e,t){var n,r,a;if(t)return(e>>>=0,(a=0<=e&&e<256)&&(r=an[e]))?r:(n=as(e,(0|e)<0?-1:0,!0),a&&(an[e]=n),n);return(e|=0,(a=-128<=e&&e<128)&&(r=at[e]))?r:(n=as(e,e<0?-1:0,!1),a&&(at[e]=n),n)}function aa(e,t){if(isNaN(e))return t?af:ac;if(t){if(e<0)return af;if(e>=ah)return ax}else{if(e<=-ap)return aw;if(e+1>=ap)return ab}return e<0?aa(-e,t).neg():as(e%au|0,e/au|0,t)}function as(e,t,n){return new r9(e,t,n)}r9.fromInt=ar,r9.fromNumber=aa,r9.fromBits=as;var ai=Math.pow;function ao(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return ac;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return ao(e.substring(1),t,n).neg();for(var r,a=aa(ai(n,8)),s=ac,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var u=aa(ai(n,o));s=s.mul(u).add(aa(l))}else s=(s=s.mul(a)).add(aa(l))}return s.unsigned=t,s}function al(e,t){return"number"==typeof e?aa(e,t):"string"==typeof e?ao(e,t):as(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r9.fromString=ao,r9.fromValue=al;var au=0x100000000,ah=0xffffffffffffffff,ap=0x8000000000000000,ad=ar(0x1000000),ac=ar(0);r9.ZERO=ac;var af=ar(0,!0);r9.UZERO=af;var am=ar(1);r9.ONE=am;var ag=ar(1,!0);r9.UONE=ag;var ay=ar(-1);r9.NEG_ONE=ay;var ab=as(-1,0x7fffffff,!1);r9.MAX_VALUE=ab;var ax=as(-1,-1,!0);r9.MAX_UNSIGNED_VALUE=ax;var aw=as(0,-0x80000000,!1);r9.MIN_VALUE=aw;var av=r9.prototype;av.toInt=function(){return this.unsigned?this.low>>>0:this.low},av.toNumber=function(){return this.unsigned?(this.high>>>0)*au+(this.low>>>0):this.high*au+(this.low>>>0)},av.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(!this.eq(aw))return"-"+this.neg().toString(e);else{var t=aa(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}for(var a=aa(ai(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),l=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},av.getHighBits=function(){return this.high},av.getHighBitsUnsigned=function(){return this.high>>>0},av.getLowBits=function(){return this.low},av.getLowBitsUnsigned=function(){return this.low>>>0},av.getNumBitsAbs=function(){if(this.isNegative())return this.eq(aw)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},av.isZero=function(){return 0===this.high&&0===this.low},av.eqz=av.isZero,av.isNegative=function(){return!this.unsigned&&this.high<0},av.isPositive=function(){return this.unsigned||this.high>=0},av.isOdd=function(){return(1&this.low)==1},av.isEven=function(){return(1&this.low)==0},av.equals=function(e){return ae(e)||(e=al(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},av.eq=av.equals,av.notEquals=function(e){return!this.eq(e)},av.neq=av.notEquals,av.ne=av.notEquals,av.lessThan=function(e){return 0>this.comp(e)},av.lt=av.lessThan,av.lessThanOrEqual=function(e){return 0>=this.comp(e)},av.lte=av.lessThanOrEqual,av.le=av.lessThanOrEqual,av.greaterThan=function(e){return this.comp(e)>0},av.gt=av.greaterThan,av.greaterThanOrEqual=function(e){return this.comp(e)>=0},av.gte=av.greaterThanOrEqual,av.ge=av.greaterThanOrEqual,av.compare=function(e){if(ae(e)||(e=al(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},av.comp=av.compare,av.negate=function(){return!this.unsigned&&this.eq(aw)?aw:this.not().add(am)},av.neg=av.negate,av.add=function(e){ae(e)||(e=al(e));var t,n,r=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,l=65535&e.high,u=e.low>>>16,h=65535&e.low,p=0,d=0;return t=0+((n=0+(i+h))>>>16),n&=65535,t+=s+u,d+=t>>>16,t&=65535,d+=a+l,p+=d>>>16,d&=65535,p+=r+o,as(t<<16|n,(p&=65535)<<16|d,this.unsigned)},av.subtract=function(e){return ae(e)||(e=al(e)),this.add(e.neg())},av.sub=av.subtract,av.multiply=function(e){if(this.isZero())return ac;if(ae(e)||(e=al(e)),r7)return as(r7.mul(this.low,this.high,e.low,e.high),r7.get_high(),this.unsigned);if(e.isZero())return ac;if(this.eq(aw))return e.isOdd()?aw:ac;if(e.eq(aw))return this.isOdd()?aw:ac;if(this.isNegative())if(e.isNegative())return this.neg().mul(e.neg());else return this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ad)&&e.lt(ad))return aa(this.toNumber()*e.toNumber(),this.unsigned);var t,n,r=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,l=65535&e.high,u=e.low>>>16,h=65535&e.low,p=0,d=0;return t=0+((n=0+i*h)>>>16),n&=65535,t+=s*h,d+=t>>>16,t&=65535,t+=i*u,d+=t>>>16,t&=65535,d+=a*h,p+=d>>>16,d&=65535,d+=s*u,p+=d>>>16,d&=65535,d+=i*l,p+=d>>>16,d&=65535,p+=r*h+a*u+s*l+i*o,as(t<<16|n,(p&=65535)<<16|d,this.unsigned)},av.mul=av.multiply,av.divide=function(e){if(ae(e)||(e=al(e)),e.isZero())throw Error("division by zero");if(r7){var t,n,r;return this.unsigned||-0x80000000!==this.high||-1!==e.low||-1!==e.high?as((this.unsigned?r7.div_u:r7.div_s)(this.low,this.high,e.low,e.high),r7.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?af:ac;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return af;if(e.gt(this.shru(1)))return ag;r=af}else{if(this.eq(aw))if(e.eq(am)||e.eq(ay))return aw;else return e.eq(aw)?am:(t=this.shr(1).div(e).shl(1)).eq(ac)?e.isNegative()?am:ay:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(aw))return this.unsigned?af:ac;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=ac}for(n=this;n.gte(e);){for(var a=Math.ceil(Math.log(t=Math.max(1,Math.floor(n.toNumber()/e.toNumber())))/Math.LN2),s=a<=48?1:ai(2,a-48),i=aa(t),o=i.mul(e);o.isNegative()||o.gt(n);)t-=s,o=(i=aa(t,this.unsigned)).mul(e);i.isZero()&&(i=am),r=r.add(i),n=n.sub(o)}return r},av.div=av.divide,av.modulo=function(e){return(ae(e)||(e=al(e)),r7)?as((this.unsigned?r7.rem_u:r7.rem_s)(this.low,this.high,e.low,e.high),r7.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},av.mod=av.modulo,av.rem=av.modulo,av.not=function(){return as(~this.low,~this.high,this.unsigned)},av.and=function(e){return ae(e)||(e=al(e)),as(this.low&e.low,this.high&e.high,this.unsigned)},av.or=function(e){return ae(e)||(e=al(e)),as(this.low|e.low,this.high|e.high,this.unsigned)},av.xor=function(e){return ae(e)||(e=al(e)),as(this.low^e.low,this.high^e.high,this.unsigned)},av.shiftLeft=function(e){return(ae(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?as(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):as(0,this.low<<e-32,this.unsigned)},av.shl=av.shiftLeft,av.shiftRight=function(e){return(ae(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?as(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):as(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},av.shr=av.shiftRight,av.shiftRightUnsigned=function(e){if(ae(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?as(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?as(t,0,this.unsigned):as(t>>>e-32,0,this.unsigned)},av.shru=av.shiftRightUnsigned,av.shr_u=av.shiftRightUnsigned,av.toSigned=function(){return this.unsigned?as(this.low,this.high,!1):this},av.toUnsigned=function(){return this.unsigned?this:as(this.low,this.high,!0)},av.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},av.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},av.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r9.fromBytes=function(e,t,n){return n?r9.fromBytesLE(e,t):r9.fromBytesBE(e,t)},r9.fromBytesLE=function(e,t){return new r9(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r9.fromBytesBE=function(e,t){return new r9(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};let ak=r8.default||r8;function aI(e){return ak.fromString(e,!0,16)}let aS=aI("c3a5c85c97cb3127"),aN=aI("b492b66fbe98f273"),aT=aI("9ae16a3b2f90404f");function aC(e){return e.xor(e.shru(47))}function a$(e,t,n){let r=e.slice(t,t+n);return ak.fromBytes(Array.from(r),!0,!0)}function aE(e,t){return a$(e,t,8)}function aA(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function aR(e,t,n=aI("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return(a=a.xor(a.shru(47))).mul(n)}function aF(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=aA(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(aA(a,44)),[a.add(r),s.add(i)]}(aE(e,t),aE(e,t+8),aE(e,t+16),aE(e,t+24),n,r)}function aD(e,t=e.length){let n=ak.fromNumber(81,!0);if(t<=32)if(t<=16)return function(e,t=e.length){if(t>=8){let n=aT.add(2*t),r=aE(e,0).add(aT),a=aE(e,t-8);return aR(aA(a,37).mul(n).add(r),aA(r,25).add(a).mul(n),n)}if(t>=4){let n=aT.add(2*t);return aR(a$(e,0,4).shl(3).add(t),a$(e,t-4,4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1];return aC(aT.mul(n+(r<<8)).xor(aS.mul(t+(a<<2)))).mul(aT)}return aT}(e,t);else return function(e,t=e.length){let n=aT.add(2*t),r=aE(e,0).mul(aN),a=aE(e,8),s=aE(e,t-8).mul(n),i=aE(e,t-16).mul(aT);return aR(aA(r.add(a),43).add(aA(s,30)).add(i),r.add(aA(a.add(aT),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=aT.add(2*t),r=aE(e,0).mul(aT),a=aE(e,8),s=aE(e,t-8).mul(n),i=aE(e,t-16).mul(aT),o=aA(r.add(a),43).add(aA(s,30)).add(i),l=aR(o,r.add(aA(a.add(aT),18)).add(s),n),u=aE(e,16).mul(n),h=aE(e,24),p=o.add(aE(e,t-32)).mul(n),d=l.add(aE(e,t-24)).mul(n);return aR(aA(u.add(h),43).add(aA(p,30)).add(d),u.add(aA(h.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(aN).add(113),s=aC(a.mul(aT).add(113)).mul(aT),i=[ak.UZERO,ak.UZERO],o=[ak.UZERO,ak.UZERO];r=r.mul(aT).add(aE(e,0));let l=0,u=(t-1>>6)*64,h=u+(t-1&63)-63;do r=aA(r.add(a).add(i[0]).add(aE(e,l+8)),37).mul(aN),a=aA(a.add(i[1]).add(aE(e,l+48)),42).mul(aN),r=r.xor(o[1]),a=a.add(i[0]).add(aE(e,l+40)),s=aA(s.add(o[0]),33).mul(aN),i=aF(e,l,i[1].mul(aN),r.add(o[0])),o=aF(e,l+32,s.add(o[1]),a.add(aE(e,l+16))),[s,r]=[r,s],l+=64;while(l!==u)let p=aN.add(s.and(255).shl(1));return l=h,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=aA(r.add(a).add(i[0]).add(aE(e,l+8)),37).mul(p),a=aA(a.add(i[1]).add(aE(e,l+48)),42).mul(p),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(aE(e,l+40))),s=aA(s.add(o[0]),33).mul(p),i=aF(e,l,i[1].mul(p),r.add(o[0])),o=aF(e,l+32,s.add(o[1]),a.add(aE(e,l+16))),[s,r]=[r,s],aR(aR(i[0],o[0],p).add(aC(a).mul(aS)).add(s),aR(i[1],o[1],p).add(r),p)}function aO(e,t){return"string"===t?az(e):a_([e],t)}function a_(e,t){var n;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=aW(e)),eP.getBool("DEBUG")&&ef(e,t),(n=e)instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw Error(`Unknown data type ${t}`)}function aM(){return eP.platform.now()}function aL(e,t){return eP.platform.fetch(e,t)}function az(e,t="utf-8"){return t=t||"utf-8",eP.platform.encode(e,t)}function aP(e,t="utf-8"){return t=t||"utf-8",eP.platform.decode(e,t)}function aB(e){return null!=eP.platform.isTypedArray?eP.platform.isTypedArray(e):r6(e)}function aW(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||eO(e)||null==e||aB(e)&&n)t.push(e);else if(Array.isArray(e)||aB(e))for(let r=0;r<e.length;++r)aW(e[r],t,n);else{let r=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)aW(e[a],t,n)}return t}l(r4,W),l(r4,r5);class aU{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new aV)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=aM();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{for(let e of(s(),r))e.dataSync();a=Promise.resolve({kernelMs:aM()-i})}if(eP.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then(t=>{!function(e,t,n){if("float32"===t)for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}}(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}class aV{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?eo(`${r}ms`,9):r.error,o=eo(e,25),l=t.rank,u=t.size,h=eo(t.shape.toString(),14),p="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}	%c${i}	%c${l}D ${h}	%c${u}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function aG(e,t,n){return eo(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ex(e)?`'${e}'`:"bool"===n?aH(e):parseFloat(e.toFixed(7)).toString(),t)}function aH(e){return 0===e?"false":"true"}function aj(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class aq{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Q(e),null!=n){let e=n.length;Z(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ec(t,this.size),this.strides=eN(e)}set(e,...t){0===t.length&&(t=[0]),Z(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return aK().makeTensor(this.values,this.shape,this.dtype)}}let aK=null,aX=null;class aZ{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Q(e),this.strides=eN(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return aX.buffer(this.shape,this.dtype,e)}bufferSync(){return aX.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return eT(this.shape,e,"complex64"===this.dtype)}arraySync(){return eT(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=aK().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>aP(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),aK().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=aK().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>aP(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await aK().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),aK().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return aX.print(this,e)}clone(){return this.throwIfDisposed(),aX.clone(this)}toString(e=!1){return function(e,t,n,r){let a=eN(t),s=function(e,t,n,r){let a=Q(t),s=r[r.length-1],i=Array(s).fill(0),o=t.length,l="complex64"===n?aj(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],aG(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=function e(t,n,r,a,s,i=!0){let o="complex64"===r?2:1,l=n[0],u=n.length;if(0===u)return"complex64"===r?[aG(aj(t)[0],0,r)]:"bool"===r?[aH(t[0])]:[t[0].toString()];if(1===u){if(l>20){let e=Array.from(t.slice(0,3*o)),n=Array.from(t.slice((l-3)*o,l*o));return"complex64"===r&&(e=aj(e),n=aj(n)),["["+e.map((e,t)=>aG(e,s[t],r)).join(", ")+", ..., "+n.map((e,t)=>aG(e,s[l-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?aj(t):Array.from(t)).map((e,t)=>aG(e,s[t],r)).join(", ")+"]"]}let h=n.slice(1),p=a.slice(1),d=a[0]*o,c=[];if(l>20){for(let n=0;n<3;n++){let a=n*d,i=a+d;c.push(...e(t.slice(a,i),h,r,p,s,!1))}c.push("...");for(let n=l-3;n<l;n++){let a=n*d,i=a+d;c.push(...e(t.slice(a,i),h,r,p,s,n===l-1))}}else for(let n=0;n<l;n++){let a=n*d,i=a+d;c.push(...e(t.slice(a,i),h,r,p,s,n===l-1))}let f=2===u?",":"";c[0]="["+(l>0?c[0]+f:"");for(let e=1;e<c.length-1;e++)c[e]=" "+c[e]+f;let m=",\n";for(let e=2;e<u;e++)m+="\n";return c[c.length-1]=" "+c[c.length-1]+"]"+(i?"":m),c}(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),aX.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),aK().makeVariable(this,e,t,n)}}function aY(){return eQ("Tensor",()=>aZ)}Object.defineProperty(aZ,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),aY();class aJ extends aZ{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!en(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);aK().disposeTensor(this),this.dataId=e.dataId,aK().incRef(this,null)}dispose(){aK().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(aJ,Symbol.hasInstance,{value:e=>e instanceof aZ&&null!=e.assign&&e.assign instanceof Function});var aQ={};u(aQ,"makeTypesMatch",()=>a6),u(aQ,"assertTypesMatch",()=>a5),u(aQ,"isTensorInList",()=>a8),u(aQ,"getTensorsInContainer",()=>a7),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(c||(c={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(f||(f={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(m||(m={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(g||(g={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(y||(y={}));let a0={float32:g,int32:f,bool:m,complex64:y};function a1(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return a0[e][t]}function a2(e){return a1(e,"int32")}function a3(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function a4(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function a6(e,t){if(e.dtype===t.dtype)return[e,t];let n=a1(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function a5(e,t){Z(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function a8(e,t){return t.some(t=>t.id===e.id)}function a7(e){let t=[];return function e(t,n,r){var a;if(null!=t){if(t instanceof aZ)return void n.push(t);if(Array.isArray(a=t)||"object"==typeof a)for(let a in t){let s=t[a];r.has(s)||(r.add(s),e(s,n,r))}}}(e,t,new Set),t}function a9(e){return null!=e.kernelName}class se{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class st{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new se}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(!(e in this.registryFactory))return null;else{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(rH(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new aU(this.backendInstance),!0}setupRegisteredKernels(){rY(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){rY(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof P||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,rH(`Initialization of backend ${e} failed`),rH(n.stack||n.message),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return rH(`Initialization of backend ${e} failed`),rH(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>((n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return st.nextTensorId++}nextVariableId(){return st.nextVariableId++}clone(e){let t=sr.runKernel(t8,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>sr.runKernel(tm,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==rX(e,this.backendName))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r,a,s=[],i=this.isTapeOn(),o=this.state.numBytes,l=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let u=a9(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(a9(e)){let{kernelName:t,inputs:a,attrs:o}=e;null==this.backendName&&this.backend;let l=rX(t,this.backendName);Z(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),n=()=>{let e=this.backend.numDataIds(),n=Array.isArray(r=l.kernelFunc({inputs:a,attrs:o,backend:this.backend}))?r:[r];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(i){let e=this.getTensorsForGradient(t,a,u);s=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,a=e=>{i&&(s=e.map(e=>this.keep(this.clone(e))))};n=()=>{let e=this.backend.numDataIds(),n=Array.isArray(r=this.tidy(()=>t(this.backend,a)))?r:[r];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}let{inputs:h,attrs:p}=e,d=a9(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(a=this.profiler.profileKernel(u,h,()=>n()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(a),t=a.outputs):t=n()}),i&&this.addTapeNode(u,h,t,d,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-l,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(e=>null!=h[e]?h[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:a.timeMs,extraInfo:a.extraInfo}),Array.isArray(r)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let r=rZ(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Z(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let i=n.filter((e,t)=>s[t]);return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ex(e[0])&&(a=e.map(e=>az(e)));let s=r.write(a,t,n),i=new aZ(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=eb(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new aZ(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new aJ(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ey(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof aJ||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*ey(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;for(let r of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,this.state.activeProfile.kernels))r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=rZ(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],r=eE(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=a7(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(Z(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));Z(a instanceof aZ,()=>"The result y returned by f() must be a tensor.");let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==n?function(e){let t=e$(Q(e),"float32");return sr.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n(()=>o[t]());if("float32"!==a.dtype)throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!en(a.shape,i.shape))throw Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),sa);let r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return Z(eI(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;Z(t.every(e=>e instanceof aZ),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(Z((n=e(...t,a)).value instanceof aZ,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Z(eI(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Z(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Z(s.every(e=>e instanceof aZ),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=aM(),n=await this.backend.time(e);return n.wallMs=aM()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new se,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function sn(){let e=eJ();if(null==e._tfengine){let t=new eM(e);e._tfengine=new st(t)}return eP=e._tfengine.ENV,aK=()=>e._tfengine,e._tfengine}st.nextTensorId=0,st.nextVariableId=0;let sr=sn();function sa(e,t){return sr.runKernel(e4,{a:e,b:t})}var ss={};function si(e){t=e}function so(e){if(void 0!==t)return t;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function sl(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}u(ss,"mockIsMobile",()=>si),u(ss,"isMobile",()=>so),u(ss,"isBrowser",()=>sl);let su=eP;function sh(e,t){let n=e;if(aB(e))return"string"===t?[]:[e.length];if(a3(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(a4(e))return[e.buffer.size/(null==t?4:ey(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||aB(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&eP.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!aB(t))return void Z(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Z(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Z(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);let a=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],a,r.concat(n))}(e,r,[]),r}function sp(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function sd(e,t,n,r="numeric"){if(e instanceof aY())return sp(r,e.dtype,t,n),e;let a=ek(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),sp(r,a,t,n),null==e||!aB(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=sh(e,a);aB(e)||Array.isArray(e)||(e=[e]);let i="string"!==a?a_(e,a):aW(e,[],!0);return sr.makeTensor(i,s,a)}function sc(e,t,n,r="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>sd(e,`${t}[${a}]`,n,r))}su.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),su.registerFlag("IS_BROWSER",()=>sl()),su.registerFlag("IS_NODE",()=>!1),su.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),su.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),su.registerFlag("PROD",()=>!1),su.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>su.getBool("DEBUG")),su.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),su.registerFlag("IS_TEST",()=>!1),su.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>su.getBool("DEBUG")),su.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),su.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),su.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);let sf="__op";function sm(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));let a=(...e)=>{sr.startScope(n);try{let t=r(...e);return eO(t)&&console.error("Cannot return a Promise inside of tidy."),sr.endScope(t),t}catch(e){throw sr.endScope(null),e}};return Object.defineProperty(a,"name",{value:n+=sf,configurable:!0}),a}let sg=sm({complex_:function(e,t){let n=sd(e,"real","complex"),r=sd(t,"imag","complex");return Y(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),sr.runKernel(tb,{real:n,imag:r})}});function sy(e,t,n,r){if(null==r)r=ek(e);else if("complex64"===r)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(a4(e)||a3(e)){if("float32"!==r&&"int32"!==r)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return sr.backend.createTensorFromGPUData(e,t||n,r)}if(!aB(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){eR(t);let e=Q(t),r=Q(n);Z(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Q(t.slice(e));Z(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return aB(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?a_(e,r):aW(e,[],!0),sr.makeTensor(e,t,r)}function sb(e,t,n){let r=sh(e,n);return sy(e,t,r,n)}let sx={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class sw{static join(e){return new sw(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>aB(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw Error(`Could not find start shard for byte ${e}`);let r=new ArrayBuffer(t-e),a=new Uint8Array(r),s=0;for(let r=n;r<this.shards.length;r++){let n=this.shards[r],i=e+s-n.start,o=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(a.set(u,o),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:+(e>=t.end)}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return -1}(this.shards,t);return -1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}var sv={};function sk(){eP.set("PROD",!0)}function sI(){eP.set("DEBUG",!0)}function sS(){eP.set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function sN(e){eP.getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function sT(){sr.disposeVariables()}function sC(){return sr}function s$(){return sr.memory()}function sE(e){return sr.profile(e)}function sA(e,t){return sr.tidy(e,t)}function sR(e){a7(e).forEach(e=>e.dispose())}function sF(e){return sr.keep(e)}function sD(e){return sr.time(e)}function sO(e){return sr.setBackend(e)}function s_(){return sr.ready()}function sM(){return sr.backendName}function sL(e){sr.removeBackend(e)}function sz(e){return sr.findBackend(e)}function sP(e){return sr.findBackendFactory(e)}function sB(e,t,n=1){return sr.registerBackend(e,t,n)}function sW(){return sr.backend}function sU(e,t){eP.setPlatform(e,t)}"use strict";"use strict";u(sv,"enableProdMode",()=>sk),u(sv,"enableDebugMode",()=>sI),u(sv,"disableDeprecationWarnings",()=>sS),u(sv,"deprecationWarn",()=>sN),u(sv,"disposeVariables",()=>sT),u(sv,"engine",()=>sC),u(sv,"memory",()=>s$),u(sv,"profile",()=>sE),u(sv,"tidy",()=>sA),u(sv,"dispose",()=>sR),u(sv,"keep",()=>sF),u(sv,"time",()=>sD),u(sv,"setBackend",()=>sO),u(sv,"ready",()=>s_),u(sv,"getBackend",()=>sM),u(sv,"removeBackend",()=>sL),u(sv,"findBackend",()=>sz),u(sv,"findBackendFactory",()=>sP),u(sv,"registerBackend",()=>sB),u(sv,"backend",()=>sW),u(sv,"setPlatform",()=>sU),b=function(e){for(var t,n=e.length,r=n%3,a=[],s=0,i=n-r;s<i;s+=16383)a.push(function(e,t,n){for(var r,a=[],s=t;s<n;s+=3)r=(e[s]<<16&0xff0000)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(sV[r>>18&63]+sV[r>>12&63]+sV[r>>6&63]+sV[63&r]);return a.join("")}(e,s,s+16383>i?i:s+16383));return 1===r?a.push(sV[(t=e[n-1])>>2]+sV[t<<4&63]+"=="):2===r&&a.push(sV[(t=(e[n-2]<<8)+e[n-1])>>10]+sV[t>>4&63]+sV[t<<2&63]+"="),a.join("")};for(var sV=[],sG=[],sH="undefined"!=typeof Uint8Array?Uint8Array:Array,sj="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",sq=0,sK=sj.length;sq<sK;++sq)sV[sq]=sj[sq],sG[sj.charCodeAt(sq)]=sq;function sX(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");-1===n&&(n=t);var r=n===t?0:4-n%4;return[n,r]}sG[45]=62,sG[95]=63,x=function(e,t,n,r,a){var s,i,o=8*a-r-1,l=(1<<o)-1,u=l>>1,h=-7,p=n?a-1:0,d=n?-1:1,c=e[t+p];for(p+=d,s=c&(1<<-h)-1,c>>=-h,h+=o;h>0;s=256*s+e[t+p],p+=d,h-=8);for(i=s&(1<<-h)-1,s>>=-h,h+=r;h>0;i=256*i+e[t+p],p+=d,h-=8);if(0===s)s=1-u;else{if(s===l)return i?NaN:1/0*(c?-1:1);i+=Math.pow(2,r),s-=u}return(c?-1:1)*i*Math.pow(2,s-r)},w=function(e,t,n,r,a,s){var i,o,l,u=8*s-a-1,h=(1<<u)-1,p=h>>1,d=5960464477539062e-23*(23===a),c=r?0:s-1,f=r?1:-1,m=+(t<0||0===t&&1/t<0);for(isNaN(t=Math.abs(t))||t===1/0?(o=+!!isNaN(t),i=h):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+p>=1?t+=d/l:t+=d*Math.pow(2,1-p),t*l>=2&&(i++,l/=2),i+p>=h?(o=0,i=h):i+p>=1?(o=(t*l-1)*Math.pow(2,a),i+=p):(o=t*Math.pow(2,p-1)*Math.pow(2,a),i=0));a>=8;e[n+c]=255&o,c+=f,o/=256,a-=8);for(i=i<<a|o,u+=a;u>0;e[n+c]=255&i,c+=f,i/=256,u-=8);e[n+c-f]|=128*m};let sZ="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function sY(e){if(e>0x7fffffff)throw RangeError('The value "'+e+'" is invalid for option "size"');let t=new Uint8Array(e);return Object.setPrototypeOf(t,sJ.prototype),t}function sJ(e,t,n){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return s1(e)}return sQ(e,t,n)}function sQ(e,t,n){if("string"==typeof e){var r=e,a=t;if(("string"!=typeof a||""===a)&&(a="utf8"),!sJ.isEncoding(a))throw TypeError("Unknown encoding: "+a);let n=0|s6(r,a),s=sY(n),i=s.write(r,a);return i!==n&&(s=s.slice(0,i)),s}if(ArrayBuffer.isView(e)){var s=e;if(iw(s,Uint8Array)){let e=new Uint8Array(s);return s3(e.buffer,e.byteOffset,e.byteLength)}return s2(s)}if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(iw(e,ArrayBuffer)||e&&iw(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(iw(e,SharedArrayBuffer)||e&&iw(e.buffer,SharedArrayBuffer)))return s3(e,t,n);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let i=e.valueOf&&e.valueOf();if(null!=i&&i!==e)return sJ.from(i,t,n);let o=function(e){if(sJ.isBuffer(e)){let t=0|s4(e.length),n=sY(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||function(e){return e!=e}(e.length)?sY(0):s2(e):"Buffer"===e.type&&Array.isArray(e.data)?s2(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return sJ.from(e[Symbol.toPrimitive]("string"),t,n);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function s0(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function s1(e){return s0(e),sY(e<0?0:0|s4(e))}function s2(e){let t=e.length<0?0:0|s4(e.length),n=sY(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function s3(e,t,n){let r;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),sJ.prototype),r}function s4(e){if(e>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}sJ.TYPED_ARRAY_SUPPORT=function(){try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),sJ.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(sJ.prototype,"parent",{enumerable:!0,get:function(){if(sJ.isBuffer(this))return this.buffer}}),Object.defineProperty(sJ.prototype,"offset",{enumerable:!0,get:function(){if(sJ.isBuffer(this))return this.byteOffset}}),sJ.poolSize=8192,sJ.from=function(e,t,n){return sQ(e,t,n)},Object.setPrototypeOf(sJ.prototype,Uint8Array.prototype),Object.setPrototypeOf(sJ,Uint8Array),sJ.alloc=function(e,t,n){return(s0(e),e<=0)?sY(e):void 0!==t?"string"==typeof n?sY(e).fill(t,n):sY(e).fill(t):sY(e)},sJ.allocUnsafe=function(e){return s1(e)},sJ.allocUnsafeSlow=function(e){return s1(e)};function s6(e,t){if(sJ.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||iw(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let a=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return iy(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return ib(e).length;default:if(a)return r?-1:iy(e).length;t=(""+t).toLowerCase(),a=!0}}function s5(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===n||n>this.length)&&(n=this.length),n<=0||(n>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,n){let r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let a="";for(let r=t;r<n;++r)a+=iv[e[r]];return a}(this,t,n);case"utf8":case"utf-8":return ie(this,t,n);case"ascii":return function(e,t,n){let r="";n=Math.min(e.length,n);for(let a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}(this,t,n);case"latin1":case"binary":return function(e,t,n){let r="";n=Math.min(e.length,n);for(let a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}(this,t,n);case"base64":var a,s,i;return a=this,s=t,i=n,0===s&&i===a.length?b(a):b(a.slice(s,i));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,n){let r=e.slice(t,n),a="";for(let e=0;e<r.length-1;e+=2)a+=String.fromCharCode(r[e]+256*r[e+1]);return a}(this,t,n);default:if(r)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function s8(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function s7(e,t,n,r,a){var s;if(0===e.length)return -1;if("string"==typeof n?(r=n,n=0):n>0x7fffffff?n=0x7fffffff:n<-0x80000000&&(n=-0x80000000),(s=n*=1)!=s&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length)if(a)return -1;else n=e.length-1;else if(n<0)if(!a)return -1;else n=0;if("string"==typeof t&&(t=sJ.from(t,r)),sJ.isBuffer(t))return 0===t.length?-1:s9(e,t,n,r,a);if("number"==typeof t){if(t&=255,"function"==typeof Uint8Array.prototype.indexOf)if(a)return Uint8Array.prototype.indexOf.call(e,t,n);else return Uint8Array.prototype.lastIndexOf.call(e,t,n);return s9(e,[t],n,r,a)}throw TypeError("val must be string, number or Buffer")}function s9(e,t,n,r,a){let s,i=1,o=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return -1;i=2,o/=2,l/=2,n/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){let r=-1;for(s=n;s<o;s++)if(u(e,s)===u(t,-1===r?0:s-r)){if(-1===r&&(r=s),s-r+1===l)return r*i}else -1!==r&&(s-=s-r),r=-1}else for(n+l>o&&(n=o-l),s=n;s>=0;s--){let n=!0;for(let r=0;r<l;r++)if(u(e,s+r)!==u(t,r)){n=!1;break}if(n)return s}return -1}function ie(e,t,n){n=Math.min(e.length,n);let r=[],a=t;for(;a<n;){let t=e[a],s=null,i=t>239?4:t>223?3:t>191?2:1;if(a+i<=n){let n,r,o,l;switch(i){case 1:t<128&&(s=t);break;case 2:(192&(n=e[a+1]))==128&&(l=(31&t)<<6|63&n)>127&&(s=l);break;case 3:n=e[a+1],r=e[a+2],(192&n)==128&&(192&r)==128&&(l=(15&t)<<12|(63&n)<<6|63&r)>2047&&(l<55296||l>57343)&&(s=l);break;case 4:n=e[a+1],r=e[a+2],o=e[a+3],(192&n)==128&&(192&r)==128&&(192&o)==128&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o)>65535&&l<1114112&&(s=l)}}null===s?(s=65533,i=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|1023&s),r.push(s),a+=i}var s=r;let i=s.length;if(i<=4096)return String.fromCharCode.apply(String,s);let o="",l=0;for(;l<i;)o+=String.fromCharCode.apply(String,s.slice(l,l+=4096));return o}function it(e,t,n){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>n)throw RangeError("Trying to access beyond buffer length")}function ir(e,t,n,r,a,s){if(!sJ.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw RangeError('"value" argument is out of bounds');if(n+r>e.length)throw RangeError("Index out of range")}function ia(e,t,n,r,a){id(t,r,a,e,n,7);let s=Number(t&BigInt(0xffffffff));e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s;let i=Number(t>>BigInt(32)&BigInt(0xffffffff));return e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,n}function is(e,t,n,r,a){id(t,r,a,e,n,7);let s=Number(t&BigInt(0xffffffff));e[n+7]=s,s>>=8,e[n+6]=s,s>>=8,e[n+5]=s,s>>=8,e[n+4]=s;let i=Number(t>>BigInt(32)&BigInt(0xffffffff));return e[n+3]=i,i>>=8,e[n+2]=i,i>>=8,e[n+1]=i,i>>=8,e[n]=i,n+8}function ii(e,t,n,r,a,s){if(n+r>e.length||n<0)throw RangeError("Index out of range")}function io(e,t,n,r,a){return t*=1,n>>>=0,a||ii(e,t,n,4,34028234663852886e22,-34028234663852886e22),w(e,t,n,r,23,4),n+4}function il(e,t,n,r,a){return t*=1,n>>>=0,a||ii(e,t,n,8,17976931348623157e292,-17976931348623157e292),w(e,t,n,r,52,8),n+8}sJ.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==sJ.prototype},sJ.compare=function(e,t){if(iw(e,Uint8Array)&&(e=sJ.from(e,e.offset,e.byteLength)),iw(t,Uint8Array)&&(t=sJ.from(t,t.offset,t.byteLength)),!sJ.isBuffer(e)||!sJ.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:+(r<n)},sJ.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},sJ.concat=function(e,t){let n;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return sJ.alloc(0);if(void 0===t)for(n=0,t=0;n<e.length;++n)t+=e[n].length;let r=sJ.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){let t=e[n];if(iw(t,Uint8Array))a+t.length>r.length?(sJ.isBuffer(t)||(t=sJ.from(t)),t.copy(r,a)):Uint8Array.prototype.set.call(r,t,a);else if(sJ.isBuffer(t))t.copy(r,a);else throw TypeError('"list" argument must be an Array of Buffers');a+=t.length}return r},sJ.byteLength=s6,sJ.prototype._isBuffer=!0,sJ.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)s8(this,t,t+1);return this},sJ.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)s8(this,t,t+3),s8(this,t+1,t+2);return this},sJ.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)s8(this,t,t+7),s8(this,t+1,t+6),s8(this,t+2,t+5),s8(this,t+3,t+4);return this},sJ.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?ie(this,0,e):s5.apply(this,arguments)},sJ.prototype.toLocaleString=sJ.prototype.toString,sJ.prototype.equals=function(e){if(!sJ.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===sJ.compare(this,e)},sJ.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},sZ&&(sJ.prototype[sZ]=sJ.prototype.inspect),sJ.prototype.compare=function(e,t,n,r,a){if(iw(e,Uint8Array)&&(e=sJ.from(e,e.offset,e.byteLength)),!sJ.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return -1;if(t>=n)return 1;if(t>>>=0,n>>>=0,r>>>=0,a>>>=0,this===e)return 0;let s=a-r,i=n-t,o=Math.min(s,i),l=this.slice(r,a),u=e.slice(t,n);for(let e=0;e<o;++e)if(l[e]!==u[e]){s=l[e],i=u[e];break}return s<i?-1:+(i<s)},sJ.prototype.includes=function(e,t,n){return -1!==this.indexOf(e,t,n)},sJ.prototype.indexOf=function(e,t,n){return s7(this,e,t,n,!0)},sJ.prototype.lastIndexOf=function(e,t,n){return s7(this,e,t,n,!1)},sJ.prototype.write=function(e,t,n,r){var a,s,i,o,l,u,h,p;if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let d=this.length-t;if((void 0===n||n>d)&&(n=d),e.length>0&&(n<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let c=!1;for(;;)switch(r){case"hex":return function(e,t,n,r){let a;n=Number(n)||0;let s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;let i=t.length;for(r>i/2&&(r=i/2),a=0;a<r;++a){var o;let r=parseInt(t.substr(2*a,2),16);if((o=r)!=o)break;e[n+a]=r}return a}(this,e,t,n);case"utf8":case"utf-8":return a=t,s=n,ix(iy(e,this.length-a),this,a,s);case"ascii":case"latin1":case"binary":return i=t,o=n,ix(function(e){let t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(e),this,i,o);case"base64":return l=t,u=n,ix(ib(e),this,l,u);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return h=t,p=n,ix(function(e,t){let n,r,a=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)r=(n=e.charCodeAt(s))>>8,a.push(n%256),a.push(r);return a}(e,this.length-h),this,h,p);default:if(c)throw TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),c=!0}},sJ.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},sJ.prototype.slice=function(e,t){let n=this.length;e=~~e,t=void 0===t?n:~~t,e<0?(e+=n)<0&&(e=0):e>n&&(e=n),t<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);let r=this.subarray(e,t);return Object.setPrototypeOf(r,sJ.prototype),r},sJ.prototype.readUintLE=sJ.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||it(e,t,this.length);let r=this[e],a=1,s=0;for(;++s<t&&(a*=256);)r+=this[e+s]*a;return r},sJ.prototype.readUintBE=sJ.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||it(e,t,this.length);let r=this[e+--t],a=1;for(;t>0&&(a*=256);)r+=this[e+--t]*a;return r},sJ.prototype.readUint8=sJ.prototype.readUInt8=function(e,t){return e>>>=0,t||it(e,1,this.length),this[e]},sJ.prototype.readUint16LE=sJ.prototype.readUInt16LE=function(e,t){return e>>>=0,t||it(e,2,this.length),this[e]|this[e+1]<<8},sJ.prototype.readUint16BE=sJ.prototype.readUInt16BE=function(e,t){return e>>>=0,t||it(e,2,this.length),this[e]<<8|this[e+1]},sJ.prototype.readUint32LE=sJ.prototype.readUInt32LE=function(e,t){return e>>>=0,t||it(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+0x1000000*this[e+3]},sJ.prototype.readUint32BE=sJ.prototype.readUInt32BE=function(e,t){return e>>>=0,t||it(e,4,this.length),0x1000000*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},sJ.prototype.readBigUInt64LE=ik(function(e){ic(e>>>=0,"offset");let t=this[e],n=this[e+7];(void 0===t||void 0===n)&&im(e,this.length-8);let r=t+256*this[++e]+65536*this[++e]+0x1000000*this[++e],a=this[++e]+256*this[++e]+65536*this[++e]+0x1000000*n;return BigInt(r)+(BigInt(a)<<BigInt(32))}),sJ.prototype.readBigUInt64BE=ik(function(e){ic(e>>>=0,"offset");let t=this[e],n=this[e+7];(void 0===t||void 0===n)&&im(e,this.length-8);let r=0x1000000*t+65536*this[++e]+256*this[++e]+this[++e],a=0x1000000*this[++e]+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(a)}),sJ.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||it(e,t,this.length);let r=this[e],a=1,s=0;for(;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},sJ.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||it(e,t,this.length);let r=t,a=1,s=this[e+--r];for(;r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},sJ.prototype.readInt8=function(e,t){return(e>>>=0,t||it(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},sJ.prototype.readInt16LE=function(e,t){e>>>=0,t||it(e,2,this.length);let n=this[e]|this[e+1]<<8;return 32768&n?0xffff0000|n:n},sJ.prototype.readInt16BE=function(e,t){e>>>=0,t||it(e,2,this.length);let n=this[e+1]|this[e]<<8;return 32768&n?0xffff0000|n:n},sJ.prototype.readInt32LE=function(e,t){return e>>>=0,t||it(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},sJ.prototype.readInt32BE=function(e,t){return e>>>=0,t||it(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},sJ.prototype.readBigInt64LE=ik(function(e){ic(e>>>=0,"offset");let t=this[e],n=this[e+7];return(void 0===t||void 0===n)&&im(e,this.length-8),(BigInt(this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24))<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+0x1000000*this[++e])}),sJ.prototype.readBigInt64BE=ik(function(e){ic(e>>>=0,"offset");let t=this[e],n=this[e+7];return(void 0===t||void 0===n)&&im(e,this.length-8),(BigInt((t<<24)+65536*this[++e]+256*this[++e]+this[++e])<<BigInt(32))+BigInt(0x1000000*this[++e]+65536*this[++e]+256*this[++e]+n)}),sJ.prototype.readFloatLE=function(e,t){return e>>>=0,t||it(e,4,this.length),x(this,e,!0,23,4)},sJ.prototype.readFloatBE=function(e,t){return e>>>=0,t||it(e,4,this.length),x(this,e,!1,23,4)},sJ.prototype.readDoubleLE=function(e,t){return e>>>=0,t||it(e,8,this.length),x(this,e,!0,52,8)},sJ.prototype.readDoubleBE=function(e,t){return e>>>=0,t||it(e,8,this.length),x(this,e,!1,52,8)},sJ.prototype.writeUintLE=sJ.prototype.writeUIntLE=function(e,t,n,r){if(e*=1,t>>>=0,n>>>=0,!r){let r=Math.pow(2,8*n)-1;ir(this,e,t,n,r,0)}let a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},sJ.prototype.writeUintBE=sJ.prototype.writeUIntBE=function(e,t,n,r){if(e*=1,t>>>=0,n>>>=0,!r){let r=Math.pow(2,8*n)-1;ir(this,e,t,n,r,0)}let a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},sJ.prototype.writeUint8=sJ.prototype.writeUInt8=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,1,255,0),this[t]=255&e,t+1},sJ.prototype.writeUint16LE=sJ.prototype.writeUInt16LE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},sJ.prototype.writeUint16BE=sJ.prototype.writeUInt16BE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},sJ.prototype.writeUint32LE=sJ.prototype.writeUInt32LE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,4,0xffffffff,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},sJ.prototype.writeUint32BE=sJ.prototype.writeUInt32BE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,4,0xffffffff,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},sJ.prototype.writeBigUInt64LE=ik(function(e,t=0){return ia(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),sJ.prototype.writeBigUInt64BE=ik(function(e,t=0){return is(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),sJ.prototype.writeIntLE=function(e,t,n,r){if(e*=1,t>>>=0,!r){let r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let a=0,s=1,i=0;for(this[t]=255&e;++a<n&&(s*=256);)e<0&&0===i&&0!==this[t+a-1]&&(i=1),this[t+a]=(e/s|0)-i&255;return t+n},sJ.prototype.writeIntBE=function(e,t,n,r){if(e*=1,t>>>=0,!r){let r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let a=n-1,s=1,i=0;for(this[t+a]=255&e;--a>=0&&(s*=256);)e<0&&0===i&&0!==this[t+a+1]&&(i=1),this[t+a]=(e/s|0)-i&255;return t+n},sJ.prototype.writeInt8=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},sJ.prototype.writeInt16LE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},sJ.prototype.writeInt16BE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},sJ.prototype.writeInt32LE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,4,0x7fffffff,-0x80000000),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},sJ.prototype.writeInt32BE=function(e,t,n){return e*=1,t>>>=0,n||ir(this,e,t,4,0x7fffffff,-0x80000000),e<0&&(e=0xffffffff+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},sJ.prototype.writeBigInt64LE=ik(function(e,t=0){return ia(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),sJ.prototype.writeBigInt64BE=ik(function(e,t=0){return is(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),sJ.prototype.writeFloatLE=function(e,t,n){return io(this,e,t,!0,n)},sJ.prototype.writeFloatBE=function(e,t,n){return io(this,e,t,!1,n)},sJ.prototype.writeDoubleLE=function(e,t,n){return il(this,e,t,!0,n)},sJ.prototype.writeDoubleBE=function(e,t,n){return il(this,e,t,!1,n)},sJ.prototype.copy=function(e,t,n,r){if(!sJ.isBuffer(e))throw TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw RangeError("Index out of range");if(r<0)throw RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);let a=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),a},sJ.prototype.fill=function(e,t,n,r){let a;if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw TypeError("encoding must be a string");if("string"==typeof r&&!sJ.isEncoding(r))throw TypeError("Unknown encoding: "+r);if(1===e.length){let t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw RangeError("Out of range index");if(n<=t)return this;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{let s=sJ.isBuffer(e)?e:sJ.from(e,r),i=s.length;if(0===i)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=s[a%i]}return this};let iu={};function ih(e,t,n){iu[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function ip(e){let t="",n=e.length,r=+("-"===e[0]);for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function id(e,t,n,r,a,s){if(e>n||e<t){let r,a="bigint"==typeof t?"n":"";throw r=s>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${(s+1)*8}${a}`:`>= -(2${a} ** ${(s+1)*8-1}${a}) and < 2 ** ${(s+1)*8-1}${a}`:`>= ${t}${a} and <= ${n}${a}`,new iu.ERR_OUT_OF_RANGE("value",r,e)}ic(a,"offset"),(void 0===r[a]||void 0===r[a+s])&&im(a,r.length-(s+1))}function ic(e,t){if("number"!=typeof e)throw new iu.ERR_INVALID_ARG_TYPE(t,"number",e)}function im(e,t,n){if(Math.floor(e)!==e)throw ic(e,n),new iu.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new iu.ERR_BUFFER_OUT_OF_BOUNDS;throw new iu.ERR_OUT_OF_RANGE(n||"offset",`>= ${+!!n} and <= ${t}`,e)}ih("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),ih("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),ih("ERR_OUT_OF_RANGE",function(e,t,n){let r=`The value of "${e}" is out of range.`,a=n;return Number.isInteger(n)&&Math.abs(n)>0x100000000?a=ip(String(n)):"bigint"==typeof n&&(a=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(a=ip(a)),a+="n"),r+=` It must be ${t}. Received ${a}`},RangeError);let ig=/[^+/0-9A-Za-z-_]/g;function iy(e,t){let n;t=t||1/0;let r=e.length,a=null,s=[];for(let i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319||i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=(a-55296<<10|n-56320)+65536}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else if(n<1114112){if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}else throw Error("Invalid code point")}return s}function ib(e){return function(e){var t,n,r=sX(e),a=r[0],s=r[1],i=new sH((a+s)*3/4-s),o=0,l=s>0?a-4:a;for(n=0;n<l;n+=4)t=sG[e.charCodeAt(n)]<<18|sG[e.charCodeAt(n+1)]<<12|sG[e.charCodeAt(n+2)]<<6|sG[e.charCodeAt(n+3)],i[o++]=t>>16&255,i[o++]=t>>8&255,i[o++]=255&t;return 2===s&&(t=sG[e.charCodeAt(n)]<<2|sG[e.charCodeAt(n+1)]>>4,i[o++]=255&t),1===s&&(t=sG[e.charCodeAt(n)]<<10|sG[e.charCodeAt(n+1)]<<4|sG[e.charCodeAt(n+2)]>>2,i[o++]=t>>8&255,i[o++]=255&t),i}(function(e){if((e=(e=e.split("=")[0]).trim().replace(ig,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function ix(e,t,n,r){let a;for(a=0;a<r&&!(a+n>=t.length)&&!(a>=e.length);++a)t[a+n]=e[a];return a}function iw(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}let iv=function(){let e="0123456789abcdef",t=Array(256);for(let n=0;n<16;++n){let r=16*n;for(let a=0;a<16;++a)t[r+a]=e[n]+e[a]}return t}();function ik(e){return"undefined"==typeof BigInt?iI:e}function iI(){throw Error("BigInt not supported")}async function iS(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),r=0;for(let e=0;e<t.length;e++){let a=t[e],s=new Uint8Array(new Uint32Array([a.length]).buffer);n.set(s,r),r+=4,n.set(a,r),r+=a.length}e(n)});r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}(await Promise.all(r)),specs:n}}function iN(e,t){let n=new sw(e),r={},a=0;for(let e of t){let t=function(e,t){let n,r=Q(e.shape);if("quantization"in e)n=sx[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else n=sx[e.dtype];return r*n}(e,(e,t)=>n.slice(a+e,a+t));r[e.name]=iC(e,n.slice(a,a+t)),a+=t}return r}async function iT(e,t){let n,r=Q(e.shape);if("quantization"in e)n=sx[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let n=0;n<r;n++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else n=sx[e.dtype];return r*n}function iC(e,t){let n,r=e.name,a=e.dtype,s=e.shape,i=Q(s),o=0;if("quantization"in e){let s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s&&"scale"in s))throw Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===s.dtype){if("float32"!==a)throw Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${a}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let l=sx[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===s.dtype||"uint16"===s.dtype){n=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=t*s.scale+s.min}}else if("float16"===s.dtype)n=(function(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;(8388608&t)==0;)n-=8388608,t<<=1;return(t&=-8388609)|(n+=0x38800000)},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=0x38000000+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=0x47800000,e[32]=0x80000000,e[63]=0xc7800000;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=0x80000000+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}})()(u);else throw Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);else if("int32"===a){if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);n=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=Math.round(t*s.scale+s.min)}}else throw Error(`Unsupported dtype in weight '${r}': ${a}`);o+=i*l}else if("string"===a){let r=Q(e.shape);n=[];for(let e=0;e<r;e++){let e=new Uint32Array(t.slice(o,o+4))[0];o+=4;let r=new Uint8Array(t.slice(o,o+e));n.push(r),o+=e}}else{let e=sx[a];if("float32"===a)n=new Float32Array(t);else if("int32"===a)n=new Int32Array(t);else if("bool"===a)n=new Uint8Array(t);else if("complex64"===a){n=new Float32Array(t);let e=new Float32Array(n.length/2),r=new Float32Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=n[2*t],r[t]=n[2*t+1];let a=sb(e,s,"float32"),i=sb(r,s,"float32"),o=sg(a,i);return a.dispose(),i.dispose(),o}else throw Error(`Unsupported dtype in weight '${r}': ${a}`);o+=i*e}return sb(n,s,a)}async function i$(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=n-r.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function iE(e,t){let n={},r=e.getReader(),a=new ArrayBuffer(0);for(let e of t){let t=await iT(e,async(e,t)=>(a=await i$(r,a,t)).slice(e,t)),s=(a=await i$(r,a,t)).slice(0,t);a=a.slice(t);let i=iC(e,s);if(n[e.name]=i,"webgpu"===sM()){let e=sW();"uploadToGPU"in e&&Q(i.shape)>=eP.get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}let iA="undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa;function iR(e){return iA?sJ.byteLength(e,"utf8"):new Blob([e]).size}function iF(e){return sw.join(e)}function iD(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function iO(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function i_(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function iM(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),i_(e,n,r)}function iL(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:iR(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:iR(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new sw(e.weightData).byteLength}}function iz(e){let t=[];for(let n of e)t.push(...n.weights);return t}class iP{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==iP.instance&&(iP.instance=new iP),iP.instance}static registerSaveRouter(e){iP.getInstance().saveRouters.push(e)}static registerLoadRouter(e){iP.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return iP.getHandlers(e,"save")}static getLoadHandlers(e,t){return iP.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?iP.getInstance().loadRouters:iP.getInstance().saveRouters).forEach(t=>{let a=t(e,n);null!==a&&r.push(a)}),r}}let iB=e=>iP.registerSaveRouter(e),iW=e=>iP.registerLoadRouter(e),iU=e=>iP.getSaveHandlers(e),iV=(e,t)=>iP.getLoadHandlers(e,t),iG="tensorflowjs",iH="models_store",ij="model_info_store";function iq(){if(!eP.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function iK(e){let t=e.result;t.createObjectStore(iH,{keyPath:"modelPath"}),t.createObjectStore(ij,{keyPath:"modelPath"})}class iX{constructor(e){if(this.indexedDB=iq(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let r=this.indexedDB.open(iG,1);r.onupgradeneeded=()=>iK(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(iH,"readonly"),r=t.objectStore(iH).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s;t.weightData=sw.join(t.weightData);let i=iL(t),o=a.transaction(ij,"readwrite"),l=o.objectStore(ij);try{r=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(e){return n(e)}r.onsuccess=()=>{let r,u=(s=a.transaction(iH,"readwrite")).objectStore(iH);try{r=u.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(e){return n(e)}r.onsuccess=()=>e({modelArtifactsInfo:i}),r.onerror=e=>{let t=(l=o.objectStore(ij)).delete(this.modelPath);t.onsuccess=()=>(a.close(),n(r.error)),t.onerror=e=>(a.close(),n(r.error))}},r.onerror=e=>(a.close(),n(r.error)),o.oncomplete=()=>{null==s?a.close():s.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}iX.URL_SCHEME="indexeddb://";let iZ=e=>{var t;return eP.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(iX.URL_SCHEME)?(t=e.slice(iX.URL_SCHEME.length),new iX(t)):null};iP.registerSaveRouter(iZ),iP.registerLoadRouter(iZ);let iY="tensorflowjs_models",iJ="info";function iQ(e){return{info:[iY,e,iJ].join("/"),topology:[iY,e,"model_topology"].join("/"),weightSpecs:[iY,e,"weight_specs"].join("/"),weightData:[iY,e,"weight_data"].join("/"),modelMetadata:[iY,e,"model_metadata"].join("/")}}function i0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class i1{constructor(e){if(!eP.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=iQ(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=iL(e),a=sw.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(iA)return sJ.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw i0(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(iA){let t=sJ.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}i1.URL_SCHEME="localstorage://";let i2=e=>{var t;return eP.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(i1.URL_SCHEME)?(t=e.slice(i1.URL_SCHEME.length),new i1(t)):null};iP.registerSaveRouter(i2),iP.registerLoadRouter(i2);class i3{constructor(){this.managers={}}static getInstance(){return null==i3.instance&&(i3.instance=new i3),i3.instance}static registerManager(e,t){Z(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Z(e.length>0,()=>"scheme must not be an empty string.");let n=i3.getInstance();Z(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=i3.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(i3.getInstance().managers)}}function i4(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${i3.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function i6(e,t,n=!1){Z(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=iP.getLoadHandlers(e);Z(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Z(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=iP.getSaveHandlers(t);Z(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Z(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=i4(e).scheme,l=i4(e).path,u=o===i4(e).scheme,h=await a.load();n&&u&&await i3.getManager(o).removeModel(l);let p=await i.save(h);return n&&!u&&await i3.getManager(o).removeModel(l),p.modelArtifactsInfo}async function i5(){let e=i3.getSchemes(),t={};for(let n of e){let e=await i3.getManager(n).listModels();for(let r in e)t[n+"://"+r]=e[r]}return t}async function i8(e){let t=i4(e);return i3.getManager(t.scheme).removeModel(t.path)}async function i7(e,t){return i6(e,t,!1)}async function i9(e,t){return i6(e,t,!0)}if(eP.get("IS_BROWSER")){eP.setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!eP.getBool("USE_SETTIMEOUTCUSTOM"))return void setTimeout(e,t);this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return r6(e)}});try{i3.registerManager(i1.URL_SCHEME,new class{constructor(){Z(eP.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Z("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=iY+"/",n="/"+iJ;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;let n=iQ(e=(t=e).startsWith(i1.URL_SCHEME)?t.slice(i1.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw Error(`Cannot find model at path '${e}'`);let r=JSON.parse(this.LS.getItem(n.info));return i0(n),r}})}catch(e){}try{i3.registerManager(iX.URL_SCHEME,new class{constructor(){this.indexedDB=iq()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(iG,1);n.onupgradeneeded=()=>iK(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(ij,"readonly"),s=a.objectStore(ij).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(iX.URL_SCHEME)?t.slice(iX.URL_SCHEME.length):t,new Promise((t,n)=>{let r=this.indexedDB.open(iG,1);r.onupgradeneeded=()=>iK(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(ij,"readwrite"),o=i.objectStore(ij),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{let r=(a=s.transaction(iH,"readwrite")).objectStore(iH).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)})}})}catch(e){}}let oe={importFetch:()=>O("foUwZ")};function ot(e,t="float32",n){return t=t||"float32",eR(e),new aq(e,t,n)}eP.get("IS_NODE")&&!eP.get("IS_BROWSER")&&eP.setPlatform("node",new class{constructor(){this.util=O("foUwZ"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=eP.global.fetch?eP.global.fetch(e,t):(null==n&&(n=oe.importFetch()),n(e,t))}now(){let e=eB.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});let on=sm({cast_:function(e,t){let n=sd(e,"x","cast");if(!em(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw Error("Only strings can be casted to strings");return sr.runKernel(tm,{x:n},{dtype:t})}}),or=sm({clone_:function(e){let t=sd(e,"x","clone","string_or_numeric");return sr.runKernel(t8,{x:t})}});function oa(e,t=!1){console.log(e.toString(t))}sn(),aX={buffer:ot,cast:on,clone:or,print:oa};let os=sm({add_:function(e,t){let n=sd(e,"a","add"),r=sd(t,"b","add");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(e4,a)}}),oi=sm({floorDiv_:function(e,t){let n=sd(e,"a","floorDiv"),r=sd(t,"b","floorDiv");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(t1,a)}}),oo=sm({div_:function(e,t){let n=sd(e,"a","div"),r=sd(t,"b","div");if([n,r]=a6(n,r),"int32"===n.dtype&&"int32"===r.dtype)return oi(n,r);let a={a:n,b:r};return sr.runKernel(tU,a,{})}}),ol=sm({mul_:function(e,t){let n=sd(e,"a","mul"),r=sd(t,"b","mul");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(nR,a)}}),ou=sm({sqrt_:function(e){let t=sd(e,"x","sqrt","float32");return sr.runKernel(rl,{x:t})}}),oh=sm({square_:function(e){let t=sd(e,"x","square");return sr.runKernel("Square",{x:t},{})}}),op=sm({zerosLike_:function(e){let t=sd(e,"x","zerosLike");return sr.runKernel(rM,{x:t})}});function od(e){return Z(eI(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=sd(t,"x","tf.grad","string_or_numeric"),a=null!=n?sd(n,"dy","tf.grad"):null;return sr.tidy(()=>{let{value:t,grads:n}=sr.gradients(()=>e(r),[r],a);return null!=a&&Y(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ob(n),n[0]})}}function oc(e){return Z(eI(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{Z(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=sc(t,"args","tf.grads","string_or_numeric"),a=null!=n?sd(n,"dy","tf.grads"):null;return sr.tidy(()=>{let{value:t,grads:n}=sr.gradients(()=>e(...r),r,a);return null!=a&&Y(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ob(n),n})}}function of(e){return Z(eI(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{Z(t instanceof aZ,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),Z(null==n||n instanceof aZ,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=sr.gradients(()=>e(t),[t],n);return ob(r),{grad:r[0],value:a}}}function om(e){return Z(eI(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{Z(Array.isArray(t)&&t.every(e=>e instanceof aZ),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),Z(null==n||n instanceof aZ,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=sr.gradients(()=>e(...t),t,n);return null!=n&&Y(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ob(r.grads),r}}function og(e,t){Z(eI(e),()=>"The f passed in variableGrads(f) must be a function"),Z(null==t||Array.isArray(t)&&t.every(e=>e instanceof aJ),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n)for(let e in t=[],sr.registeredVariables)t.push(sr.registeredVariables[e]);let r=n?t.filter(e=>!e.trainable):null,a=t.length;Z((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let{value:s,grads:i}=sr.gradients(e,t,null,!0);Z(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Z(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);let o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function oy(e){return sr.customGrad(e)}function ob(e){if(e.filter(e=>null==e).length>0)throw Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function ox(e,t){if((aB(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&aB(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sy(e,[],[],t)}var ow={};u(ow,"Serializable",()=>oI),u(ow,"SerializationMap",()=>oS),u(ow,"registerClass",()=>oN),u(ow,"getRegisteredName",()=>oT);let ov=new Map,ok=new Map;class oI{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class oS{constructor(){this.classNameMap={}}static getMap(){return null==oS.instance&&(oS.instance=new oS),oS.instance}static register(e){oS.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function oN(e,t,n){Z(null!=e.className,()=>"Class being registered does not have the static className property defined."),Z("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Z(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);let r=t+">"+n;return oS.register(e),ov.set(r,e),ok.set(e,r),e}function oT(e){return ok.has(e)?ok.get(e):e.className}class oC extends oI{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return(sR(a),t)?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return og(e,t)}dispose(){null!=this.iterations_&&sR(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ox(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(oC,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class o$ extends oC{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=sr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=sr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:sA(()=>op(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:sA(()=>op(r).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;sA(()=>{let e=os(ol(s,this.rho),ol(oh(a),1-this.rho)),t=ol(oo(ou(os(i,this.epsilon)),ou(os(s,this.epsilon))),a),n=os(ol(i,this.rho),ol(oh(t),1-this.rho));s.assign(e),i.assign(n);let o=os(ol(t,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(sR(this.accumulatedGrads.map(e=>e.variable)),sR(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function oE(e,t,n){eR(e),n=n||ek(t);let r={shape:e,value:t,dtype:n};return sr.runKernel(tJ,{},r)}class oA extends oC{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=sr.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:sA(()=>oE(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;sA(()=>{let e=os(s,oh(a));s.assign(e);let t=os(ol(oo(a,ou(os(e,sr.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&sR(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}let oR=sm({pow_:function(e,t){let n=sd(e,"base","pow"),r=sd(t,"exp","pow");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(nU,a)}}),oF=sm({sub_:function(e,t){let n=sd(e,"a","sub"),r=sd(t,"b","sub");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(rN,a)}});class oD extends oC{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],sA(()=>{this.accBeta1=ox(t).variable(),this.accBeta2=ox(n).variable()}),null==r&&(this.epsilon=sr.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);sA(()=>{let n=oF(1,this.accBeta1),r=oF(1,this.accBeta2);t.forEach((t,a)=>{let s=sr.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:sA(()=>op(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:sA(()=>op(s).variable(!1))});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=os(ol(o,this.beta1),ol(i,1-this.beta1)),h=os(ol(l,this.beta2),ol(oh(i),1-this.beta2)),p=oo(u,n),d=oo(h,r);o.assign(u),l.assign(h);let c=os(ol(oo(p,os(ou(d),this.epsilon)),-this.learningRate),s);s.assign(c)}),this.accBeta1.assign(ol(this.accBeta1,this.beta1)),this.accBeta2.assign(ol(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&sR(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&sR(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),sA(()=>{this.accBeta1.assign(oR(this.beta1,this.iterations_+1)),this.accBeta2.assign(oR(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}let oO=sm({abs_:function(e){let t=sd(e,"x","abs");return"complex64"===t.dtype?sr.runKernel(tx,{x:t}):sr.runKernel(e1,{x:t})}});var o_={};function oM(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function oL(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function oz(e,t){let n=Math.max(e.length,t.length),r=Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)r[n-a-1]=i;else if(1===i)r[n-a-1]=s;else if(s!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else r[n-a-1]=s}return r}u(o_,"getBroadcastDims",()=>oM),u(o_,"getReductionAxes",()=>oL),u(o_,"assertAndGetBroadcastShape",()=>oz);let oP=sm({maximum_:function(e,t){let n=sd(e,"a","maximum"),r=sd(t,"b","maximum");[n,r]=a6(n,r),"bool"===n.dtype&&(n=on(n,"int32"),r=on(r,"int32")),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(nx,a)}});class oB extends oC{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],sA(()=>{this.iteration=ox(0).variable(),this.accBeta1=ox(t).variable()}),null==r&&(this.epsilon=sr.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);sA(()=>{let n=oF(1,this.accBeta1),r=oo(-this.learningRate,os(ol(this.iteration,this.decay),1));t.forEach((t,a)=>{let s=sr.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:op(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:op(s).variable(!1)});let i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=os(ol(o,this.beta1),ol(i,1-this.beta1)),h=oP(ol(l,this.beta2),oO(i));o.assign(u),l.assign(h);let p=os(ol(oo(r,n),oo(u,os(h,this.epsilon))),s);s.assign(p)}),this.iteration.assign(os(this.iteration,1)),this.accBeta1.assign(ol(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&sR(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&sR(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class oW extends oC{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=sr.registeredVariables[t];sA(()=>{let e=os(ol(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=sF(ox(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class oU extends oW{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ox(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=sr.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:sA(()=>op(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&sA(()=>{let e,t=os(ol(this.m,a),s);e=this.useNesterov?os(ol(this.c,os(s,ol(t,this.m))),r):os(ol(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&sR(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class oV extends oC{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=sr.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let r=sr.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:sA(()=>op(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:sA(()=>op(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:sA(()=>op(r).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;sA(()=>{let e=os(ol(s,this.decay),ol(oh(a),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,o=os(ol(t,this.decay),ol(a,1-this.decay)),l=oo(ol(a,this.learningRate),ou(oF(e,os(oh(o),this.epsilon)))),u=os(ol(i,this.momentum),l);s.assign(e),t.assign(o),i.assign(u);let h=oF(r,u);r.assign(h)}else{let e=os(ol(s,this.decay),ol(oh(a),1-this.decay)),t=os(ol(i,this.momentum),oo(ol(a,this.learningRate),ou(os(e,this.epsilon))));s.assign(e),i.assign(t);let n=oF(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&sR(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&sR(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&sR(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}var oG={};u(oG,"AdadeltaOptimizer",()=>o$),u(oG,"AdagradOptimizer",()=>oA),u(oG,"AdamOptimizer",()=>oD),u(oG,"AdamaxOptimizer",()=>oB),u(oG,"MomentumOptimizer",()=>oU),u(oG,"Optimizer",()=>oC),u(oG,"OptimizerConstructors",()=>l3),u(oG,"RMSPropOptimizer",()=>oV),u(oG,"SGDOptimizer",()=>oW),u(oG,"Tensor",()=>aZ),u(oG,"TensorBuffer",()=>aq),u(oG,"Variable",()=>aJ),u(oG,"Rank",()=>c),u(oG,"sumOutType",()=>a2),u(oG,"upcastType",()=>a1),u(oG,"Reduction",()=>v),u(oG,"customGrad",()=>oy),u(oG,"grad",()=>od),u(oG,"grads",()=>oc),u(oG,"valueAndGrad",()=>of),u(oG,"valueAndGrads",()=>om),u(oG,"variableGrads",()=>og),u(oG,"Environment",()=>eM),u(oG,"env",()=>ez),u(oG,"ENV",()=>eP),u(oG,"version_core",()=>l2),u(oG,"nextFrame",()=>cP),u(oG,"browser",()=>lp),u(oG,"io",()=>oH),u(oG,"math",()=>ln),u(oG,"serialization",()=>ow),u(oG,"test_util",()=>lV),u(oG,"util",()=>r4),u(oG,"backend_util",()=>cB),u(oG,"broadcast_util",()=>o_),u(oG,"tensor_util",()=>aQ),u(oG,"slice_util",()=>lT),u(oG,"gather_util",()=>lw),u(oG,"scatter_util",()=>lk),u(oG,"device_util",()=>ss),u(oG,"kernel_impls",()=>fH),u(oG,"KernelBackend",()=>P),u(oG,"DataStorage",()=>z);var oH={};function oj(e){return new Promise(e=>setTimeout(e)).then(e)}u(oH,"copyModel",()=>i7),u(oH,"listModels",()=>i5),u(oH,"moveModel",()=>i9),u(oH,"removeModel",()=>i8),u(oH,"browserFiles",()=>oX),u(oH,"browserHTTPRequest",()=>o4),u(oH,"CompositeArrayBuffer",()=>sw),u(oH,"concatenateArrayBuffers",()=>iF),u(oH,"decodeWeights",()=>iN),u(oH,"decodeWeightsStream",()=>iE),u(oH,"encodeWeights",()=>iS),u(oH,"fromMemory",()=>o7),u(oH,"fromMemorySync",()=>o9),u(oH,"getLoadHandlers",()=>iV),u(oH,"getModelArtifactsForJSON",()=>iM),u(oH,"getModelArtifactsForJSONSync",()=>i_),u(oH,"getModelArtifactsInfoForJSON",()=>iL),u(oH,"getSaveHandlers",()=>iU),u(oH,"getWeightSpecs",()=>iz),u(oH,"http",()=>o3),u(oH,"isHTTPScheme",()=>o1),u(oH,"loadWeights",()=>oJ),u(oH,"registerLoadRouter",()=>iW),u(oH,"registerSaveRouter",()=>iB),u(oH,"weightsLoaderFactory",()=>oQ),u(oH,"withSaveHandler",()=>le),u(oH,"withSaveHandlerSync",()=>lt);class oq{constructor(e){if(!eP.getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(oq.URL_SCHEME)&&(e=e.slice(oq.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=sw.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=iO(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await oj(()=>s.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await oj(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:iL(e)}}}}oq.URL_SCHEME="downloads://";class oK{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;return null==a?void t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`)):null==r.weightsManifest?void t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`)):0===this.weightsFiles.length?void e({modelTopology:a}):void e(iM(r,e=>this.loadWeights(e)))},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e);return Promise.all(n.map(e=>this.loadWeightsFile(e,r[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=e=>{n(e.target.result)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(e=>iD(e.name)),r={};for(let a of e)a.paths.forEach(e=>{let a=iD(e);if(-1!==t.indexOf(a))throw Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function oX(e){return new oK(e)}function oZ(e,t,n,r){var a,s,i;Z(null!=(a=e)&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array"),s=n=null==n?0:n,i=r=null==r?1:r,Z(s>=0&&s<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`),Z(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),Z(i>=s,()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`);let o=0;return Promise.all(e.map(a=>(a.then(a=>(t(n+ ++o/e.length*(r-n)),a)),a)))}async function oY(e,t){null==t&&(t={});let n=null==t.fetchFunc?eP.platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await oZ(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await oZ(a,t.onProgress,.5,1)}async function oJ(e,t="",n,r){return oQ(e=>oY(e,{requestInit:r}))(e,t,n)}function oQ(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{let l=sx["quantization"in e?e.quantization.dtype:e.dtype]*Q(e.shape),u=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(u(),i[n]=!0)}):u(),o.push(e.name),n+=l})}),!i.every(e=>e)){let e=r.filter((e,t)=>!i[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});let h=await e(u),p={},d=0;return l.forEach(e=>{let n=t[e].paths.length,r=new sw(h.slice(d,d+n));s[e].forEach(e=>{let t=iN(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)p[e]=t[e]}),d+=n}),p}}iP.registerSaveRouter(e=>eP.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oq.URL_SCHEME)?function(e="model"){return new oq(e)}(e.slice(oq.URL_SCHEME.length)):null);class o0{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Z("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=eP.platform.fetch,Z(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Z(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=iO(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=sw.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:iL(e),responses:[a]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():iM(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=iz(e.weightsManifest),r=()=>(function(e,t){var n;let r,a=null==t.fetchFunc?eP.platform.fetch:t.fetchFunc,s=0;return null==(n=t.onProgress)||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;s<e.length;){r||(r=(await a(e[s],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await r.read();if(o){s++,r=void 0,null==(i=t.onProgress)||i.call(t,s/e.length);continue}n.enqueue(l);return}n.close()}})})(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:r})}async getWeightUrls(e){let[t,n]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(Array.isArray(this.path)?this.path[1]:this.path),r=this.weightPathPrefix||t,a=[],s=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):a.push(r+e+n);return this.weightUrlConverter&&a.push(...await Promise.all(s)),a}async loadWeights(e){let t=await this.getWeightUrls(e);return[iz(e),await oY(t,this.loadOptions)]}}function o1(e){return null!=e.match(o0.URL_SCHEME_REGEX)}o0.URL_SCHEME_REGEX=/^https?:\/\//;let o2=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else if(Array.isArray(e)?e.every(e=>o1(e)):o1(e))return o3(e,t);return null};function o3(e,t){return new o0(e,t)}function o4(e,t){return o3(e,t)}iP.registerSaveRouter(o2),iP.registerLoadRouter(o2);class o6{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class o5{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class o8{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function o7(e,t,n,r){let a=arguments;return new o8(o9(...a))}function o9(e,t,n,r){return 1!=arguments.length?(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new o6({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})):null!=e.modelTopology||null!=e.weightSpecs?new o6(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new o6({modelTopology:e}))}function le(e){return new o5(e)}function lt(e){return new o5(e)}var ln={};u(ln,"confusionMatrix",()=>lh);let lr=sm({matMul_:function(e,t,n=!1,r=!1){let a=sd(e,"a","matMul"),s=sd(t,"b","matMul");[a,s]=a6(a,s);let i={a:a,b:s};return sr.runKernel(tu,i,{transposeA:n,transposeB:r})}}),la=sm({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s=sd(e,"indices","oneHot","int32");return sr.runKernel(nz,{indices:s},{dtype:a,depth:t,onValue:n,offValue:r})}});var ls={};u(ls,"transpose",()=>lu);let li=sm({imag_:function(e){let t=sd(e,"input","imag");return sr.runKernel(t9,{input:t})}}),lo=sm({neg_:function(e){let t=sd(e,"x","neg");return sr.runKernel(nF,{x:t})}}),ll=sm({real_:function(e){let t=sd(e,"input","real");return sr.runKernel(nX,{input:t})}}),lu=sm({transpose_:function(e,t,n){let r=sd(e,"x","transpose");if(null==t&&(t=r.shape.map((e,t)=>t).reverse()),Z(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(e=>{Z(e>=0&&e<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={perm:t};return"complex64"===r.dtype?sA(()=>{let e=ll(r),t=li(r);return e=sr.runKernel(rR,{x:e},a),t=sr.runKernel(rR,{x:t},a),n&&(t=lo(t)),sg(e,t)}):sr.runKernel(rR,{x:r},a)}}),lh=sm({confusionMatrix_:function(e,t,n){let r=sd(e,"labels","confusionMatrix"),a=sd(t,"predictions","confusionMatrix");Z(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),Z(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),Z(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),Z(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),Z(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=la(on(r,"int32"),n),i=la(on(a,"int32"),n);return on(lr(lu(s),i),"int32")}});var lp={};function ld(e,t,n){if(J(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let r=sh(e,n);if(3!==r.length&&1!==r.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return sy(e,t,r,n)}u(lp,"fromPixelsAsync",()=>lm),u(lp,"toPixels",()=>ly),u(lp,"draw",()=>lb),u(lp,"fromPixels",()=>lx);let lc=!1;function lf(e,t=3){let n,a;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let s=!1,i=!1,o=!1,l=!1,u=!1,h=!1;if(e.data instanceof Uint8Array)s=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)i=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)l=!0;else if(null!=e.getContext)u=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)h=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=rX(rz,sr.backendName))return sr.runKernel(rz,{pixels:e},{numChannels:t});let[p,d]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(u)n=e.getContext("2d").getImageData(0,0,p,d).data;else if(i||s)n=e.data;else if(l||o||h){if(null==r)if("undefined"==typeof document)if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)r=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else r=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});r.canvas.width=p,r.canvas.height=d,r.drawImage(e,0,0,p,d),n=r.getImageData(0,0,p,d).data}if(4===t)a=new Int32Array(n);else{let e=p*d;a=new Int32Array(e*t);for(let r=0;r<e;r++)for(let e=0;e<t;++e)a[r*t+e]=n[4*r+e]}return ld(a,[d,p,t],"int32")}async function lm(e,t=3){var n;let r=null;if(eP.getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(n=e)&&0!==n.width&&0!==n.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}r=null!=t&&t.width===e.width&&t.height===e.height?t:e}else r=e;return lf(r,t)}function lg(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function ly(e,t){let n=sd(e,"img","toPixels");if(!(e instanceof aZ)){let e=n;n=on(e,"int32"),e.dispose()}lg(n);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){lc||null!=rX(tW,sr.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),lc=!0),t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function lb(e,t,n){let r=sd(e,"img","draw");if(!(e instanceof aZ)){let e=r;r=on(e,"int32"),e.dispose()}lg(r);var a=null==n?void 0:n.imageOptions;let s=(null==a?void 0:a.alpha)||1;if(s>1||s<0)throw Error(`Alpha value ${s} is suppoed to be in range [0 - 1].`);let i={image:r};sr.runKernel(tW,i,{canvas:t,options:n})}let lx=sm({fromPixels_:lf});var lw={};function lv(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Q(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let h=[...eN(e.shape).map(e=>e/u),1].slice(0,s);return[l,i,u,h]}u(lw,"prepareAndValidate",()=>lv);var lk={};function lI(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw Error(s+` update.rank != ${a+e.length-r}`);for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function lS(e,t,n){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}lI(n,t,e)}function lN(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a,l=Q(t.shape)/o,u=[...eN(n.slice(0,a)),1];return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:Q(n)}}u(lk,"validateUpdateShape",()=>lI),u(lk,"validateInput",()=>lS),u(lk,"calculateShapes",()=>lN);var lT={};function lC(e,t,n){let r=e.shape.length;Z(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),Z(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)Z(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function l$(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function lE(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function lA(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function lR(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function lF(e,t,n,r,a,s,i,o,l){let u=e.length,h=Array(u),p=Array(u),d=Array(u);if(t.length&&n>0){let l=t[0],u=n+1;h=lD(i,l,u,r,e),p=lO(o,l,u,a,e),d=lA(s,l,u,e)}else for(let t=0;t<u;t++)h[t]=lM(i,r,s,e,t,l),p[t]=lL(o,a,s,e,t,l),d[t]=l_(s,t,l);return{begin:h,end:p,strides:d}}function lD(e,t,n,r,a){let s=[...a],i=lR(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{var o,l,u;let i=(o=t,l=n,(u=a)<=o?u:u-(l-1)),h=r[i];e&1<<i&&(h=0),s[a]=h}return s}function lO(e,t,n,r,a){let s=[...a],i=lR(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{var o,l,u;let i=(o=t,l=n,(u=a)<=o?u:u-(l-1)),h=r[i];e&1<<i&&(h=Number.MAX_SAFE_INTEGER),s[a]=h}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=G(0,s[e],a[e])}return s}function l_(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function lM(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=G(0,i,l-1)}function lL(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?G(0,i,l):G(-1,i,l-1)}function lz(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function lP(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function lB(e,t,n){let r,a,s=e.shape.length;return(r="number"==typeof t?[t,...Array(s-1).fill(0)]:t.length<s?t.concat(Array(s-t.length).fill(0)):t.slice()).forEach(e=>{Z(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=(a=null==n?Array(s).fill(-1):"number"==typeof n?[n,...Array(s-1).fill(-1)]:n.length<s?n.concat(Array(s-n.length).fill(-1)):n).map((t,n)=>t>=0?t:(Z(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,a]}function lW(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=Array(t.length)).fill(1):u=r,null!=i&&(i&i-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");let h=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<p.dims;e++)h&&(1<<e&o)!=0&&p.numAddAxisAfterEllipsis++,1<<e&i&&(h=!0);!h&&(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};var c=p,f=d;f.beginMask=0,f.endMask=0,f.shrinkAxisMask=0;let m=0;f.beginValid=null!=c.begin,f.endValid=null!=c.end,f.begin=Array(f.dims),f.end=Array(f.dims),f.strides=Array(f.dims),f.finalShapeGatherIndices=[],f.finalShapeGatherIndicesSparse=[],f.inputShapeGatherIndicesSparse=Array(f.dims);for(let e=0;e<c.dims;e++)if(1<<e&c.ellipsisMask){let t=Math.min(f.dims-(c.dims-e)+1+c.numAddAxisAfterEllipsis,f.dims);for(;m<t;m++)f.begin[m]=0,f.end[m]=0,f.strides[m]=1,f.beginMask|=1<<m,f.endMask|=1<<m,f.finalShapeGatherIndices.push(m),f.finalShapeGatherIndicesSparse.push(-1),f.inputShapeGatherIndicesSparse[m]=e}else if(1<<e&c.newAxisMask)f.finalShapeGatherIndices.push(-2),f.finalShapeGatherIndicesSparse.push(-1);else{if(m===f.begin.length)throw Error(`Index out of range using input dim ${m}; input has only ${f.dims} dims, ${f.begin.length}.`);null!=c.begin&&(f.begin[m]=c.begin[e]),null!=c.end&&(f.end[m]=c.end[e]),f.strides[m]=c.strides[e],c.beginMask&1<<e&&(f.beginMask|=1<<m),c.endMask&1<<e&&(f.endMask|=1<<m),c.shrinkAxisMask&1<<e?(f.finalShapeGatherIndices.push(-1),f.finalShapeGatherIndicesSparse.push(-1),f.shrinkAxisMask|=1<<m):(f.finalShapeGatherIndices.push(m),f.finalShapeGatherIndicesSparse.push(e)),f.inputShapeGatherIndicesSparse[m]=e,m++}let g=!0,y=!0,b=!0,x=[],w=[];for(let t=0;t<e.length;++t){let n;if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let r=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){x.push(r?1:-1);continue}let s=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(r&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&1===d.strides[t];let o=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(r){let e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=lU(d.begin[t],0,d.strides[t],a,s,i),d.end[t]=lU(d.end[t],1,d.strides[t],a,s,i);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;g=g&&e,y=y&&(0===t&&1===d.strides[t]||e)}else g=g&&1===d.strides[t]&&o,y=y&&(0===t&&1===d.strides[t]||o);let l=!1;if(d.beginValid&&d.endValid?(n=d.end[t]-d.begin[t],l=!0):r?(n=1,l=!0):o&&a>=0&&(n=d.strides[t]<0?-a:a,l=!0),l){let e;e=0===n||n<0!=d.strides[t]<0?0:Math.trunc(n/d.strides[t])+ +(n%d.strides[t]!=0),x.push(e)}else x.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?w.push(x[t]):-2===t&&w.push(1)}return{finalShapeSparse:w.filter((e,t)=>-2!==d.finalShapeGatherIndices[t]),finalShape:w,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:d.begin,end:d.end,strides:d.strides}}function lU(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}u(lT,"assertParamsValid",()=>lC),u(lT,"maskToAxes",()=>l$),u(lT,"computeOutShape",()=>lE),u(lT,"stridesWithElidedDims",()=>lA),u(lT,"getNormalizedAxes",()=>lF),u(lT,"startIndicesWithElidedDims",()=>lD),u(lT,"stopIndicesWithElidedDims",()=>lO),u(lT,"startForAxis",()=>lM),u(lT,"stopForAxis",()=>lL),u(lT,"stridesForAxis",()=>l_),u(lT,"isSliceContinous",()=>lz),u(lT,"computeFlatOffset",()=>lP),u(lT,"parseSliceParams",()=>lB),u(lT,"sliceInfo",()=>lW);var lV={};u(lV,"TEST_EPSILON_FLOAT16",()=>lG),u(lV,"expectArraysClose",()=>lH),u(lV,"testEpsilon",()=>lj),u(lV,"expectPromiseToFail",()=>lK),u(lV,"expectArraysEqual",()=>lX),u(lV,"expectNumbersClose",()=>lZ),u(lV,"expectValuesInRange",()=>lJ),u(lV,"expectArrayBuffersEqual",()=>lQ),u(lV,"encodeStrings",()=>function e(t){for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?e(r):t[n]=az(r)}return t}),u(lV,"createVideoElement",()=>l0),u(lV,"play",()=>l1);let lG=.1;function lH(e,t,n){return null==n&&(n=lj()),lq(e,t,(e,t)=>lY(e,t,n))}function lj(){return 32===sr.backend.floatPrecision()?.001:lG}function lq(e,t,n){let r=!0;if((aB(e)||aB(t))&&(r=!1),aB(e)&&aB(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=sh(e),r=sh(t);if(!en(n,r))throw Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=aB(e)?e:aW(e),s=aB(t)?t:aW(t);if(a.length!==s.length)throw Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.
Actual:   ${a}.
Expected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function lK(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function lX(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ex(e)||ex(e[0])||ex(t)||ex(t[0])?lq(e,n,(e,t)=>e==t):lq(e,t,(e,t)=>lY(e,t,0))}function lZ(e,t,n){if(null==n&&(n=lj()),!lY(e,t,n))throw Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function lY(e,t,n){return!(isFinite(e)||isFinite(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function lJ(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function lQ(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function l0(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function l1(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}let l2="4.22.0";class l3{static sgd(e){return new oW(e)}static momentum(e,t,n=!1){return new oU(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new oV(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new oD(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new o$(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new oB(e,t,n,r,a)}static adagrad(e,t=.1){return new oA(e,t)}}var l4={};u(l4,"spectral",()=>cE),u(l4,"signal",()=>cA),u(l4,"image",()=>cR),u(l4,"linalg",()=>cF),u(l4,"losses",()=>cD),u(l4,"sparse",()=>cO),u(l4,"string",()=>c_),u(l4,"abs",()=>oO),u(l4,"acos",()=>l6),u(l4,"acosh",()=>l5),u(l4,"add",()=>os),u(l4,"addN",()=>l8),u(l4,"all",()=>l7),u(l4,"any",()=>l9),u(l4,"argMax",()=>ue),u(l4,"argMin",()=>ut),u(l4,"asin",()=>un),u(l4,"asinh",()=>ur),u(l4,"atan",()=>ua),u(l4,"atan2",()=>us),u(l4,"atanh",()=>ui),u(l4,"avgPool",()=>uS),u(l4,"avgPool3d",()=>uN),u(l4,"basicLSTMCell",()=>uA),u(l4,"batchToSpaceND",()=>uR),u(l4,"batchNorm",()=>uF),u(l4,"batchNorm2d",()=>uD),u(l4,"batchNorm3d",()=>uO),u(l4,"batchNorm4d",()=>u_),u(l4,"bincount",()=>uM),u(l4,"bitwiseAnd",()=>uL),u(l4,"broadcastArgs",()=>uz),u(l4,"broadcastTo",()=>uP),u(l4,"buffer",()=>ot),u(l4,"cast",()=>on),u(l4,"ceil",()=>uB),u(l4,"clipByValue",()=>uW),u(l4,"clone",()=>or),u(l4,"complex",()=>sg),u(l4,"concat",()=>uT),u(l4,"concat1d",()=>uU),u(l4,"concat2d",()=>uV),u(l4,"concat3d",()=>uG),u(l4,"concat4d",()=>uH),u(l4,"conv1d",()=>uq),u(l4,"conv2d",()=>uj),u(l4,"conv2dTranspose",()=>uX),u(l4,"conv3d",()=>uZ),u(l4,"conv3dTranspose",()=>uJ),u(l4,"cos",()=>uQ),u(l4,"cosh",()=>u0),u(l4,"cumprod",()=>u1),u(l4,"cumsum",()=>u2),u(l4,"denseBincount",()=>u3),u(l4,"depthToSpace",()=>u4),u(l4,"depthwiseConv2d",()=>u6),u(l4,"diag",()=>u5),u(l4,"dilation2d",()=>u8),u(l4,"div",()=>oo),u(l4,"divNoNan",()=>he),u(l4,"dot",()=>ht),u(l4,"einsum",()=>hn),u(l4,"elu",()=>hr),u(l4,"ensureShape",()=>ha),u(l4,"equal",()=>u7),u(l4,"erf",()=>hs),u(l4,"euclideanNorm",()=>hw),u(l4,"exp",()=>hv),u(l4,"expandDims",()=>hk),u(l4,"expm1",()=>hI),u(l4,"eye",()=>hN),u(l4,"fill",()=>oE),u(l4,"floor",()=>hT),u(l4,"floorDiv",()=>oi),u(l4,"gather",()=>hC),u(l4,"greater",()=>h$),u(l4,"greaterEqual",()=>hE),u(l4,"imag",()=>li),u(l4,"isFinite",()=>hA),u(l4,"isInf",()=>hR),u(l4,"isNaN",()=>hF),u(l4,"leakyRelu",()=>hD),u(l4,"less",()=>hO),u(l4,"lessEqual",()=>h_),u(l4,"linspace",()=>hM),u(l4,"localResponseNormalization",()=>hL),u(l4,"log",()=>hz),u(l4,"log1p",()=>hP),u(l4,"logSigmoid",()=>hW),u(l4,"logSoftmax",()=>hU),u(l4,"logSumExp",()=>hV),u(l4,"logicalAnd",()=>hG),u(l4,"logicalNot",()=>hH),u(l4,"logicalOr",()=>hj),u(l4,"logicalXor",()=>hq),u(l4,"lowerBound",()=>hZ),u(l4,"matMul",()=>lr),u(l4,"max",()=>hg),u(l4,"maxPool",()=>hY),u(l4,"maxPool3d",()=>hJ),u(l4,"maxPoolWithArgmax",()=>hQ),u(l4,"maximum",()=>oP),u(l4,"mean",()=>h0),u(l4,"meshgrid",()=>h3),u(l4,"min",()=>hy),u(l4,"minimum",()=>h4),u(l4,"mirrorPad",()=>h6),u(l4,"mod",()=>h5),u(l4,"moments",()=>h8),u(l4,"mul",()=>ol),u(l4,"multiRNNCell",()=>h7),u(l4,"multinomial",()=>h9),u(l4,"neg",()=>lo),u(l4,"notEqual",()=>pe),u(l4,"oneHot",()=>la),u(l4,"ones",()=>h2),u(l4,"onesLike",()=>pt),u(l4,"outerProduct",()=>pn),u(l4,"pad",()=>pr),u(l4,"pad1d",()=>pa),u(l4,"pad2d",()=>ps),u(l4,"pad3d",()=>pi),u(l4,"pad4d",()=>po),u(l4,"pool",()=>pu),u(l4,"pow",()=>oR),u(l4,"prelu",()=>ph),u(l4,"print",()=>oa),u(l4,"prod",()=>pp),u(l4,"raggedGather",()=>pd),u(l4,"raggedRange",()=>pc),u(l4,"raggedTensorToTensor",()=>pf),u(l4,"rand",()=>pm),u(l4,"randomGamma",()=>pC),u(l4,"randomNormal",()=>p$),u(l4,"randomStandardNormal",()=>pE),u(l4,"randomUniform",()=>pA),u(l4,"randomUniformInt",()=>pR),u(l4,"range",()=>pF),u(l4,"real",()=>ll),u(l4,"reciprocal",()=>pD),u(l4,"relu",()=>pO),u(l4,"relu6",()=>p_),u(l4,"reshape",()=>uI),u(l4,"reverse",()=>pM),u(l4,"reverse1d",()=>pL),u(l4,"reverse2d",()=>pz),u(l4,"reverse3d",()=>pP),u(l4,"reverse4d",()=>pB),u(l4,"round",()=>pW),u(l4,"rsqrt",()=>pU),u(l4,"scalar",()=>ox),u(l4,"selu",()=>pV),u(l4,"separableConv2d",()=>pG),u(l4,"setdiff1dAsync",()=>pH),u(l4,"sigmoid",()=>uC),u(l4,"sign",()=>pj),u(l4,"sin",()=>pq),u(l4,"sinh",()=>pK),u(l4,"slice",()=>u$),u(l4,"slice1d",()=>pX),u(l4,"slice2d",()=>pZ),u(l4,"slice3d",()=>pY),u(l4,"slice4d",()=>pJ),u(l4,"softmax",()=>pQ),u(l4,"softplus",()=>hB),u(l4,"spaceToBatchND",()=>pl),u(l4,"fft",()=>p0),u(l4,"ifft",()=>p1),u(l4,"irfft",()=>p2),u(l4,"rfft",()=>p4),u(l4,"split",()=>p3),u(l4,"sqrt",()=>ou),u(l4,"square",()=>oh),u(l4,"squaredDifference",()=>p6),u(l4,"squeeze",()=>p5),u(l4,"stack",()=>p8),u(l4,"step",()=>p7),u(l4,"stridedSlice",()=>p9),u(l4,"sub",()=>oF),u(l4,"sum",()=>hb),u(l4,"tan",()=>de),u(l4,"tanh",()=>uE),u(l4,"tensor",()=>sb),u(l4,"tensor1d",()=>dt),u(l4,"tensor2d",()=>dn),u(l4,"tensor3d",()=>ld),u(l4,"tensor4d",()=>dr),u(l4,"tensor5d",()=>da),u(l4,"tensor6d",()=>ds),u(l4,"tensorScatterUpdate",()=>di),u(l4,"tile",()=>hS),u(l4,"topk",()=>dl),u(l4,"truncatedNormal",()=>du),u(l4,"unique",()=>dh),u(l4,"unsortedSegmentSum",()=>dp),u(l4,"unstack",()=>dd),u(l4,"upperBound",()=>dc),u(l4,"variable",()=>df),u(l4,"where",()=>u9),u(l4,"whereAsync",()=>dg),u(l4,"zeros",()=>h1),u(l4,"zerosLike",()=>op),u(l4,"op",()=>sm),u(l4,"OP_SCOPE_SUFFIX",()=>sf),u(l4,"fused",()=>dO);let l6=sm({acos_:function(e){let t=sd(e,"x","acos");return sr.runKernel(e2,{x:t})}}),l5=sm({acosh_:function(e){let t=sd(e,"x","acosh");return sr.runKernel(e3,{x:t})}}),l8=sm({addN_:function(e){Z(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),Z(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>sd(e,`tensors${t}`,"addN")),n=t[0];return t.forEach(e=>{if(e.dtype!==n.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!en(e.shape,n.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),sr.runKernel(e6,t)}}),l7=sm({all_:function(e,t=null,n=!1){let r=sd(e,"x","all","bool");return sr.runKernel(e5,{x:r},{axis:t,keepDims:n})}}),l9=sm({any_:function(e,t=null,n=!1){let r=sd(e,"x","any","bool");return sr.runKernel(e8,{x:r},{axis:t,keepDims:n})}}),ue=sm({argMax_:function(e,t=0){let n=sd(e,"x","argMax");return sr.runKernel(e7,{x:n},{axis:t})}}),ut=sm({argMin_:function(e,t=0){let n=sd(e,"x","argMin");return sr.runKernel(e9,{x:n},{axis:t})}}),un=sm({asin_:function(e){let t=sd(e,"x","asin");return sr.runKernel(te,{x:t})}}),ur=sm({asinh_:function(e){let t=sd(e,"x","asinh");return sr.runKernel(tt,{x:t})}}),ua=sm({atan_:function(e){let t=sd(e,"x","atan");return sr.runKernel(tn,{x:t})}}),us=sm({atan2_:function(e,t){let n=sd(e,"a","atan2"),r=sd(t,"b","atan2");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(ta,a)}}),ui=sm({atanh_:function(e){let t=sd(e,"x","atanh");return sr.runKernel(tr,{x:t})}});var uo={};function ul(e,t,n,r,a="NHWC",s){let i=[...t,e[3]];return up(e,i,n,s,r,null,null,uv(a))}function uu(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=uf(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else if("channelsFirst"===i)o=[l,u,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return up(e,o,n,r,a,s,!1,i)}function uh(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,h,p]=um(t);if("NDHWC"===i)l="channelsLast",o=[u,h,p,e[4],e[4]];else if("NCDHW"===i)l="channelsFirst",o=[u,h,p,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return ud(e,o,n,r,a,!1,l,s)}function up(e,t,n,r,a,s,i=!1,o="channelsLast"){let l,[u,h,p,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,p,d]=e;else if("channelsFirst"===o)[u,d,h,p]=e;else throw Error(`Unknown dataFormat ${o}`);let[c,f,,m]=t,[g,y]=uf(n),[b,x]=uf(r),w=ug(c,b),v=ug(f,x),{padInfo:k,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,l){let u,h,p;if("number"==typeof e){let a=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,type:a};let i=function(e,t,n,r,a){null==r&&(r=uc(e,t,n));let s=e[0],i=e[1];return[uy((s-t+2*r)/n+1,a),uy((i-t+2*r)/n+1,a)]}([t,n],s,r,e,o);h=i[0],p=i[1]}else if("same"===e){let e=Math.max(0,((h=Math.ceil(t/r))-1)*r+s-t),o=Math.max(0,((p=Math.ceil(n/a))-1)*a+i-n),l=Math.floor(e/2),d=Math.floor(o/2);u={top:l,bottom:e-l,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else if("object"==typeof e){let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},h=uy((t-s+d+c)/r+1,o),p=uy((n-i+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:u,outHeight:h,outWidth:p}}(a,h,p,g,y,w,v,s,o),N=i?m*d:m;return"channelsFirst"===o?l=[u,N,I,S]:"channelsLast"===o&&(l=[u,I,S,N]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:p,inChannels:d,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:l,filterShape:t}}function ud(e,t,n,r,a,s=!1,i="channelsLast",o){let l,[u,h,p,d,c]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,h,p,d,c]=e;else if("channelsFirst"===i)[u,c,h,p,d]=e;else throw Error(`Unknown dataFormat ${i}`);let[f,m,g,,y]=t,[b,x,w]=um(n),[v,k,I]=um(r),S=ug(f,v),N=ug(m,k),T=ug(g,I),{padInfo:C,outDepth:$,outHeight:E,outWidth:A}=function(e,t,n,r,a,s,i,o,l,u,h){let p,d,c,f;if("valid"===e&&(e=0),"number"==typeof e){let m=0===e?"VALID":"NUMBER";p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:m};let g=function(e,t,n,r,a,s){null==a&&(a=uc(e,t[0],r[0]));let i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(i[n]=uy((e[n]-t[n]+2*a)/r[n]+1,s));return i}([t,n,r,1],[o,l,u],0,[a,s,i],e,h);d=g[0],c=g[1],f=g[2]}else if("same"===e){let e=((d=Math.ceil(t/a))-1)*a+o-t,h=((c=Math.ceil(n/s))-1)*s+l-n,m=((f=Math.ceil(r/i))-1)*i+u-r,g=Math.floor(e/2),y=Math.floor(h/2),b=Math.floor(m/2);p={top:y,bottom:h-y,left:b,right:m-b,front:g,back:e-g,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:c,outWidth:f}}(a,h,p,d,b,x,w,S,N,T,o),R=s?y*c:y;return"channelsFirst"===i?l=[u,R,$,E,A]:"channelsLast"===i&&(l=[u,$,E,A,R]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:p,inWidth:d,inChannels:c,outDepth:$,outHeight:E,outWidth:A,outChannels:R,padInfo:C,strideDepth:b,strideHeight:x,strideWidth:w,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:k,dilationWidth:I,inShape:e,outShape:l,filterShape:t}}function uc(e,t,n,r=1){let a=ug(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function uf(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function um(e){return"number"==typeof e?[e,e,e]:e}function ug(e,t){return t<=1?e:e+(e-1)*(t-1)}function uy(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function ub(e){let[t,n,r]=uf(e);return 1===t&&1===n&&1===r}function ux(e,t){return ub(e)||ub(t)}function uw(e){return uf(e).every(e=>e>0)}function uv(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function uk(e,t,n){if(null!=n)if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if("number"==typeof t)Z(er(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{Z(er(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}u(uo,"computeDilation2DInfo",()=>ul),u(uo,"convertConv2DDataFormat",()=>uv),u(uo,"computeConv2DInfo",()=>up),u(uo,"computePool2DInfo",()=>uu),u(uo,"computePool3DInfo",()=>uh),u(uo,"computeConv3DInfo",()=>ud),u(uo,"computeDefaultPad",()=>uc),u(uo,"tupleValuesAreOne",()=>ub),u(uo,"eitherStridesOrDilationsAreOne",()=>ux),u(uo,"stridesOrDilationsArePositive",()=>uw),u(uo,"checkPadOnDimRoundingMode",()=>uk);let uI=sm({reshape_:function(e,t){let n=sd(e,"x","reshape","string_or_numeric");return sr.runKernel(nJ,{x:n},{shape:t})}}),uS=sm({avgPool_:function(e,t,n,r,a){let s=sd(e,"x","avgPool","float32");Z(ux(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=uI(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Z(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),uk("avgPool",r,a);let l={x:i},u=sr.runKernel(ts,l,{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return(u=on(u,s.dtype),o)?uI(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),uN=sm({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=sd(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=uI(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Z(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Z("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Z("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),uk("avgPool3d",r,a);let u={x:o},h=sr.runKernel(to,u,{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return(h=on(h,o.dtype),l)?uI(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),uT=sm({concat_:function(e,t=0){Z(e.length>=1,()=>"Pass at least one tensor to concat");let n=sc(e,"tensors","concat","string_or_numeric");return("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===n.length)?or(n[0]):sr.runKernel(tw,n,{axis:t})}}),uC=sm({sigmoid_:function(e){let t=sd(e,"x","sigmoid","float32");return sr.runKernel(ri,{x:t})}}),u$=sm({slice_:function(e,t,n){let r=sd(e,"x","slice","string_or_numeric");if(0===r.rank)throw Error("Slicing scalar is not possible");return sr.runKernel(rn,{x:r},{begin:t,size:n})}}),uE=sm({tanh_:function(e){let t=sd(e,"x","tanh","float32");return sr.runKernel(rC,{x:t})}}),uA=sm({basicLSTMCell_:function(e,t,n,r,a,s){let i=sd(e,"forgetBias","basicLSTMCell"),o=sd(t,"lstmKernel","basicLSTMCell"),l=sd(n,"lstmBias","basicLSTMCell"),u=sd(r,"data","basicLSTMCell"),h=sd(a,"c","basicLSTMCell"),p=os(lr(uT([u,sd(s,"h","basicLSTMCell")],1),o),l),d=p.shape[0],c=p.shape[1]/4,f=[d,c],m=u$(p,[0,0],f),g=u$(p,[0,c],f),y=u$(p,[0,2*c],f),b=u$(p,[0,3*c],f),x=os(ol(uC(m),uE(g)),ol(h,uC(os(i,y)))),w=ol(uE(x),uC(b));return[x,w]}}),uR=sm({batchToSpaceND_:function(e,t,n){let r=sd(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return Z(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),Z(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),Z(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),sr.runKernel(th,{x:r},{blockShape:t,crops:n})}}),uF=sm({batchNorm_:function(e,t,n,r,a,s){let i,o;null==s&&(s=.001);let l=sd(e,"x","batchNorm"),u=sd(t,"mean","batchNorm"),h=sd(n,"variance","batchNorm");null!=a&&(i=sd(a,"scale","batchNorm")),null!=r&&(o=sd(r,"offset","batchNorm")),Z(u.rank===h.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Z(null==o||u.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Z(null==i||u.rank===i.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:0===l.rank||1===l.rank?uI(l,[1,1,1,l.size]):2===l.rank?uI(l,[1,1,l.shape[0],l.shape[1]]):3===l.rank?uI(l,[1,l.shape[0],l.shape[1],l.shape[2]]):l,scale:i,offset:o,mean:u,variance:h},d={varianceEpsilon:s};return uI(sr.runKernel(t2,p,d),l.shape)}}),uD=sm({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=sd(e,"x","batchNorm"),u=sd(t,"mean","batchNorm"),h=sd(n,"variance","batchNorm");return null!=a&&(i=sd(a,"scale","batchNorm")),null!=r&&(o=sd(r,"offset","batchNorm")),Z(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),Z(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),Z(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=i&&Z(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`),null!=o&&Z(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),uF(l,u,h,o,i,s)}}),uO=sm({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=sd(e,"x","batchNorm"),u=sd(t,"mean","batchNorm"),h=sd(n,"variance","batchNorm");return null!=a&&(i=sd(a,"scale","batchNorm")),null!=r&&(o=sd(r,"offset","batchNorm")),Z(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),Z(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),Z(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=i&&Z(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`),null!=o&&Z(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),uF(l,u,h,o,i,s)}}),u_=sm({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=sd(e,"x","batchNorm"),u=sd(t,"mean","batchNorm"),h=sd(n,"variance","batchNorm");return null!=a&&(i=sd(a,"scale","batchNorm")),null!=r&&(o=sd(r,"offset","batchNorm")),Z(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),Z(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),Z(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=i&&Z(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`),null!=o&&Z(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),uF(l,u,h,o,i,s)}}),uM=sm({bincount_:function(e,t,n){let r=sd(e,"x","bincount"),a=sd(t,"weights","bincount");return Z("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),Z(n>=0,()=>`size must be non-negative, but got ${n}.`),Z(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`),sr.runKernel(tp,{x:r,weights:a},{size:n})}}),uL=sm({bitwiseAnd_:function(e,t){let n=sd(e,"x","bitwiseAnd"),r=sd(t,"y","bitwiseAnd");if(!en(n.shape,r.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);return sr.runKernel(td,{a:n,b:r})}}),uz=sm({broadcastArgs_:function(e,t){let n=sd(e,"s0","broadcastArgs","int32"),r=sd(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return sr.runKernel(tf,{s0:n,s1:r})}}),uP=sm({broadcastTo_:function(e,t){let n=sd(e,"broadcastTo","x"),r=n.shape;if(eR(t),t.length<n.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=uI(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return or(n);let i={x:n};return sr.runKernel(r$,i,{reps:s})}}),uB=sm({ceil_:function(e){let t=sd(e,"x","ceil","float32");return sr.runKernel(tg,{x:t})}}),uW=sm({clipByValue_:function(e,t,n){let r=sd(e,"x","clipByValue");return(Z(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)?oE(r.shape,t,r.dtype):sr.runKernel(ty,{x:r},{clipValueMin:t,clipValueMax:n})}}),uU=sm({concat1d_:function(e){return uT(e,0)}}),uV=sm({concat2d_:function(e,t){return uT(e,t)}}),uG=sm({concat3d_:function(e,t){return uT(e,t)}}),uH=sm({concat4d_:function(e,t){return uT(e,t)}}),uj=sm({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=sd(e,"x","conv2d","float32"),l=sd(t,"filter","conv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=uI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),Z(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),uk("conv2d",r,i);let p="NHWC"===a?u.shape[3]:u.shape[1];Z(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),Z(ux(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Z(uw(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),Z(uw(n),()=>"Error in conv2D: Strides should be larger than 0.");let d={x:u,filter:l},c=sr.runKernel(tv,d,{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return h?uI(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),uq=sm({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=sd(e,"x","conv1d"),l=sd(t,"filter","conv1d"),u=o,h=!1;2===o.rank&&(h=!0,u=uI(o,[1,o.shape[0],o.shape[1]])),Z(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),Z(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),uk("conv1d",r,i),Z(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),Z(ux(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),Z(uw(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),Z(uw(n),()=>"Error in conv1D: Stride should be larger than 0."),Z("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let p=uI(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=uj(uI(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p,[1,n],r,"NHWC",[1,s],i);return h?uI(d,[d.shape[2],d.shape[3]]):uI(d,[d.shape[0],d.shape[2],d.shape[3]])}}),uK=sm({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Z(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=uI(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Z(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Z(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),Z(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let h="NHWC"===s?o[3]:o[1],p="NHWC"===s?l.shape[3]:l.shape[1];Z(h===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`),Z(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),uk("conv2dDerInput",a,i);let d={dy:l,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=sr.runKernel(tI,d,c);return u?uI(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),uX=sm({conv2dTranspose_:function(e,t,n,r,a,s){return uK(n,sd(e,"x","conv2dTranspose"),sd(t,"filter","conv2dTranspose"),r,a,"NHWC",s)}}),uZ=sm({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=sd(e,"x","conv3d"),o=sd(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=uI(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Z(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),Z(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Z(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Z(ux(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),Z("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),Z(uw(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),Z(uw(n),()=>"Error in conv3D: Strides should be larger than 0.");let h={x:l,filter:o},p=sr.runKernel(tS,h,{strides:n,pad:r,dataFormat:a,dilations:s});return u?uI(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),uY=sm({conv3DBackpropInput_:function(e,t,n,r,a){Z(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=uI(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Z(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),Z(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),Z(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),Z(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),Z(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let h={dy:i,filter:n},p={pad:a,strides:r,inputShape:s},d=sr.runKernel(tT,h,p);return o?uI(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uJ=sm({conv3dTranspose_:function(e,t,n,r,a){return uY(n,sd(e,"x","conv3dTranspose"),sd(t,"filter","conv3dTranspose"),r,a)}}),uQ=sm({cos_:function(e){let t=sd(e,"x","cos","float32");return sr.runKernel(tC,{x:t})}}),u0=sm({cosh_:function(e){let t=sd(e,"x","cosh","float32");return sr.runKernel(t$,{x:t})}}),u1=sm({cumprod_:function(e,t=0,n=!1,r=!1){let a=sd(e,"x","cumprod");return sr.runKernel(tE,{x:a},{axis:t,exclusive:n,reverse:r})}}),u2=sm({cumsum_:function(e,t=0,n=!1,r=!1){let a=sd(e,"x","cumsum");return sr.runKernel(tA,{x:a},{axis:t,exclusive:n,reverse:r})}}),u3=sm({denseBincount_:function(e,t,n,r=!1){let a=sd(e,"x","denseBincount"),s=sd(t,"weights","denseBincount");return Z("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),Z(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),Z(n>=0,()=>`size must be non-negative, but got ${n}.`),Z(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`),sr.runKernel(tF,{x:a,weights:s},{size:n,binaryOutput:r})}}),u4=sm({depthToSpace_:function(e,t,n="NHWC"){let r=sd(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return Z(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),Z(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),Z(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),Z(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),sr.runKernel(tD,{x:r},{blockSize:t,dataFormat:n})}}),u6=sm({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=sd(e,"x","depthwiseConv2d","float32"),l=sd(t,"filter","depthwiseConv2d","float32"),u=o,h=!1;3===o.rank&&(h=!0,u=uI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Z(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),Z(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p="NHWC"===a?u.shape[3]:u.shape[1];Z(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),uk("depthwiseConv2d",r,i);let d={x:u,filter:l},c=sr.runKernel(tO,d,{strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i});return h?uI(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),u5=sm({diag_:function(e){let t=sd(e,"x","diag");return sr.runKernel(tL,{x:t})}}),u8=sm({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=sd(e,"x","dilation2d"),o=sd(t,"filter","dilation2d");Z(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),Z(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Z("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;3===i.rank&&(l=uI(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Z(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let h={x:l,filter:o},p=sr.runKernel(tz,h,{strides:n,pad:r,dilations:a});return u?uI(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),u7=sm({equal_:function(e,t){let n=sd(e,"a","equal","string_or_numeric"),r=sd(t,"b","equal","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(tq,a)}}),u9=sm({where_:function(e,t,n){let r=sd(t,"a","where"),a=sd(n,"b","where"),s=sd(e,"condition","where","bool"),i=oz(oz(s.shape,r.shape),a.shape),o=uP(s,i),l=uP(r,i),u=uP(a,i);return sr.runKernel(re,{condition:o,t:l,e:u})}}),he=sm({divNoNan_:function(e,t){let n=sd(e,"a","div"),r=sd(t,"b","div");[n,r]=a6(n,r);let a=oo(n,r),s=op(a);return u9(u7(r,s),s,a)}}),ht=sm({dot_:function(e,t){let n=sd(e,"t1","dot"),r=sd(t,"t2","dot");Z((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Z(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){let e=lr(uI(n,[1,-1]),uI(r,[-1,1]));return uI(e,[])}if(1===n.rank&&2===r.rank){let e=lr(uI(n,[1,-1]),uI(r,[r.shape[0],r.shape[1]]));return uI(e,[e.size])}if(2!==n.rank||1!==r.rank)return lr(n,uI(r,[r.shape[0],r.shape[1]]));{let e=lr(n,uI(r,[-1,1]));return uI(e,[e.size])}}}),hn=sm({einsum_:function(e,...t){let n=t.map((e,t)=>sd(e,`tensors${t}`,"einsum"));return sr.runKernel(tV,n,{equation:e})}}),hr=sm({elu_:function(e){let t=sd(e,"x","elu","float32");return sr.runKernel(tG,{x:t})}}),ha=sm({ensureShape_:function(e,t){let n=sd(e,"x","ensureShape","string_or_numeric");if(!et(n.shape,t))throw Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),hs=sm({erf_:function(e){let t=sd(e,"x","erf");Z("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=on(t,"float32"));let n={x:t};return sr.runKernel(tj,n)}});var hi={};u(hi,"norm",()=>hx);var ho={};function hl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function hu(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function hh(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function hp(e,t){return hu(e,t.map(e=>1),t)}function hd(e,t,n){Z(hl(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function hc(e,t){if(hl(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function hf(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function hm(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}u(ho,"axesAreInnerMostDims",()=>hl),u(ho,"combineLocations",()=>hu),u(ho,"computeOutAndReduceShapes",()=>hh),u(ho,"expandShapeToKeepDim",()=>hp),u(ho,"assertAxesAreInnerMostDims",()=>hd),u(ho,"getAxesPermutation",()=>hc),u(ho,"getUndoAxesPermutation",()=>hf),u(ho,"getInnerMostAxes",()=>hm);let hg=sm({max_:function(e,t=null,n=!1){let r=sd(e,"x","max");return sr.runKernel(nb,{x:r},{reductionIndices:t,keepDims:n})}}),hy=sm({min_:function(e,t=null,n=!1){let r=sd(e,"x","min");return sr.runKernel(nT,{x:r},{axis:t,keepDims:n})}}),hb=sm({sum_:function(e,t=null,n=!1){let r=sd(e,"x","sum");"bool"===r.dtype&&(r=on(r,"int32"));let a={x:r};return sr.runKernel(ru,a,{axis:t,keepDims:n})}}),hx=sm({norm_:function(e,t="euclidean",n=null,r=!1){let a=function e(t,n,r=null){if(0===t.rank)return oO(t);if(1!==t.rank&&null===r)return e(uI(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return hb(oO(t),r);if(n===1/0)return hg(oO(t),r);if(n===-1/0)return hy(oO(t),r);if("euclidean"===n||2===n)return ou(hb(oR(oO(t),ox(2,"int32")),r));throw Error(`Error in norm: invalid ord value: ${n}`)}if(Array.isArray(r)&&2===r.length){if(1===n)return hg(hb(oO(t),r[0]),r[1]-1);if(n===1/0)return hg(hb(oO(t),r[1]),r[0]);if(n===-1/0)return hy(hb(oO(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return ou(hb(oh(t),r));throw Error(`Error in norm: invalid ord value: ${n}`)}throw Error(`Error in norm: invalid axis: ${r}`)}(e=sd(e,"x","norm"),t,n),s=a.shape;if(r){let t=eh(n,e.shape);s=hp(a.shape,t)}return uI(a,s)}}),hw=sm({euclideanNorm_:function(e,t=null,n=!1){return hx(e,"euclidean",t,n)}}),hv=sm({exp_:function(e){let t=sd(e,"x","exp");return sr.runKernel(tK,{x:t})}}),hk=sm({expandDims_:function(e,t=0){let n=sd(e,"x","expandDims","string_or_numeric");return Z(t<=n.rank,()=>"Axis must be <= rank of the tensor"),sr.runKernel(tX,{input:n},{dim:t})}}),hI=sm({expm1_:function(e){let t=sd(e,"x","expm1");return sr.runKernel(tZ,{x:t})}}),hS=sm({tile_:function(e,t){let n=sd(e,"x","tile","string_or_numeric");return Z(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`),sr.runKernel(r$,{x:n},{reps:t})}}),hN=sm({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=ot([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=uI(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return hS(hk(i,0),[n[0],1,1]);if(2===n.length)return hS(hk(hk(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return hS(hk(hk(hk(i,0),0),0),[n[0],n[1],n[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),hT=sm({floor_:function(e){let t=sd(e,"x","floor","float32");return sr.runKernel(t0,{x:t})}}),hC=sm({gather_:function(e,t,n=0,r=0){let a=sd(e,"x","gather"),s=sd(t,"indices","gather","int32");return sr.runKernel(t3,{x:a,indices:s},{axis:n,batchDims:r})}}),h$=sm({greater_:function(e,t){let n=sd(e,"a","greater","string_or_numeric"),r=sd(t,"b","greater","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(t6,a)}}),hE=sm({greaterEqual_:function(e,t){let n=sd(e,"a","greaterEqual","string_or_numeric"),r=sd(t,"b","greaterEqual","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(t5,a)}}),hA=sm({isFinite_:function(e){let t=sd(e,"x","isFinite");return sr.runKernel(ne,{x:t})}}),hR=sm({isInf_:function(e){let t=sd(e,"x","isInf");return sr.runKernel(nt,{x:t})}}),hF=sm({isNaN_:function(e){let t=sd(e,"x","isNaN");return sr.runKernel(nn,{x:t})}}),hD=sm({leakyRelu_:function(e,t=.2){let n=sd(e,"x","leakyRelu");return sr.runKernel(nr,{x:n},{alpha:t})}}),hO=sm({less_:function(e,t){let n=sd(e,"a","less","string_or_numeric"),r=sd(t,"b","less","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(na,a)}}),h_=sm({lessEqual_:function(e,t){let n=sd(e,"a","lessEqual","string_or_numeric"),r=sd(t,"b","lessEqual","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(ns,a)}});function hM(e,t,n){if(n<=0)throw Error("The number of values should be positive.");return sr.runKernel(ni,{},{start:e,stop:t,num:n})}let hL=sm({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=sd(e,"x","localResponseNormalization");Z(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),Z(er(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=uI(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u=sr.runKernel(nm,l,{depthRadius:t,bias:n,alpha:r,beta:a});return o?uI(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),hz=sm({log_:function(e){let t=sd(e,"x","log","float32");return sr.runKernel(no,{x:t})}}),hP=sm({log1p_:function(e){let t=sd(e,"x","log1p");return sr.runKernel(nl,{x:t})}}),hB=sm({softplus_:function(e){let t=sd(e,"x","softplus");return sr.runKernel(ro,{x:t})}}),hW=sm({logSigmoid_:function(e){let t=sd(e,"x","logSigmoid");return oy(e=>({value:lo(hB(lo(e))),gradFunc:t=>ol(t,uC(lo(e)))}))(t)}}),hU=sm({logSoftmax_:function(e,t=-1){let n=sd(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return oy((e,n)=>{let r=hg(e,t,!0),a=oF(e,r),s=oF(on(a,"float32"),hz(hb(hv(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=hv(r);return oF(e,ol(hb(e,t,!0),a))}}})(n)}}),hV=sm({logSumExp_:function(e,t=null,n=!1){let r=sd(e,"x","logSumExp"),a=eh(t,r.shape),s=hg(r,a,!0),i=hz(hb(hv(oF(r,s)),a)),o=os(uI(s,i.shape),i);if(n){let e=hp(o.shape,a);return uI(o,e)}return o}}),hG=sm({logicalAnd_:function(e,t){let n=sd(e,"a","logicalAnd","bool"),r=sd(t,"b","logicalAnd","bool");return oz(n.shape,r.shape),sr.runKernel(nu,{a:n,b:r})}}),hH=sm({logicalNot_:function(e){let t=sd(e,"x","logicalNot","bool");return sr.runKernel(nh,{x:t})}}),hj=sm({logicalOr_:function(e,t){let n=sd(e,"a","logicalOr","bool"),r=sd(t,"b","logicalOr","bool");return oz(n.shape,r.shape),sr.runKernel(np,{a:n,b:r})}}),hq=sm({logicalXor_:function(e,t){let n=sd(e,"a","logicalXor","bool"),r=sd(t,"b","logicalXor","bool");return oz(n.shape,r.shape),hG(hj(e,t),hH(hG(e,t)))}});var hK={};u(hK,"searchSorted",()=>hX);let hX=sm({searchSorted_:function(e,t,n="left"){let r=sd(e,"sortedSequence","searchSorted"),a=sd(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=uI(r,[-1,s]),l=uI(a,[-1,i]);if(o.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Q(l.shape)>=0x80000000)throw Error("values tensor size must less than 2147483648");if(o.shape[1]>=0x80000000)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);return sr.runKernel(n9,{sortedSequence:o,values:l},{side:n})}});function hZ(e,t){return hX(e,t,"left")}let hY=sm({maxPool_:function(e,t,n,r,a){let s=sd(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=uI(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Z(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),Z(ux(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),uk("maxPool",r,a);let l={x:i},u=sr.runKernel(nw,l,{filterSize:t,strides:n,pad:r,dimRoundingMode:a});return o?uI(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),hJ=sm({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=sd(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=uI(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Z(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Z("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),uk("maxPool3d",r,a);let u={x:o},h=sr.runKernel(nk,u,{filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s});return l?uI(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),hQ=sm({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s=sd(e,"x","maxPoolWithArgmax"),i=sr.runKernel(nS,{x:s},{filterSize:t,strides:n,pad:r,includeBatchInIndex:a});return{result:i[0],indexes:i[1]}}}),h0=sm({mean_:function(e,t=null,n=!1){let r=sd(e,"x","mean");return sr.runKernel(nN,{x:r},{axis:t,keepDims:n})}});function h1(e,t="float32"){if(eR(e),"complex64"===t)return sg(h1(e,"float32"),h1(e,"float32"));let n=eE(Q(e),t);return sr.makeTensor(n,e,t)}function h2(e,t="float32"){if(eR(e),"complex64"===t)return sg(h2(e,"float32"),h1(e,"float32"));let n=e$(Q(e),t);return sr.makeTensor(n,e,t)}function h3(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=sd(e,"x","meshgrid",e instanceof aZ?e.dtype:"float32");if(void 0===t)return[r];let a=sd(t,"y","meshgrid",t instanceof aZ?t.dtype:"float32"),s=Q(r.shape),i=Q(a.shape);return"xy"===n?(r=uI(r,[1,-1]),a=uI(a,[-1,1]),[lr(h2([i,1],r.dtype),r),lr(a,h2([1,s],a.dtype))]):(r=uI(r,[-1,1]),a=uI(a,[1,-1]),[lr(r,h2([1,i],r.dtype)),lr(h2([s,1],a.dtype),a)])}let h4=sm({minimum_:function(e,t){let n=sd(e,"a","minimum"),r=sd(t,"b","minimum");[n,r]=a6(n,r),"bool"===n.dtype&&(n=on(n,"int32"),r=on(r,"int32")),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(nC,a)}}),h6=sm({mirrorPad_:function(e,t,n){Z("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=sd(e,"x","mirrorPad");if(0===r.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Z(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=+("reflect"===n);for(let e=0;e<r.rank;e++)Z(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),Z(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`);return sr.runKernel(n$,{x:r},{paddings:t,mode:n})}}),h5=sm({mod_:function(e,t){let n=sd(e,"a","mod"),r=sd(t,"b","mod");[n,r]=a6(n,r);let a={a:n,b:r};return sr.runKernel(nE,a)}}),h8=sm({moments_:function(e,t=null,n=!1){let r=eh(t,(e=sd(e,"x","moments")).shape),a=h0(e,r,n),s=a.shape;n||(s=hp(a.shape,r));let i=h0(oh(oF(on(e,"float32"),uI(a,s))),r,n);return{mean:a,variance:i}}}),h7=sm({multiRNNCell_:function(e,t,n,r){let a=sd(t,"data","multiRNNCell"),s=sc(n,"c","multiRNNCell"),i=sc(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],h=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),h.push(l[e+1]);return[u,h]}}),h9=sm({multinomial_:function(e,t,n,r=!1){let a=sd(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o=1===i?uI(a,[1,-1]):a,l={numSamples:t,seed:n,normalized:r},u=sr.runKernel(nA,{logits:o},l);return 1===i?uI(u,[u.size]):u}}),pe=sm({notEqual_:function(e,t){let n=sd(e,"a","notEqual","string_or_numeric"),r=sd(t,"b","notEqual","string_or_numeric");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(nD,a)}}),pt=sm({onesLike_:function(e){let t=sd(e,"x","onesLike");return sr.runKernel(nL,{x:t})}}),pn=sm({outerProduct_:function(e,t){let n=sd(e,"v1","outerProduct"),r=sd(t,"v2","outerProduct");return Z(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`),lr(uI(n,[-1,1]),uI(r,[1,-1]))}}),pr=sm({pad_:function(e,t,n=0){let r=sd(e,"x","pad");if(0===r.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return sr.runKernel(nB,{x:r},{paddings:t,constantValue:n})}}),pa=sm({pad1d_:function(e,t,n=0){return Z(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),pr(e,[t],n)}}),ps=sm({pad2d_:function(e,t,n=0){return Z(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}}),pi=sm({pad3d_:function(e,t,n=0){return Z(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}}),po=sm({pad4d_:function(e,t,n=0){return Z(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),pr(e,t,n)}}),pl=sm({spaceToBatchND_:function(e,t,n){let r=sd(e,"x","spaceToBatchND");return Z(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),Z(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),Z(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`),sr.runKernel(rh,{x:r},{blockShape:t,paddings:n})}}),pu=sm({pool_:function(e,t,n,r,a,s,i){let o;null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let l=sd(e,"x","maxPool"),u=l,h=!1;3===l.rank&&(h=!0,u=uI(l,[1,l.shape[0],l.shape[1],l.shape[2]])),Z(ux(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let p=uu(u.shape,t,s,a,r),d=[p.dilationHeight,p.dilationWidth];o="same"===r?function(e,t){let n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=function(e,t,n){let r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([p.inHeight,p.inWidth],d,o),g=c?r:"valid",y=c?u:pl(u,d,f),b=("avg"===n?()=>uS(y,t,s,g,i):()=>hY(y,t,s,g,i))(),x=c?b:uR(b,d,m);return h?uI(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),ph=sm({prelu_:function(e,t){let n=sd(e,"x","prelu"),r=sd(t,"alpha","prelu");return sr.runKernel(nV,{x:n,alpha:r})}}),pp=sm({prod_:function(e,t=null,n=!1){let r=sd(e,"x","prod");"bool"===r.dtype&&(r=on(r,"int32"));let a={x:r};return sr.runKernel(nG,a,{axis:t,keepDims:n})}}),pd=sm({raggedGather_:function(e,t,n,r){let a=e.map((e,t)=>sd(e,`tensors${t}`,"raggedGather","int32")),s=sd(t,"paramsDenseValues","raggedGather"),i=sd(n,"indices","raggedGather","int32"),o=sr.runKernel(nH,{paramsNestedSplits:a,paramsDenseValues:s,indices:i},{outputRaggedRank:r});return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),pc=sm({raggedRange_:function(e,t,n){let r=sd(e,"starts","raggedRange"),a=sd(t,"limits","raggedRange",r.dtype),s=sd(n,"deltas","raggedRange",r.dtype),i=sr.runKernel(nj,{starts:r,limits:a,deltas:s});return{rtNestedSplits:i[0],rtDenseValues:i[1]}}}),pf=sm({raggedTensorToTensor_:function(e,t,n,r,a){let s=sd(e,"shape","raggedTensorToTensor","int32"),i=sd(t,"values","raggedTensorToTensor"),o=sd(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map((e,t)=>sd(e,`tensors${t}`,"raggedTensorToTensor","int32"));return sr.runKernel(nq,{shape:s,values:i,defaultValue:o,rowPartitionTensors:l},{rowPartitionTypes:a})}}),pm=sm({rand_:function(e,t,n){eR(e);let r=Q(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else if("bool"===n)a=new Uint8Array(r);else throw Error(`Unknown data type ${n}`);for(let e=0;e<r;e++)a[e]=t();return sr.makeTensor(a,e,n)}});var pg={},py=O("gj6Et"),pb=O("4gDjz"),px=O("HLBv4"),pw=O("ktaoY"),pv=O("gBs5C"),pk=O("ktLSh"),pI={};!function(e,t,n){var r,a="random",s=n.pow(256,6),i=n.pow(2,52),o=2*i;function l(l,c,f){var m=[],g=p(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((c=!0==c?{entropy:!0}:c||{}).entropy?[l,d(t)]:null==l?function(){try{var n;return r&&(n=r.randomBytes)?n=n(256):(n=new Uint8Array(256),(e.crypto||e.msCrypto).getRandomValues(n)),d(n)}catch(n){var a=e.navigator,s=a&&a.plugins;return[+new Date,e,s,e.screen,d(t)]}}():l,3),m),y=new u(m),b=function(){for(var e=y.g(6),t=s,n=0;e<i;)e=(e+n)*256,t*=256,n=y.g(1);for(;e>=o;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/0x100000000},b.double=b,p(d(y.S),t),(c.pass||f||function(e,t,r,s){return(s&&(s.S&&h(s,y),e.state=function(){return h(y,{})}),r)?(n[a]=e,t):e})(b,g,"global"in c?c.global:this==n,c.state)}function u(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(256)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function p(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return d(t)}function d(e){return String.fromCharCode.apply(0,e)}if(p(n.random(),t),pI){pI=l;try{r=O("foUwZ")}catch(e){}}else"function"==typeof define&&define.amd?define(function(){return l}):n["seed"+a]=l}("undefined"!=typeof self?self:pI,[],Math),pI.alea=py,pI.xor128=pb,pI.xorwow=px,pI.xorshift7=pw,pI.xor4096=pv,pI.tychei=pk,pg=pI;class pS{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=pg.alea(s.toString())}nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let n=!1;for(;!n;){let r,a,s;do s=(r=2*this.random()-1)*r+(a=2*this.random()-1)*a;while(s>=1||0===s)let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class pN{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=pg.alea(a.toString()),this.randn=new pS(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0)if(s*=s*s,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class pT{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=pg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let pC=sm({randomGamma_:function(e,t,n=1,r="float32",a){if(eR(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw Error(`Unsupported data type ${r}`);let s=new pN(t,n,r,a),i=ot(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),p$=sm({randomNormal_:function(e,t=0,n=1,r,a){if(eR(e),null!=r&&"bool"===r)throw Error(`Unsupported data type ${r}`);let s=new pS(t,n,r,!1,a),i=ot(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),pE=sm({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return p$(e,0,1,t,n)}}),pA=sm({randomUniform_:function(e,t=0,n=1,r="float32",a){eR(e);let s=ot(e,r),i=new pT(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),pR=sm({randomUniformInt_:function(e,t,n,r){return pA(e,t,n,"int32",r)}});function pF(e,t,n=1,r="float32"){if(0===n)throw Error("Cannot have a step of zero");return sr.runKernel(nK,{},{start:e,stop:t,step:n,dtype:r})}let pD=sm({reciprocal_:function(e){let t=sd(e,"x","reciprocal");return sr.runKernel(nZ,{x:t})}}),pO=sm({relu_:function(e){let t=sd(e,"x","relu");return sr.runKernel(nY,{x:t})}}),p_=sm({relu6_:function(e){let t=sd(e,"x","relu6");return sr.runKernel(n3,{x:t})}}),pM=sm({reverse_:function(e,t){let n=sd(e,"x","reverse");return sr.runKernel(n4,{x:n},{dims:t})}}),pL=sm({reverse1d_:function(e){let t=sd(e,"x","reverse");return Z(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),pM(t,0)}}),pz=sm({reverse2d_:function(e,t){let n=sd(e,"x","reverse");return Z(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),pM(n,t)}}),pP=sm({reverse3d_:function(e,t){let n=sd(e,"x","reverse");return Z(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),pM(n,t)}}),pB=sm({reverse4d_:function(e,t){let n=sd(e,"x","reverse");return Z(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),pM(n,t)}}),pW=sm({round_:function(e){let t=sd(e,"x","round");return sr.runKernel(n6,{x:t})}}),pU=sm({rsqrt_:function(e){let t=sd(e,"x","rsqrt","float32");return sr.runKernel(n5,{x:t})}}),pV=sm({selu_:function(e){let t=sd(e,"x","selu");return sr.runKernel(rt,{x:t})}}),pG=sm({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=sd(e,"x","separableConv2d"),l=sd(t,"depthwiseFilter","separableConv2d"),u=sd(n,"pointwiseFilter","separableConv2d"),h=o,p=!1;if(3===o.rank&&(p=!0,h=uI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Z(4===h.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),Z(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),Z(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),Z(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),Z(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let d=l.shape[2],c=l.shape[3];Z(u.shape[2]===d*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`);let f=uj(u6(h,l,r,a,i,s),u,1,"valid",i);return p?uI(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),pH=async function(e,t){let n=sd(e,"x","setdiff1d"),r=sd(t,"y","setdiff1d");Z(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),Z(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),Z(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=new Set(await r.data()),i=0;for(let e=0;e<a.length;e++)!s.has(a[e])&&i++;let o=new aq([i],n.dtype),l=new aq([i],"int32");for(let e=0,t=0;e<a.length;e++)!s.has(a[e])&&(o.values[t]=a[e],l.values[t]=e,t++);return[o.toTensor(),l.toTensor()]},pj=sm({sign_:function(e){let t=sd(e,"x","sign");return sr.runKernel(rs,{x:t})}}),pq=sm({sin_:function(e){let t=sd(e,"x","sin","float32");return sr.runKernel(rr,{x:t})}}),pK=sm({sinh_:function(e){let t=sd(e,"x","sinh");return sr.runKernel(ra,{x:t})}}),pX=sm({slice1d_:function(e,t,n){let r=sd(e,"x","slice1d");return Z(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),u$(r,[t],[n])}}),pZ=sm({slice2d_:function(e,t,n){let r=sd(e,"x","slice2d");return Z(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),u$(r,t,n)}}),pY=sm({slice3d_:function(e,t,n){let r=sd(e,"x","slice3d");return Z(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),u$(r,t,n)}}),pJ=sm({slice4d_:function(e,t,n){let r=sd(e,"x","slice4d");return Z(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),u$(r,t,n)}}),pQ=sm({softmax_:function(e,t=-1){let n=sd(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={dim:t};return sr.runKernel(rd,{logits:n},r)}}),p0=sm({fft_:function(e){return Z("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),sr.runKernel(tY,{input:e})}}),p1=sm({ifft_:function(e){return Z("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),sr.runKernel(t7,{input:e})}}),p2=sm({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2)t=p1(uI(e,[r,n]));else{let a=[r,2*(n-1)],s=uI(ll(e),[r,n]),i=uI(li(e),[r,n]),o=pM(u$(s,[0,1],[r,n-2]),1),l=ol(pM(u$(i,[0,1],[r,n-2]),1),ox(-1));t=p1(uI(sg(uT([s,o],1),uT([i,l],1)),[a[0],a[1]]))}if(t=ll(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=uI(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}}),p3=sm({split_:function(e,t,n=0){let r=sd(e,"x","split");return sr.runKernel(rp,{x:r},{numOrSizeSplits:t,axis:n})}}),p4=sm({rfft_:function(e,t){let n;Z("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,n=u$(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map(e=>e);a[e.shape.length-1]=t-r,n=uT([e,h1(a)],e.shape.length-1),r=t}else n=e;let s=op(n),i=p0(uI(sg(n,s),[a,r])),o=Math.floor(r/2)+1,l=ll(i),u=li(i),h=p3(l,[o,r-o],l.shape.length-1),p=p3(u,[o,r-o],u.shape.length-1),d=n.shape.slice();return d[n.shape.length-1]=o,uI(sg(h[0],p[0]),d)}}),p6=sm({squaredDifference_:function(e,t){let n=sd(e,"a","squaredDifference"),r=sd(t,"b","squaredDifference");[n,r]=a6(n,r),oz(n.shape,r.shape);let a={a:n,b:r};return sr.runKernel(rb,a,{})}}),p5=sm({squeeze_:function(e,t){let n=sd(e,"x","squeeze","string_or_numeric");return uI(n,ep(n.shape,t).newShape)}}),p8=sm({stack_:function(e,t=0){let n=sc(e,"tensors","stack","string_or_numeric");return Z(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Z(t<=n[0].rank,()=>"Axis must be <= rank of the tensor"),sr.runKernel(nP,n,{axis:t})}}),p7=sm({step_:function(e,t=0){let n=sd(e,"x","step");return sr.runKernel(rL,{x:n},{alpha:t})}}),p9=sm({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u=sd(e,"x","stridedSlice","string_or_numeric");return sr.runKernel(rv,{x:u},{begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l})}}),de=sm({tan_:function(e){let t=sd(e,"x","tan","float32");return sr.runKernel(rT,{x:t})}});function dt(e,t){J(e);let n=sh(e,t);if(1!==n.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return sy(e,null,n,t)}function dn(e,t,n){if(J(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let r=sh(e,n);if(2!==r.length&&1!==r.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sy(e,t,r,n)}function dr(e,t,n){if(J(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let r=sh(e,n);if(4!==r.length&&1!==r.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return sy(e,t,r,n)}function da(e,t,n){if(J(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let r=sh(e,n);if(5!==r.length&&1!==r.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return sy(e,t,r,n)}function ds(e,t,n){if(J(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let r=sh(e,n);if(6!==r.length&&1!==r.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return sy(e,t=t||r,r,n)}let di=sm({tensorScatterUpdate_:function(e,t,n){let r=sd(e,"tensor","tensorScatterupdate"),a=sd(t,"indices","tensorScatterupdate","int32"),s=sd(n,"updates","tensorScatterupdate");if(lS(s,a,r.shape),r.dtype!==s.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);return sr.runKernel(n7,{tensor:r,indices:a,updates:s},{})}}),dl=sm({topk_:function(e,t=1,n=!0){let r=sd(e,"x","topk");if(0===r.rank)throw Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let[s,i]=sr.runKernel(rE,{x:r},{k:t,sorted:n});return{values:s,indices:i}}}),du=sm({truncatedNormal_:function(e,t=0,n=1,r,a){if(eR(e),null!=r&&"bool"===r)throw Error("Unsupported data type $ { dtype }");let s=new pS(t,n,r,!0,a),i=ot(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),dh=sm({unique_:function(e,t=0){let n=sd(e,"x","unique","string_or_numeric");Z(n.rank>0,()=>"The input tensor must be at least 1D");let[r,a]=sr.runKernel(rF,{x:n},{axis:t});return{values:r,indices:a}}}),dp=sm({unsortedSegmentSum_:function(e,t,n){let r=sd(e,"x","unsortedSegmentSum"),a=sd(t,"segmentIds","unsortedSegmentSum","int32");return Z(er(n),()=>"numSegments must be of dtype int"),sr.runKernel(rO,{x:r,segmentIds:a},{numSegments:n})}}),dd=sm({unstack_:function(e,t=0){let n=sd(e,"x","unstack","string_or_numeric");return Z(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`),sr.runKernel(rD,{value:n},{axis:t})}});function dc(e,t){return hX(e,t,"right")}function df(e,t=!0,n,r){return sr.makeVariable(e,t,n,r)}function dm(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=ot(e,"int32"),a=ot([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}let dg=async function(e){let t=sd(e,"condition","whereAsync","bool"),n=await t.data(),r=dm(t.shape,n);return e!==t&&t.dispose(),r};var dy={};u(dy,"booleanMaskAsync",()=>db);let db=async function(e,t,n){let r=sd(e,"tensor","boolMask"),a=sd(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Z(i>0,()=>"mask cannot be scalar"),Y(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=uI(r,o.slice(0,s).concat([l],o.slice(s+i))),h=uI(a,[-1]),p=await dg(h),d=p5(p,[1]),c=hC(u,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),u.dispose(),h.dispose(),p.dispose(),c};var dx={};u(dx,"movingAverage",()=>dw);let dw=sm({movingAverage_:function(e,t,n,r,a=!0){let s=sd(e,"v","movingAverage"),i=sd(t,"x","movingAverage"),o=sd(n,"decay","movingAverage");a5(s,i),Z(en(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ox(1),u=oF(l,o),h=ol(oF(i,s),u);return a&&(Z(null!=r,()=>"When using zeroDebias: true, step is required."),h=oo(h,oF(l,oR(o,sd(r,"step","movingAverage"))))),os(s,h)}});var dv={};u(dv,"scatterND",()=>dk);let dk=sm({scatterND_:function(e,t,n){eR(n);let r=sd(e,"indices","scatterND","int32"),a=sd(t,"updates","scatterND");return lS(a,r,n),sr.runKernel(n8,{indices:r,updates:a},{shape:n})}});var dI={};u(dI,"sparseToDense",()=>dS);let dS=sm({sparseToDense_:function(e,t,n,r=0){eR(n);let a=sd(e,"sparseIndices","sparseToDense","int32"),s=sd(t,"sparseValues","sparseToDense","string_or_numeric"),i=sd(r,"defaultValue","sparseToDense",s.dtype);if("int32"!==a.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${a.dtype}.`);if(a.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${a.shape}.`);let o=a.rank>0?a.shape[0]:1,l=a.rank>1?a.shape[1]:1;if(n.length!==l)throw Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${l}.`);let u=s.size;if(0!==s.rank&&(1!==s.rank||u!==o))throw Error(`sparseValues has incorrect shape ${s.shape}, should be [] or [${o}]`);if(s.dtype!==i.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype");return sr.runKernel(ry,{sparseIndices:a,sparseValues:s,defaultValue:i},{outputShape:n})}});var dN={};u(dN,"gatherND",()=>dT);let dT=sm({gatherND_:function(e,t){let n=sd(t,"indices","gatherND","int32"),r=sd(e,"x","gatherND","string_or_numeric");return sr.runKernel(t4,{params:r,indices:n})}});var dC={};u(dC,"dropout",()=>d$);let d$=sm({dropout_:function(e,t,n,r){let a=sd(e,"x","dropout");if(Z("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),Z(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof aZ?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(en(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t;return ol(a,oo(hT(os(pA(s,0,1,"float32",r),i)),i))}});var dE={};function dA(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function dR(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return dt(a,"float32")}u(dE,"enclosingPowerOfTwo",()=>dA),u(dE,"cosineWindow",()=>dR);var dF={};u(dF,"inTopKAsync",()=>dD);let dD=async function(e,t,n=1){let r=sd(e,"predictions","inTopK"),a=sd(t,"targets","inTopK");Z(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),Z(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Y(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Z(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],h=ec("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),h[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){h[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),sb(h,a.shape,"bool")};var dO={};u(dO,"conv2d",()=>dW),u(dO,"depthwiseConv2d",()=>dG),u(dO,"matMul",()=>dH);let d_=sm({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=uI(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=uI(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Z(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Z(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),Z(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===s?o.shape[3]:o.shape[1],h="NHWC"===s?l.shape[3]:l.shape[1];Z(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),Z(h===n[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`),uk("conv2dDerFilter",a,i);let p={x:o,dy:l};return sr.runKernel(tk,p,{strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n})}});var dM={};function dL(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ol(e,p7(t));throw Error(`Cannot compute gradient for fused activation ${n}.`)}function dz(e,t){let n=t,r=oL(e.shape,t.shape);return r.length>0&&(n=hb(n,r)),uI(n,e.shape)}function dP(e,t,n,r){if("linear"===t)return e;if("relu"===t)return pO(e);if("elu"===t)return hr(e);if("relu6"===t)return p_(e);if("prelu"===t)return ph(e,n);else if("leakyrelu"===t)return hD(e,r);else if("sigmoid"===t)return uC(e);throw Error(`Unknown fused activation ${t}.`)}u(dM,"getFusedDyActivation",()=>dL),u(dM,"getFusedBiasGradient",()=>dz),u(dM,"applyActivation",()=>dP),u(dM,"shouldFuse",()=>dB);let dB=(e,t)=>!(e>0)||"linear"===t,dW=sm({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){let p,d;if(l=l||"linear",!1===dB(sr.state.gradientDepth,l)){Z("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let p=uj(e,t,n,r,a,s,i);return null!=o&&(p=os(p,o)),dP(p,l,u,h)}let c=sd(e,"x","conv2d","float32"),f=sd(t,"filter","conv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=uI(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Z(4===m.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),Z(4===f.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),uk("fused conv2d",r,i);let y="NHWC"===a?m.shape[3]:m.shape[1];Z(f.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`),Z(ux(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let b=up(m.shape,f.shape,n,s,r,i);if(null!=o&&(p=sd(o,"bias","fused conv2d"),[p]=a6(p,c),"NHWC"===a?oz(b.outShape,p.shape):(Z(p.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${p.shape.length}.`),Z(0===p.shape.length||p.shape[0]===b.outChannels||1===p.shape[0],()=>`Error in fused conv2d: bias shape (${p.shape}) is not compatible with the number of output channels (${b.outChannels})`))),null!=u){let e=u.shape;if(Z(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)Z(1===e[0]||e[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`);else if(3===e.length)try{oz(e,b.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`)}d=sd(u,"prelu weights","fused conv2d")}let x=(e,t)=>{Z("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[i,o,u,h]=t,p=dL(e,u,l);Z(ub(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let d=[uK(o.shape,p,i,n,r),d_(o,p,i.shape,n,r)];if(null!=h){let e=dz(h,p);d.push(e)}return d},w={x:m,filter:f,bias:p,preluActivationWeights:d},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?oy((e,t,n)=>{let r=sr.runKernel(rW,w,v);return n([t,e,r]),g&&(r=uI(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(m,f):oy((e,t,n,r)=>{let a=sr.runKernel(rW,w,v);return r([t,e,a,n]),g&&(a=uI(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(m,f,p)}}),dU=sm({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=uI(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=uI(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l};return sr.runKernel(t_,u,{strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n})}}),dV=sm({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=uI(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},h=sr.runKernel(tM,u,{strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e});return l?uI(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),dG=sm({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){let p,d;if(!1===dB(sr.state.gradientDepth,l)){let p=u6(e,t,n,r,a,s,i);return null!=o&&(p=os(p,o)),dP(p,l,u,h)}let c=sd(e,"x","depthwiseConv2d","float32"),f=sd(t,"filter","depthwiseConv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=uI(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Z(4===m.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),Z(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),Z(m.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==s&&(s=[1,1]),Z(ux(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),uk("fused depthwiseConv2d",r,i);let y=up(m.shape,f.shape,n,s,r,i,!0);null!=o&&(p=sd(o,"bias","fused conv2d"),[p]=a6(p,c),oz(y.outShape,p.shape)),null!=u&&(d=sd(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{Z(ub(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[a,o,u,h]=t,d=dL(e,u,l),c=dV(o.shape,d,a,n,r,s,i),f=dU(o,d,a.shape,n,r,s,i);return null!=h?[c,f,dz(p,d)]:[c,f]},x={x:m,filter:f,bias:p,preluActivationWeights:d},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?oy((e,t,n)=>{let r=sr.runKernel(rU,x,w);return n([t,e,r]),g&&(r=uI(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(m,f):oy((e,t,n,r)=>{let a=sr.runKernel(rU,x,w);return r([t,e,a,n]),g&&(a=uI(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(m,f,p)}}),dH=sm({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){let l,u;if(!1===dB(sr.state.gradientDepth,s)){let l=lr(e,t,n,r);return null!=a&&(l=os(l,a)),dP(l,s,i,o)}let h=sd(e,"a","fused matMul"),p=sd(t,"b","fused matMul");[h,p]=a6(h,p);let d=n?h.shape[h.rank-2]:h.shape[h.rank-1],c=r?p.shape[p.rank-1]:p.shape[p.rank-2],f=n?h.shape[h.rank-1]:h.shape[h.rank-2],m=r?p.shape[p.rank-2]:p.shape[p.rank-1],g=h.shape.slice(0,-2),y=p.shape.slice(0,-2),b=Q(g),x=Q(y);Z(d===c,()=>`Error in fused matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${h.shape} and ${p.shape} and transposeA=${n} and transposeB=${r} must match.`);let w=oz(h.shape.slice(0,-2),p.shape.slice(0,-2)).concat([f,m]),v=n?uI(h,[b,d,f]):uI(h,[b,f,d]),k=r?uI(p,[x,m,c]):uI(p,[x,c,m]);null!=a&&(l=sd(a,"bias","fused matMul"),[l]=a6(l,h),oz(w,l.shape)),null!=i&&(u=sd(i,"prelu weights","fused matMul"));let I=(e,t)=>{let i,o,[l,u,h,p]=t,d=dL(uI(e,h.shape),h,s);return(n||r?!n&&r?(i=lr(d,u,!1,!1),o=lr(d,l,!0,!1)):n&&!r?(i=lr(u,d,!1,!0),o=lr(l,d,!1,!1)):(i=lr(u,d,!0,!0),o=lr(d,l,!0,!0)):(i=lr(d,u,!1,!0),o=lr(l,d,!0,!1)),null!=a)?[i,o,dz(p,d)]:[i,o]},S={a:v,b:k,bias:l,preluActivationWeights:u},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?oy((e,t,n)=>{let r=sr.runKernel(rB,S,N);return n([e,t,r]),{value:uI(r,w),gradFunc:I}})(v,k):oy((e,t,n,r)=>{let a=sr.runKernel(rB,S,N);return r([e,t,a,n]),{value:uI(a,w),gradFunc:I}})(v,k,l)}}),dj=sm({hammingWindow_:function(e){return dR(e,.54,.46)}}),dq=sm({hannWindow_:function(e){return dR(e,.5,.5)}}),dK=sm({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(u$(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=uT([u$(e,s,t-r),oE([r],a)]);i.push(o),s+=n}return 0===i.length?dn([],[0,t]):uI(uT(i),[i.length,t])}}),dX=sm({stft_:function(e,t,n,r,a=dq){return null==r&&(r=dA(t)),p4(ol(dK(e,t,n),a(t)),r)}}),dZ=sm({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=sd(e,"image","cropAndResize"),o=sd(t,"boxes","cropAndResize","float32"),l=sd(n,"boxInd","cropAndResize","int32"),u=o.shape[0];return Z(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),Z(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),Z(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),Z(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),Z(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),Z("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),sr.runKernel(tR,{image:i,boxes:o,boxInd:l},{method:a,extrapolationValue:s,cropSize:r})}}),dY=sm({flipLeftRight_:function(e){let t=sd(e,"image","flipLeftRight","float32");return Z(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),sr.runKernel(tQ,{image:t},{})}}),dJ=sm({grayscaleToRGB_:function(e){let t=sd(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Z(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),Z(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=Array(t.rank);return a.fill(1,0,n),a[n]=3,hS(t,a)}}),dQ=sm({rgbToGrayscale_:function(e){let t,n=sd(e,"image","RGBToGrayscale"),r=n.rank-1,a=n.shape[r];Z(n.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${n.rank}.`),Z(3===a,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);let s=n.dtype,i=on(n,"float32"),o=dt([.2989,.587,.114]);switch(n.rank){case 2:t=hn("ij,j->i",i,o);break;case 3:t=hn("ijk,k->ij",i,o);break;case 4:t=hn("ijkl,l->ijk",i,o);break;case 5:t=hn("ijklm,m->ijkl",i,o);break;case 6:t=hn("ijklmn,n->ijklm",i,o);break;default:throw Error("Not a valid tensor rank.")}return on(t=hk(t,-1),s)}}),d0=sm({rotateWithOffset_:function(e,t,n=0,r=.5){let a=sd(e,"image","rotateWithOffset","float32");return Z(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),sr.runKernel(rP,{image:a},{radians:t,fillValue:n,center:r})}});function d1(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=-1/0),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Z(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),Z(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Z(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),Z(1===t.rank,()=>"scores must be a 1D tensor"),Z(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),Z(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}let d2=sm({nonMaxSuppression_:function(e,t,n,r=.5,a=-1/0){let s=sd(e,"boxes","nonMaxSuppression","float32"),i=sd(t,"scores","nonMaxSuppression","float32"),o=d1(s,i,n,r,a);n=o.maxOutputSize;let l={maxOutputSize:n,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return sr.runKernel(nO,{boxes:s,scores:i},l)}});function d3(e,t){return e>t?1:e<t?-1:0}function d4(e,t,n,r,a){return d8(e,t,n,r,a,0)}function d6(e,t,n,r,a,s){return d8(e,t,n,r,a,0,!1,s,!0)}function d5(e,t,n,r,a,s){return d8(e,t,n,r,a,s,!0)}function d8(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(d7);let h=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=p.length-1;n>=i;--n){let i=function(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),h=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),c=(o-s)*(l-i),f=(p-u)*(d-h);if(c<=0||f<=0)return 0;let m=Math.max(Math.min(o,p)-Math.max(s,u),0)*Math.max(Math.min(l,d)-Math.max(i,h),0);return m/(c+f-m)}(e,s,p[n]);if(i>=r){o=!0;break}if(t.score=t.score*function(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}(r,h,i),t.score<=a)break}t.suppressBeginIndex=p.length,!o&&(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&function(e,t,n){let r=function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){let o=n(t,e[s=r+(a-r>>>1)]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||d3);e.splice(r<0?-(r+1):r,0,t)}(u,t,d7))}let c=p.length,f=n-c;o&&f>0&&(p.push(...Array(f).fill(0)),d.push(...Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function d7(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function d9(e,t,n,r=.5,a=-1/0){let s=sd(e,"boxes","nonMaxSuppressionAsync"),i=sd(t,"scores","nonMaxSuppressionAsync"),o=d1(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),{selectedIndices:u}=d4(l[0],l[1],n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),dt(u,"int32")}let ce=sm({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=-1/0,s=0){let i=sd(e,"boxes","nonMaxSuppression"),o=sd(t,"scores","nonMaxSuppression"),l=d1(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold;let u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s=l.softNmsSigma},h=sr.runKernel(nM,{boxes:i,scores:o},u);return{selectedIndices:h[0],selectedScores:h[1]}}});async function ct(e,t,n,r=.5,a=-1/0,s=0){let i=sd(e,"boxes","nonMaxSuppressionAsync"),o=sd(t,"scores","nonMaxSuppressionAsync"),l=d1(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),{selectedIndices:h,selectedScores:p}=d5(u[0],u[1],n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:dt(h,"int32"),selectedScores:dt(p)}}let cn=sm({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=-1/0,s=!1){let i=sd(e,"boxes","nonMaxSuppression"),o=sd(t,"scores","nonMaxSuppression"),l=d1(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,d=sr.runKernel(n_,{boxes:i,scores:o},{maxOutputSize:u,iouThreshold:h,scoreThreshold:p,padToMaxOutputSize:s});return{selectedIndices:d[0],validOutputs:d[1]}}});async function cr(e,t,n,r=.5,a=-1/0,s=!1){let i=sd(e,"boxes","nonMaxSuppressionAsync"),o=sd(t,"scores","nonMaxSuppressionAsync"),l=d1(i,o,n,r,a,null),u=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=d6(d,c,u,h,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:dt(f,"int32"),validOutputs:ox(m,"int32")}}let ca=sm({resizeBilinear_:function(e,t,n=!1,r=!1){let a=sd(e,"images","resizeBilinear");Z(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),Z(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),Z(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=uI(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l=sr.runKernel(n1,o,{alignCorners:n,halfPixelCenters:r,size:t});return i?uI(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),cs=sm({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=sd(e,"images","resizeNearestNeighbor");Z(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),Z(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),Z("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Z(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=uI(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l=sr.runKernel(nQ,o,{alignCorners:n,halfPixelCenters:r,size:t});return i?uI(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ci=sm({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=sd(e,"image","threshold"),u=l.shape[0]*l.shape[1],h=ol(dt([r]),255);if(Z(3===l.rank,()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`),Z(3===l.shape[2]||1===l.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`),Z("int32"===l.dtype||"float32"===l.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`),Z("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===l.shape[2]){[a,s,i]=p3(l,[1,1,1],-1);let e=ol(a,.2989),t=ol(s,.587),n=ol(i,.114);o=os(os(e,t),n)}else o=e;return"otsu"===t&&(h=function(e,t){let n,r,a,s,i,o,l=dt([-1]),u=dt([0]),h=dt([0]);for(let p=0;p<e.size-1;p++){n=u$(e,0,p+1),r=u$(e,p+1),i=oo(hb(n),t),o=oo(hb(r),t),a=oo(hb(ol(n,pF(0,n.size))),hb(n));let d=oE(r.shape,n.size),c=os(pF(0,r.size),d),f=oF(a,s=oo(hb(ol(r,c)),hb(r))),m=oF(a,s),g=ol(i,o),y=h$(h=ol(ol(g,f),m),u);u=u9(y,h,u),l=u9(y,dt([p]),l)}return l}(uM(on(pW(o),"int32"),sb([]),256),u)),on(ol(n?h_(o,h):h$(o,h),255),"int32")}}),co=sm({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=sd(e,"image","transform","float32"),o=sd(t,"transforms","transform","float32");return Z(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),Z(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Z(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`),sr.runKernel(rA,{image:i,transforms:o},{interpolation:n,fillMode:r,fillValue:a,outputShape:s})}}),cl=sm({bandPart_:function(e,t,n){let r,a,s=sd(e,"a","bandPart");Z(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let i=s.shape,[o,l]=s.shape.slice(-2);"number"==typeof t?(Z(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Z(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),r=sd(t<0?o:t,"numLower","bandPart")):(Z("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),r=u9(hO(t,0),o,h4(t,o))),"number"==typeof n?(Z(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),Z(n<=l,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`),a=sd(n<0?l:n,"numUpper","bandPart")):(Z("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),a=u9(hO(n,0),l,h4(n,l)));let u=oF(uI(pF(0,o,1,"int32"),[-1,1]),pF(0,l,1,"int32")),h=hG(h_(u,r),hE(u,lo(a))),p=h1([o,l],s.dtype);return uI(p8(dd(uI(s,[-1,o,l])).map(e=>u9(h,e,p))),i)}}),cu=sm({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Z(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)Z(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=p3(e,e.shape[0],0).map(e=>p5(e,[0]));Z(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let t=0;t<e.length;++t)n.push(sr.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=ol(hb(ol(n[r],e)),n[r]);e=oF(e,t)}return oo(e,hx(e,"euclidean"))}));return t?p8(n,0):n}});function ch(e,t=!1){return sr.tidy(()=>{Z(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=hN(n),s=or(e),i=dn([[1]],[1,1]),o=or(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=sr.tidy(()=>{let t=u$(s,[e,e],[n-e,1]),l=hx(t),u=u$(s,[e,e],[1,1]),h=u9(h$(u,0),dn([[-1]]),dn([[1]])),p=oF(u,ol(h,l)),d=oo(t,p);o=1===d.shape[0]?or(i):uT([i,u$(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=lo(oo(lr(h,p),l)),f=u$(s,[e,0],[n-e,r]),m=ol(c,o),g=lu(o);if(0===e)s=oF(f,lr(m,lr(g,f)));else{let t=oF(f,lr(m,lr(g,f)));s=uT([u$(s,[0,0],[e,r]),t],0)}let y=lu(m),b=u$(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=oF(b,lr(lr(b,o),y));else{let t=oF(b,lr(lr(b,o),y));a=uT([u$(a,[0,0],[n,e]),t],1)}return[o,s,a]}),sR([t,l,u])}return!t&&n>r&&(a=u$(a,[0,0],[n,r]),s=u$(s,[0,0],[r,r])),[a,s]})}let cp=sm({qr_:function(e,t=!1){if(Z(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return ch(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=dd(uI(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{let[n,r]=ch(e,t);a.push(n),s.push(r)}),[uI(p8(a,0),e.shape),uI(p8(s,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(v||(v={}));let cd=sm({computeWeightedLoss_:function(e,t,n=v.SUM_BY_NONZERO_WEIGHTS){let r=sd(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=sd(t,"weights","computeWeightedLoss"));let s=null==a?r:ol(r,a);if(n===v.NONE)return s;if(n===v.SUM)return hb(s);if(n===v.MEAN)if(null==a)return h0(s);else{let e=r.size/a.size,t=oo(hb(s),hb(a));return e>1?oo(t,ox(e)):t}if(n===v.SUM_BY_NONZERO_WEIGHTS)if(null==a)return oo(hb(s),ox(r.size));else{let e=on(hb(pe(ol(a,h2(r.shape)),ox(0))),"float32");return oo(hb(s),e)}throw Error(`Unknown reduction: ${n}`)}}),cc=sm({absoluteDifference_:function(e,t,n,r=v.SUM_BY_NONZERO_WEIGHTS){let a=sd(e,"labels","absoluteDifference"),s=sd(t,"predictions","absoluteDifference"),i=null;return null!=n&&(i=sd(n,"weights","absoluteDifference")),Y(a.shape,s.shape,"Error in absoluteDifference: "),cd(oO(oF(a,s)),i,r)}}),cf=sm({cosineDistance_:function(e,t,n,r,a=v.SUM_BY_NONZERO_WEIGHTS){let s=sd(e,"labels","cosineDistance"),i=sd(t,"predictions","cosineDistance"),o=null;return null!=r&&(o=sd(r,"weights","cosineDistance")),Y(s.shape,i.shape,"Error in cosineDistance: "),cd(oF(ox(1),hb(ol(s,i),n,!0)),o,a)}}),cm=sm({hingeLoss_:function(e,t,n,r=v.SUM_BY_NONZERO_WEIGHTS){let a=sd(e,"labels","hingeLoss"),s=sd(t,"predictions","hingeLoss"),i=null;null!=n&&(i=sd(n,"weights","hingeLoss")),Y(a.shape,s.shape,"Error in hingeLoss: ");let o=ox(1);return a=oF(ol(ox(2),a),o),cd(pO(oF(o,ol(a,s))),i,r)}}),cg=sm({huberLoss_:function(e,t,n,r=1,a=v.SUM_BY_NONZERO_WEIGHTS){let s=sd(e,"labels","huberLoss"),i=sd(t,"predictions","huberLoss"),o=null;null!=n&&(o=sd(n,"weights","huberLoss")),Y(s.shape,i.shape,"Error in huberLoss: ");let l=ox(r),u=oO(oF(i,s)),h=h4(u,l),p=oF(u,h);return cd(os(ol(ox(.5),oh(h)),ol(l,p)),o,a)}}),cy=sm({logLoss_:function(e,t,n,r=1e-7,a=v.SUM_BY_NONZERO_WEIGHTS){let s=sd(e,"labels","logLoss"),i=sd(t,"predictions","logLoss"),o=null;null!=n&&(o=sd(n,"weights","logLoss")),Y(s.shape,i.shape,"Error in logLoss: ");let l=ox(1),u=ox(r),h=lo(ol(s,hz(os(i,u)))),p=ol(oF(l,s),hz(os(oF(l,i),u)));return cd(oF(h,p),o,a)}}),cb=sm({meanSquaredError_:function(e,t,n,r=v.SUM_BY_NONZERO_WEIGHTS){let a=sd(e,"labels","meanSquaredError"),s=sd(t,"predictions","meanSquaredError"),i=null;return null!=n&&(i=sd(n,"weights","meanSquaredError")),Y(a.shape,s.shape,"Error in meanSquaredError: "),cd(p6(a,s),i,r)}}),cx=sm({sigmoidCrossEntropy_:function(e,t,n,r=0,a=v.SUM_BY_NONZERO_WEIGHTS){let s=sd(e,"multiClassLabels","sigmoidCrossEntropy"),i=sd(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=sd(n,"weights","sigmoidCrossEntropy")),Y(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=ox(r),t=ox(1),n=ox(.5);s=os(ol(s,oF(t,e)),ol(n,e))}return cd(function(e,t){let n=sd(e,"labels","sigmoidCrossEntropyWithLogits"),r=sd(t,"logits","sigmoidCrossEntropyWithLogits");Y(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=pO(r),s=ol(r,n),i=hP(hv(lo(oO(r))));return os(oF(a,s),i)}(s,i),o,a)}}),cw=sm({softmaxCrossEntropy_:function(e,t,n,r=0,a=v.SUM_BY_NONZERO_WEIGHTS){let s=sd(e,"onehotLabels","softmaxCrossEntropy"),i=sd(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=sd(n,"weights","softmaxCrossEntropy")),Y(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=ox(r),t=ox(1),n=ox(s.shape[1]);s=os(ol(s,oF(t,e)),oo(e,n))}return cd(function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return oy((e,t,r)=>{let a=hV(t,[n],!0),s=oF(on(t,"float32"),a);return r([e,s]),{value:hb(lo(ol(s,e)),[n]),gradFunc:(e,t)=>{let[r,a]=t,s=hp(e.shape,[n]);return[ol(uI(e,s),oF(on(r,"float32"),hv(a))),ol(uI(e,s),oF(hv(a),on(r,"float32")))]}}})(e,t)}(s,i),o,a)}}),cv=sm({sparseFillEmptyRows_:function(e,t,n,r){let a=sd(e,"indices","sparseFillEmptyRows","int32"),s=sd(t,"values","sparseFillEmptyRows"),i=sd(n,"denseShape","sparseFillEmptyRows","int32"),o=sd(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(1!==s.rank)throw Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw Error(`Default value should be a scalar but received shape ${o.shape}`);let l=sr.runKernel(rc,{indices:a,values:s,denseShape:i,defaultValue:o});return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),ck=sm({sparseReshape_:function(e,t,n){let r=sd(e,"inputIndices","sparseReshape","int32"),a=sd(t,"inputShape","sparseReshape","int32"),s=sd(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(1!==a.rank)throw Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i=sr.runKernel(rf,{inputIndices:r,inputShape:a,newShape:s});return{outputIndices:i[0],outputShape:i[1]}}}),cI=sm({sparseSegmentMean_:function(e,t,n){let r=sd(e,"data","sparseSegmentMean"),a=sd(t,"indices","sparseSegmentMean","int32"),s=sd(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);return sr.runKernel(rm,{data:r,indices:a,segmentIds:s})}}),cS=sm({sparseSegmentSum_:function(e,t,n){let r=sd(e,"data","sparseSegmentSum"),a=sd(t,"indices","sparseSegmentSum","int32"),s=sd(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(1!==s.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);return sr.runKernel(rg,{data:r,indices:a,segmentIds:s})}}),cN=sm({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=sd(e,"data","stringNGrams","string");if("string"!==l.dtype)throw Error("Data must be of datatype string");if(1!==l.shape.length)throw Error(`Data must be a vector, saw: ${l.shape}`);let u=sd(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw Error("Data splits must be of datatype int32");let h=sr.runKernel(rk,{data:l,dataSplits:u},{separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o});return{nGrams:h[0],nGramsSplits:h[1]}}}),cT=sm({stringSplit_:function(e,t,n=!0){let r=sd(e,"input","stringSplit","string"),a=sd(t,"delimiter","stringSplit","string");if(1!==r.rank)throw Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s=sr.runKernel(rI,{input:r,delimiter:a},{skipEmpty:n});return{indices:s[0],values:s[1],shape:s[2]}}}),cC=sm({stringToHashBucketFast_:function(e,t){let n=sd(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return sr.runKernel(rS,{input:n},{numBuckets:t})}}),c$=sm({staticRegexReplace_:function(e,t,n,r=!0){let a=sd(e,"input","staticRegexReplace","string");return sr.runKernel(rw,{x:a},{pattern:t,rewrite:n,replaceGlobal:r})}}),cE={fft:p0,ifft:p1,rfft:p4,irfft:p2},cA={hammingWindow:dj,hannWindow:dq,frame:dK,stft:dX},cR={flipLeftRight:dY,grayscaleToRGB:dJ,resizeNearestNeighbor:cs,resizeBilinear:ca,rgbToGrayscale:dQ,rotateWithOffset:d0,cropAndResize:dZ,nonMaxSuppression:d2,nonMaxSuppressionAsync:d9,nonMaxSuppressionWithScore:ce,nonMaxSuppressionWithScoreAsync:ct,nonMaxSuppressionPadded:cn,nonMaxSuppressionPaddedAsync:cr,threshold:ci,transform:co},cF={bandPart:cl,gramSchmidt:cu,qr:cp},cD={absoluteDifference:cc,computeWeightedLoss:cd,cosineDistance:cf,hingeLoss:cm,huberLoss:cg,logLoss:cy,meanSquaredError:cb,sigmoidCrossEntropy:cx,softmaxCrossEntropy:cw},cO={sparseFillEmptyRows:cv,sparseReshape:ck,sparseSegmentMean:cI,sparseSegmentSum:cS},c_={stringNGrams:cN,stringSplit:cT,stringToHashBucketFast:cC,staticRegexReplace:c$};l(l4,dy),l(l4,ls),l(l4,hi),l(l4,dx),l(l4,dv),l(l4,hK),l(l4,dI),l(l4,dN),l(l4,dC),l(l4,dE),l(l4,dF);var cM={};u(cM,"train",()=>cL);let cL=l3,cz="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function cP(){return new Promise(e=>cz(()=>e()))}var cB={};u(cB,"fromUint8ToStringArray",()=>fV),u(cB,"fromStringArrayToUint8",()=>fG),u(cB,"slice_util",()=>lT),u(cB,"upcastType",()=>a1),u(cB,"segment_util",()=>fP);var cW={};function cU(e,t){let n=e[0].length;e.forEach((e,t)=>{Z(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),Z(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)Z(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function cV(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}u(cW,"assertParamsConsistent",()=>cU),u(cW,"computeOutShape",()=>cV);var cG={};function cH(e,t,n){let r=[];if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function cj(e){let t={FIRST_DIM_SIZE:k.FIRST_DIM_SIZE,VALUE_ROWIDS:k.VALUE_ROWIDS,ROW_LENGTHS:k.ROW_LENGTHS,ROW_SPLITS:k.ROW_SPLITS,ROW_LIMITS:k.ROW_LIMITS,ROW_STARTS:k.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function cq(e){return 0===e.length?0:e[0]===k.FIRST_DIM_SIZE?e.length-1:e.length}function cK(e,t){if(null==e||null==t)return;let n=e.length,r=t.length;if(n>=r)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}u(cG,"RowPartitionType",()=>k),u(cG,"combineRaggedTensorToTensorShapes",()=>cH),u(cG,"getRowPartitionTypesHelper",()=>cj),u(cG,"getRaggedRank",()=>cq),u(cG,"validateDefaultValueShape",()=>cK),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(k||(k={}));var cX={};u(cX,"PARALLELIZE_THRESHOLD",()=>cZ),u(cX,"computeOptimalWindowSize",()=>cY);let cZ=30;function cY(e){return e<=cZ?e:eS(e,Math.floor(Math.sqrt(e)))}var cJ={};function cQ(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}u(cJ,"getImageCenter",()=>cQ);var c0={};function c1(e,t,n,r=!0){let a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function c2(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function c3(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function c4(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function c6(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}u(c0,"getReshaped",()=>c1),u(c0,"getPermuted",()=>c2),u(c0,"getReshapedPermuted",()=>c3),u(c0,"getSliceBeginCoords",()=>c4),u(c0,"getSliceSize",()=>c6);var c5={};u(c5,"SELU_SCALEALPHA",()=>c8),u(c5,"SELU_SCALE",()=>c7);let c8=1.7580993408473768,c7=1.0507009873554805;var c9={};u(c9,"ERF_P",()=>fe),u(c9,"ERF_A1",()=>ft),u(c9,"ERF_A2",()=>fn),u(c9,"ERF_A3",()=>fr),u(c9,"ERF_A4",()=>fa),u(c9,"ERF_A5",()=>fs);let fe=.3275911,ft=.254829592,fn=-.284496736,fr=1.421413741,fa=-1.453152027,fs=1.061405429;var fi={};function fo(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function fl(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function fu(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function fh(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function fp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function fd(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function fc(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ff(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}u(fi,"mergeRealAndImagArrays",()=>fo),u(fi,"splitRealAndImagArrays",()=>fl),u(fi,"complexWithEvenIndex",()=>fu),u(fi,"complexWithOddIndex",()=>fh),u(fi,"getComplexWithIndex",()=>fp),u(fi,"assignToTypedArray",()=>fd),u(fi,"exponents",()=>fc),u(fi,"exponent",()=>ff);var fm={};u(fm,"decodeEinsumEquation",()=>fy),u(fm,"getEinsumPermutation",()=>fb),u(fm,"checkEinsumDimSizes",()=>fx),u(fm,"getEinsumComputePath",()=>fw),u(fm,"isIdentityPermutation",()=>fv);let fg=/->/g;function fy(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(fg,"").length)/2;if(n<1)throw Error("Equations without an arrow are not supported.");if(n>1)throw Error('Equation must contain exactly one arrow ("->").');let[r,a]=e.split("->");Z(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let s=r.split(","),i=s.length;if(t!==i)throw Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let l=Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,h=a.length,p=[];for(let e=h;e<u;++e)p.push(e);return{allDims:o,summedDims:p,idDims:l}}function fb(e,t){let n=Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return{permutationIndices:n=n.filter(e=>-1!==e),expandDims:r}}function fx(e,t,n){let r=Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Z(r[t[e][n]]===a[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`)}}function fw(e,t){let n=[],r=0;0===e.length&&e.push(-1),r=e.length+1;for(let e=0;e<r;++e)n.push([]);let a=[];for(let r=0;r<e.length;++r)for(let s of function(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}(t,e[r]))-1===a.indexOf(s)&&(n[r].push(s),a.push(s));return{path:e,steps:n}}function fv(e){return e.every((e,t)=>e===t)}var fk={};function fI(e,t,n=0){let r=[];if("number"==typeof t)Z(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=Array(t).fill(e.shape[n]/t);else{Z(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(-1!==a){let r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}Z(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}u(fk,"prepareSplitSize",()=>fI);var fS={};function fN(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function fT(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function fC(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}u(fS,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",()=>fN),u(fS,"getSparseFillEmptyRowsNegativeIndexErrorMessage",()=>fT),u(fS,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",()=>fC);var f$={};function fE(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function fA(e,t){return`size ${e} must be non-negative, not ${t}`}function fR(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fF(e,t){let n=Q(e),r=Q(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function fD(e,t){let n=Q(e),r=Q(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}u(f$,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",()=>fE),u(f$,"getSparseReshapeNegativeOutputDimErrorMessage",()=>fA),u(f$,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",()=>fR),u(f$,"getSparseReshapeInputOutputMultipleErrorMessage",()=>fF),u(f$,"getSparseReshapeInputOutputMismatchErrorMessage",()=>fD);var fO={};function f_(){return"segment ids must be >= 0"}function fM(){return"segment ids are not increasing"}function fL(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function fz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}u(fO,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",()=>f_),u(fO,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",()=>fM),u(fO,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",()=>fL),u(fO,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",()=>fz);var fP={};function fB(e,t){let n,r=!1;for(e<=cZ?(n=e,r=!0):n=eS(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=eS(e,n+1);return n}function fW(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function fU(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,h=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),h*=e.shape[t];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function fV(e){try{return e.map(e=>aP(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fG(e){return e.map(e=>az(e))}u(fP,"segOpComputeOptimalWindowSize",()=>fB),u(fP,"computeOutShape",()=>fW),u(fP,"collectGatherOpShapeInfo",()=>fU),l(cB,ho),l(cB,o_),l(cB,cW),l(cB,uo),l(cB,dM),l(cB,{}),l(cB,cG),l(cB,cX),l(cB,cJ),l(cB,c0),l(cB,lw),l(cB,lk),l(cB,c5),l(cB,c9),l(cB,rG),l(cB,fi),l(cB,fm),l(cB,fk),l(cB,fS),l(cB,f$),l(cB,fO);var fH={};for(let e of(u(fH,"nonMaxSuppressionV3Impl",()=>d4),u(fH,"nonMaxSuppressionV4Impl",()=>d6),u(fH,"nonMaxSuppressionV5Impl",()=>d5),u(fH,"whereImpl",()=>dm),l(oG,l4),l(oG,cM),l(oG,sv),l(oG,rV),l(oG,e0),[o$,oA,oD,oB,oU,oV,oW]))oN(e);l(L,oG);let fj={kernelName:e1,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,p7(on(n,"float32"),-1))}}},fq=sm({avgPool3dGrad_:function(e,t,n,r,a,s){let i=sd(e,"dy","avgPool3dGrad"),o=sd(t,"input","avgPool3dGrad"),l=i,u=o,h=!1;4===o.rank&&(h=!0,l=uI(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=uI(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Z(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),Z(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),uk("avgPool3dGrad",a,s);let p={dy:l,input:u},d=sr.runKernel(tl,p,{filterSize:n,strides:r,pad:a,dimRoundingMode:s});return h?uI(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),fK=sm({avgPoolGrad_:function(e,t,n,r,a){let s=sd(e,"dy","avgPoolGrad"),i=sd(t,"input","avgPoolGrad");Z(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=uI(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=uI(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Z(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),Z(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let h={dy:l,input:o},p=sr.runKernel(ti,h,{filterSize:n,strides:r,pad:a});return u?uI(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),fX={kernelName:tx,inputsToSave:["x"],gradFunc:fj.gradFunc},fZ=sm({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=uI(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=uI(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Z(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),Z(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),Z(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),Z(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),Z(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i};return sr.runKernel(tN,o,{strides:r,pad:a,filterShape:n})}});function fY(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function fJ(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}let fQ=sm({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return sr.runKernel(ng,{x:e,y:t,dy:n},{depthRadius:r,bias:a,alpha:s,beta:i})}});function f0(e,t,n,r){return t.rank<n.rank&&(t=uI(t,hp(t.shape,r))),e.rank<n.rank&&(e=uI(e,hp(e.shape,r))),{x:()=>ol(e,on(u7(n,t),e.dtype))}}let f1={kernelName:nb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{reductionIndices:r}=n,a=t[0],s=t[1],i=eh(r,a.shape),o=f0(e,s,a,i);return{x:()=>o.x()}}},f2=sm({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=sd(e,"dy","maxPool3dGrad"),l=sd(t,"input","maxPool3dGrad"),u=sd(n,"output","maxPool3dGrad"),h=o,p=l,d=u,c=!1;4===l.rank&&(c=!0,h=uI(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=uI(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=uI(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Z(5===h.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),Z(5===p.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),Z(5===d.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),uk("maxPool3dGrad",s,i);let f={dy:h,input:p,output:d},m=sr.runKernel(nI,f,{filterSize:r,strides:a,pad:s,dimRoundingMode:i});return c?uI(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),f3=sm({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=sd(e,"dy","maxPoolGrad"),l=sd(t,"input","maxPoolGrad"),u=sd(n,"output","maxPoolGrad");return Z(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),Z(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),Z(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),uk("maxPoolGrad",s,i),sr.runKernel(nv,{dy:o,input:l,output:u},{filterSize:r,strides:a,pad:s,dimRoundingMode:i})}}),f4={kernelName:nB,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>u$(e,s,r.shape)}}},f6={kernelName:rh,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>uR(e,r,a)}}},f5={kernelName:rp,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>uT(e,r)}}};for(let e of[fj,{kernelName:e2,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=oh(on(n,"float32"));return lo(oo(e,ou(oF(ox(1),t))))}}}},{kernelName:e3,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,ou(oF(oh(on(n,"float32")),1)))}}},{kernelName:e4,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=e,r=oL(n.shape,a);return r.length>0&&(t=hb(t,r)),uI(t,n.shape)},b:()=>{let t=e,n=oL(r.shape,a);return n.length>0&&(t=hb(t,n)),uI(t,r.shape)}}}},{kernelName:e6,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},{kernelName:e7,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>op(n)}}},{kernelName:e9,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>op(n)}}},{kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,ou(oF(ox(1),oh(on(n,"float32")))))}}},{kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,ou(os(ox(1),oh(on(n,"float32")))))}}},{kernelName:ta,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=os(oh(n),oh(r)),s=ol(e,oo(r,t)),i=oL(n.shape,a);return i.length>0&&(s=hb(s,i)),uI(s,n.shape)},b:()=>{let t=os(oh(n),oh(r)),s=lo(ol(e,oo(n,t))),i=oL(r.shape,a);return i.length>0&&(s=hb(s,i)),uI(s,r.shape)}}}},{kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,os(oh(on(n,"float32")),1))}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,oF(ox(1),oh(on(n,"float32"))))}}},{kernelName:to,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>fq(e,r,a,s,i,o)}}},{kernelName:ts,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>fK(e,r,a,s,i)}}},{kernelName:tu,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>lr(e,a,!1,!1),b:()=>lr(e,r,!0,!1)}:s&&!i?{a:()=>lr(a,e,!1,!0),b:()=>lr(r,e,!1,!1)}:{a:()=>lr(a,e,!0,!0),b:()=>lr(e,r,!0,!0)}:{a:()=>lr(e,a,!1,!0),b:()=>lr(r,e,!0,!1)}}},{kernelName:th,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>pl(e,r,a)}}},{kernelName:tc,gradFunc:(e,t,n)=>{let r=n.inputShape,a=n.shape,s=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])s[e]=1;else if(1!==r[e])throw Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let i=[];for(let e=0;e<s.length;e++)s[e]>1&&i.push(e);return{x:()=>hb(e,i,!0)}}},{kernelName:tm,gradFunc:e=>({x:()=>e.clone()})},{kernelName:tg,gradFunc:e=>({x:()=>op(e)})},{kernelName:ty,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>u9(hG(hE(r,a),h_(r,s)),e,op(e))}}},fX,{kernelName:tw,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(e=>e.shape),{axis:a}=n,s=eh(a,t[0].shape)[0];return p3(e,r.map(e=>e[s]),s).map(e=>()=>e)}},{kernelName:tI,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>uj(e,a,s,i,o,1,l),filter:()=>d_(e,r,a.shape,s,i,o,l)}}},{kernelName:tv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Z(ub(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>uK(r.shape,e,a,i,o,l),filter:()=>d_(r,e,a.shape,i,o,l)}}},{kernelName:tS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Z(ub(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>uY(i.shape,e,o,a,s),filter:()=>fZ(i,e,o.shape,a,s)}}},{kernelName:tC,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(lo(pq(on(n,"float32"))),e)}}},{kernelName:t$,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(pK(on(n,"float32")),e)}}},{kernelName:tA,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=hc([a],r.rank),n=u2(e,a,s,!i);return null!=t&&(n=lu(n,t)),n}}}},{kernelName:tO,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Z(ub(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return Z(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),Z(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),Z(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),Z(ux(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),uk("depthwiseConv2d",s,i),{x:()=>dV(l.shape,e,u,a,s,o,i),filter:()=>dU(l,e,u.shape,a,s,o,i)}}},{kernelName:tz,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>sr.runKernel(tP,s,n),filter:()=>sr.runKernel(tB,i,n)}}},{kernelName:tU,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=oo(e,on(r,"float32")),s=oL(n.shape,a);return s.length>0?uI(hb(t,s),n.shape):t},b:()=>{let t=ol(e,on(n,"float32")),s=oL(r.shape,a);return s.length>0&&(t=uI(hb(t,s),r.shape)),lo(oo(t,on(oh(r),"float32")))}}}},{kernelName:tG,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>sr.runKernel(tH,r)}}},{kernelName:tj,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=ol(hv(lo(oh(n))),2/Math.sqrt(Math.PI));return{x:()=>ol(e,r)}}},{kernelName:tK,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,n)}}},{kernelName:tX,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>uI(e,n.shape)}}},{kernelName:tZ,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,hv(n))}}},{kernelName:t1,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=oo(e,on(r,"float32")),s=oL(n.shape,a);return s.length>0?uI(hb(t,s),n.shape):t},b:()=>{let t=ol(e,on(n,"float32")),s=oL(r.shape,a);return s.length>0&&(t=uI(hb(t,s),r.shape)),lo(oo(t,on(oh(r),"float32")))}}}},{kernelName:t0,gradFunc:e=>({x:()=>op(e)})},{kernelName:t2,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?ox(1):o,u=oL(s.shape,a.shape),h=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)h.push(a.shape[e]);h.push(1)}let p=oF(a,s),d=ol(e,l),c=pU(os(i,ox(r))),f=ol(ol(ol(c,c),c),ox(-.5));return{x:()=>1===s.rank?uI(ol(ol(e,hS(uI(c,[1,1,1,s.shape[0]]),h)),l),a.shape):uI(ol(ol(e,c),l),a.shape),mean:()=>{let e=ol(ol(c,ox(-1)),d);return 1===s.rank&&(e=hb(e,u)),uI(e,s.shape)},variance:()=>{let e=ol(ol(f,p),d);return 1===s.rank&&(e=hb(e,u)),uI(e,s.shape)},scale:()=>{let t=ol(p,c),n=ol(e,t);return 1===s.rank&&(n=hb(n,u)),uI(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=hb(t,u)),uI(t,s.shape)}}}},{kernelName:t3,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s,batchDims:i}=n,o=eh(s,r.shape)[0],l=(e,t,n)=>()=>{let r=e.shape,a=t.size,i=r.slice(0,o),l=i.length,u=r.slice(s,r.length).slice(1),h=u.length,p=fY(0,l),d=fY(l+1,l+1+h),c=uI(n,fJ([i,[a],u])),f=uI(t,[a]),m=fJ([[l],p,d]),g=dp(lu(c,m),f,e.shape[o]);return lu(g,hf(m))};if(1!==i)return{x:l(r,a,e),indices:()=>a};{let t=r.shape[0],n=r.split(t,0);return{x:()=>p8(n.map((t,n)=>l(t,a.slice(n,1),e.slice(n,1))())).reshape(r.shape),indices:()=>a}}}},{kernelName:t5,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>op(n),b:()=>op(r)}}},{kernelName:t8,gradFunc:e=>({x:()=>on(e,"float32")})},{kernelName:ne,gradFunc:e=>({x:()=>op(e)})},{kernelName:nt,gradFunc:e=>({x:()=>op(e)})},{kernelName:nn,gradFunc:e=>({x:()=>op(e)})},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=h$(r,0);return{x:()=>u9(s,e,ol(e,a))}}},{kernelName:nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,os(n,1))}}},{kernelName:no,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,on(n,"float32"))}}},{kernelName:nc,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=hv(r);return oF(e,ol(hb(e,a,!0),t))}}}},{kernelName:nm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>fQ(r,a,e,s,i,o,l)}}},f1,f1,{kernelName:nx,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>ol(e,on(hE(n,r),"float32")),b:()=>ol(e,on(hO(n,r),"float32"))}}},{kernelName:nk,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>f2(e,r,a,s,i,o,l)}}},{kernelName:nw,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>f3(e,r,a,s,i,o)}}},{kernelName:nN,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=eh(a,r.shape),i=Q(hh(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();return s.forEach(e=>{t[e]=1}),oo(ol(uI(e,t),h2(r.shape,"float32")),i)}}}},{kernelName:nT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let{axis:r}=n,[a,s]=t,i=eh(r,a.shape),o=f0(e,s,a,i);return{x:()=>o.x()}}},{kernelName:nC,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>ol(e,on(h_(n,r),"float32")),b:()=>ol(e,on(h$(n,r),"float32"))}}},{kernelName:n$,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>u$(e,s,r.shape)}}},{kernelName:nE,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=oL(n.shape,a);return t.length>0?uI(hb(e,t),n.shape):e},b:()=>{let t=ol(e,lo(hT(oo(n,r)))),s=oL(r.shape,a);return s.length>0?uI(hb(t,s),r.shape):t}}}},{kernelName:nR,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=ol(e,on(r,"float32")),s=oL(n.shape,a);return s.length>0?uI(hb(t,s),n.shape):t},b:()=>{let t=ol(e,on(n,"float32")),s=oL(r.shape,a);return s.length>0?uI(hb(t,s),r.shape):t}}}},{kernelName:nF,gradFunc:e=>({x:()=>lo(e)})},{kernelName:nz,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>h1(n.shape,"float32")}}},{kernelName:nL,gradFunc:e=>({x:()=>op(e)})},{kernelName:nP,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return dd(e,r).map(e=>()=>e)}},f4,f4,{kernelName:nU,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=oz(n.shape,r.shape);return{a:()=>{let t=on(r,"float32"),a=ol(e,ol(t,oR(n,oF(t,ox(1))))),i=oL(n.shape,s);return i.length>0&&(a=hb(a,i)),uI(a,n.shape)},b:()=>{let t=ol(e,ol(a,u9(h$(n,0),hz(n),op(n)))),i=oL(r.shape,s);return i.length>0&&(t=hb(t,i)),uI(t,r.shape)}}}},{kernelName:nV,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=h$(n,0);return{x:()=>u9(a,e,ol(e,r)),alpha:()=>{let t=u9(a,op(e),ol(e,n)),s=oL(r.shape,e.shape);return s.length>0&&(t=hb(t,s)),uI(t,r.shape)}}}},{kernelName:nG,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return s=null==a?r.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>(function(e,t,n){let r=e.shape.length,a=r-n.length,s=cB.getAxesPermutation(n,r),i=e;null!=s&&(i=lu(e,s));let o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce((e,t)=>e*t,1);o.push(l);let u=function(e,t,n){let r=e.shape.slice();r[n]=1;let a=uI(t,r),s=ol(u1(e,n,!0,!1),u1(e,n,!0,!0));return ol(a,s)}(i.reshape(o),t,a);return u=u.reshape(i.shape),null!=s&&(u=lu(u,cB.getUndoAxesPermutation(s))),u})(r,e,s)}}},{kernelName:nZ,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,lo(oh(n)))}}},{kernelName:n3,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=ol(h_(n,6),p7(n));return{x:()=>ol(e,on(r,"float32"))}}},{kernelName:nY,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,on(p7(n),"float32"))}}},{kernelName:nJ,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>uI(e,n.shape)}}},{kernelName:n1,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>sr.runKernel(n2,a,n)}}},{kernelName:nQ,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>sr.runKernel(n0,a,n)}}},{kernelName:n4,gradFunc:(e,t,n)=>{let{dims:r}=n,a=eh(r,e.shape);return{x:()=>pM(e,a)}}},{kernelName:n6,gradFunc:e=>({x:()=>op(e)})},{kernelName:n5,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>lo(oo(e,ol(oR(n,1.5),2)))}}},{kernelName:re,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>on(op(n),"float32"),t:()=>ol(e,on(n,e.dtype)),e:()=>ol(e,on(hH(n),e.dtype))}}},{kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=h$(n,ox(0)),r=ox(c8);return u9(t,ol(e,ox(c7)),ol(ol(e,r),hv(on(n,"float32"))))}}}},{kernelName:ri,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,ol(n,oF(ox(1),n)))}}},{kernelName:rs,gradFunc:e=>({x:()=>op(e)})},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(uQ(on(n,"float32")),e)}}},{kernelName:ra,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(u0(on(n,"float32")),e)}}},{kernelName:rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=lB(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>pr(e,u)}}},{kernelName:rd,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=ol(e,r);return{logits:()=>oF(s,ol(hb(s,[a],!0),r))}}},{kernelName:ro,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,uC(n))}}},f6,f6,f5,f5,{kernelName:rl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,ol(ou(on(n,"float32")),2))}}},{kernelName:rb,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=ox(2);return{a:()=>ol(e,ol(a,oF(n,r))),b:()=>ol(e,ol(a,oF(r,n)))}}},{kernelName:rx,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(e,ol(on(n,"float32"),2))}}},{kernelName:rL,gradFunc:e=>({x:()=>op(e)})},{kernelName:rN,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=oz(n.shape,r.shape);return{a:()=>{let t=e,r=oL(n.shape,a);return r.length>0&&(t=hb(t,r)),uI(t,n.shape)},b:()=>{let t=e,n=oL(r.shape,a);return n.length>0&&(t=hb(t,n)),uI(lo(t),r.shape)}}}},{kernelName:ru,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;eh(s,r.shape).forEach(e=>{a[e]=1});let i=ol(uI(e,a),h2(r.shape,"float32"));return{x:()=>i}}},{kernelName:rT,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oo(e,oh(uQ(n)))}}},{kernelName:rC,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ol(oF(ox(1),oh(n)),e)}}},{kernelName:r$,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=op(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=os(t,u$(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=os(t,u$(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=os(t,u$(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(4===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=os(t,u$(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return t}}}},{kernelName:rR,gradFunc:(e,t,n)=>{let{perm:r}=n,a=hf(r);return{x:()=>lu(e,a)}}},{kernelName:rD,gradFunc:(e,t,n)=>{let{axis:r}=n;return{value:()=>p8(e,r)}}},{kernelName:rO,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>(function(e,t){let n=hC(e,oP(t,op(t))),r=hE(t,ox(0,"int32")),a=n.rank-r.rank;for(let e=0;e<a;++e)r=hk(r,e+1);r=hG(r,h2(n.shape,"bool"));let s=op(n);return u9(r,n,s)})(e,n)}}},{kernelName:rM,gradFunc:e=>({x:()=>op(e)})}])rQ(e);aY().prototype.abs=function(){return this.throwIfDisposed(),oO(this)},aY().prototype.acos=function(){return this.throwIfDisposed(),l6(this)},aY().prototype.acosh=function(){return this.throwIfDisposed(),l5(this)},aY().prototype.add=function(e){return this.throwIfDisposed(),os(this,e)},aY().prototype.all=function(e,t){return this.throwIfDisposed(),l7(this,e,t)},aY().prototype.any=function(e,t){return this.throwIfDisposed(),l9(this,e,t)},aY().prototype.argMax=function(e){return this.throwIfDisposed(),ue(this,e)},aY().prototype.argMin=function(e){return this.throwIfDisposed(),ut(this,e)},aY().prototype.asScalar=function(){return this.throwIfDisposed(),Z(1===this.size,()=>"The array must have only 1 element."),uI(this,[])},aY().prototype.asType=function(e){return this.throwIfDisposed(),on(this,e)},aY().prototype.as1D=function(){return this.throwIfDisposed(),uI(this,[this.size])},aY().prototype.as2D=function(e,t){return this.throwIfDisposed(),uI(this,[e,t])},aY().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),uI(this,[e,t,n])},aY().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),uI(this,[e,t,n,r])},aY().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),uI(this,[e,t,n,r,a])},aY().prototype.asin=function(){return this.throwIfDisposed(),un(this)},aY().prototype.asinh=function(){return this.throwIfDisposed(),ur(this)},aY().prototype.atan=function(){return this.throwIfDisposed(),ua(this)},aY().prototype.atan2=function(e){return this.throwIfDisposed(),us(this,e)},aY().prototype.atanh=function(){return this.throwIfDisposed(),ui(this)},aY().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),uS(this,e,t,n,r)},aY().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),uR(this,e,t)},aY().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),uF(this,e,t,n,r,a)},aY().prototype.broadcastTo=function(e){return this.throwIfDisposed(),uP(this,e)},aY().prototype.cast=function(e){return this.throwIfDisposed(),on(this,e)},aY().prototype.ceil=function(){return this.throwIfDisposed(),uB(this)},aY().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),uW(this,e,t)},aY().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof aZ&&(e=[e]),uT([this,...e],t)},aY().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),uq(this,e,t,n,r,a,s)},aY().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),uX(this,e,t,n,r,a)},aY().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),uj(this,e,t,n,r,a,s)},aY().prototype.cos=function(){return this.throwIfDisposed(),uQ(this)},aY().prototype.cosh=function(){return this.throwIfDisposed(),u0(this)},aY().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),u1(this,e,t,n)},aY().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),u2(this,e,t,n)},aY().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),u4(this,e,t)},aY().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),u6(this,e,t,n,r,a,s)},aY().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),u8(this,e,t,n,r,a)},aY().prototype.divNoNan=function(e){return this.throwIfDisposed(),he(this,e)},aY().prototype.div=function(e){return this.throwIfDisposed(),oo(this,e)},aY().prototype.dot=function(e){return this.throwIfDisposed(),ht(this,e)},aY().prototype.elu=function(){return this.throwIfDisposed(),hr(this)},aY().prototype.equal=function(e){return this.throwIfDisposed(),u7(this,e)},aY().prototype.erf=function(){return this.throwIfDisposed(),hs(this)},aY().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),hw(this,e,t)},aY().prototype.exp=function(){return this.throwIfDisposed(),hv(this)},aY().prototype.expandDims=function(e){return this.throwIfDisposed(),hk(this,e)},aY().prototype.expm1=function(){return this.throwIfDisposed(),hI(this)},aY().prototype.fft=function(){return this.throwIfDisposed(),p0(this)},aY().prototype.flatten=function(){return this.throwIfDisposed(),uI(this,[this.size])},aY().prototype.floor=function(){return this.throwIfDisposed(),hT(this)},aY().prototype.floorDiv=function(e){return this.throwIfDisposed(),oi(this,e)},aY().prototype.gather=function(e,t,n){return this.throwIfDisposed(),hC(this,e,t,n)},aY().prototype.greaterEqual=function(e){return this.throwIfDisposed(),hE(this,e)},aY().prototype.greater=function(e){return this.throwIfDisposed(),h$(this,e)},aY().prototype.ifft=function(){return this.throwIfDisposed(),p1(this)},aY().prototype.irfft=function(){return this.throwIfDisposed(),p2(this)},aY().prototype.isFinite=function(){return this.throwIfDisposed(),hA(this)},aY().prototype.isInf=function(){return this.throwIfDisposed(),hR(this)},aY().prototype.isNaN=function(){return this.throwIfDisposed(),hF(this)},aY().prototype.leakyRelu=function(e){return this.throwIfDisposed(),hD(this,e)},aY().prototype.lessEqual=function(e){return this.throwIfDisposed(),h_(this,e)},aY().prototype.less=function(e){return this.throwIfDisposed(),hO(this,e)},aY().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),hL(this,e,t,n,r)},aY().prototype.logSigmoid=function(){return this.throwIfDisposed(),hW(this)},aY().prototype.logSoftmax=function(e){return this.throwIfDisposed(),hU(this,e)},aY().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),hV(this,e,t)},aY().prototype.log=function(){return this.throwIfDisposed(),hz(this)},aY().prototype.log1p=function(){return this.throwIfDisposed(),hP(this)},aY().prototype.logicalAnd=function(e){return this.throwIfDisposed(),hG(this,e)},aY().prototype.logicalNot=function(){return this.throwIfDisposed(),hH(this)},aY().prototype.logicalOr=function(e){return this.throwIfDisposed(),hj(this,e)},aY().prototype.logicalXor=function(e){return this.throwIfDisposed(),hq(this,e)},aY().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),lr(this,e,t,n)},aY().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),hY(this,e,t,n,r)},aY().prototype.max=function(e,t){return this.throwIfDisposed(),hg(this,e,t)},aY().prototype.maximum=function(e){return this.throwIfDisposed(),oP(this,e)},aY().prototype.mean=function(e,t){return this.throwIfDisposed(),h0(this,e,t)},aY().prototype.min=function(e,t){return this.throwIfDisposed(),hy(this,e,t)},aY().prototype.minimum=function(e){return this.throwIfDisposed(),h4(this,e)},aY().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),h6(this,e,t)},aY().prototype.mod=function(e){return this.throwIfDisposed(),h5(this,e)},aY().prototype.mul=function(e){return this.throwIfDisposed(),ol(this,e)},aY().prototype.neg=function(){return this.throwIfDisposed(),lo(this)},aY().prototype.norm=function(e,t,n){return this.throwIfDisposed(),hx(this,e,t,n)},aY().prototype.notEqual=function(e){return this.throwIfDisposed(),pe(this,e)},aY().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),la(this,e,t,n)},aY().prototype.onesLike=function(){return this.throwIfDisposed(),pt(this)},aY().prototype.pad=function(e,t){return this.throwIfDisposed(),pr(this,e,t)},aY().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),pu(this,e,t,n,r,a,s)},aY().prototype.pow=function(e){return this.throwIfDisposed(),oR(this,e)},aY().prototype.prelu=function(e){return this.throwIfDisposed(),ph(this,e)},aY().prototype.prod=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},aY().prototype.reciprocal=function(){return this.throwIfDisposed(),pD(this)},aY().prototype.relu=function(){return this.throwIfDisposed(),pO(this)},aY().prototype.relu6=function(){return this.throwIfDisposed(),p_(this)},aY().prototype.reshapeAs=function(e){return this.throwIfDisposed(),uI(this,e.shape)},aY().prototype.reshape=function(e){return this.throwIfDisposed(),uI(this,e)},aY().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),ca(this,e,t,n)},aY().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),cs(this,e,t,n)},aY().prototype.reverse=function(e){return this.throwIfDisposed(),pM(this,e)},aY().prototype.rfft=function(){return this.throwIfDisposed(),p4(this)},aY().prototype.round=function(){return this.throwIfDisposed(),pW(this)},aY().prototype.rsqrt=function(){return this.throwIfDisposed(),pU(this)},aY().prototype.selu=function(){return this.throwIfDisposed(),pV(this)},aY().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),pG(this,e,t,n,r,a,s)},aY().prototype.sigmoid=function(){return this.throwIfDisposed(),uC(this)},aY().prototype.sign=function(){return this.throwIfDisposed(),pj(this)},aY().prototype.sin=function(){return this.throwIfDisposed(),pq(this)},aY().prototype.sinh=function(){return this.throwIfDisposed(),pK(this)},aY().prototype.slice=function(e,t){return this.throwIfDisposed(),u$(this,e,t)},aY().prototype.softmax=function(e){return this.throwIfDisposed(),pQ(this,e)},aY().prototype.softplus=function(){return this.throwIfDisposed(),hB(this)},aY().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),pl(this,e,t)},aY().prototype.split=function(e,t){return this.throwIfDisposed(),p3(this,e,t)},aY().prototype.sqrt=function(){return this.throwIfDisposed(),ou(this)},aY().prototype.square=function(){return this.throwIfDisposed(),oh(this)},aY().prototype.squaredDifference=function(e){return this.throwIfDisposed(),p6(this,e)},aY().prototype.squeeze=function(e){return this.throwIfDisposed(),p5(this,e)},aY().prototype.stack=function(e,t){return this.throwIfDisposed(),p8(e instanceof aZ?[this,e]:[this,...e],t)},aY().prototype.step=function(e){return this.throwIfDisposed(),p7(this,e)},aY().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),p9(this,e,t,n,r,a,s,i,o)},aY().prototype.sub=function(e){return this.throwIfDisposed(),oF(this,e)},aY().prototype.sum=function(e,t){return this.throwIfDisposed(),hb(this,e,t)},aY().prototype.tan=function(){return this.throwIfDisposed(),de(this)},aY().prototype.tanh=function(){return this.throwIfDisposed(),uE(this)},aY().prototype.tile=function(e){return this.throwIfDisposed(),hS(this,e)},aY().prototype.toBool=function(){return this.throwIfDisposed(),on(this,"bool")},aY().prototype.toFloat=function(){return this.throwIfDisposed(),on(this,"float32")},aY().prototype.toInt=function(){return this.throwIfDisposed(),on(this,"int32")},aY().prototype.topk=function(e,t){return this.throwIfDisposed(),dl(this,e,t)},aY().prototype.transpose=function(e){return this.throwIfDisposed(),lu(this,e)},aY().prototype.unique=function(e){return this.throwIfDisposed(),dh(this,e)},aY().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),dp(this,e,t)},aY().prototype.unstack=function(e){return this.throwIfDisposed(),dd(this,e)},aY().prototype.where=function(e,t){return this.throwIfDisposed(),u9(e,this,t)},aY().prototype.zerosLike=function(){return this.throwIfDisposed(),op(this)};var f8={};u(f8,"CallbackList",()=>yi),u(f8,"CustomCallback",()=>yu),u(f8,"History",()=>yl),u(f8,"Callback",()=>vA),u(f8,"callbacks",()=>vO),u(f8,"EarlyStopping",()=>vD),u(f8,"InputSpec",()=>gI),u(f8,"SymbolicTensor",()=>gS),u(f8,"LayersModel",()=>y1),u(f8,"input",()=>y9),u(f8,"loadLayersModel",()=>y4),u(f8,"model",()=>y8),u(f8,"registerCallbackConstructor",()=>be),u(f8,"sequential",()=>y7),u(f8,"RNN",()=>bQ),u(f8,"Sequential",()=>y5),u(f8,"LayerVariable",()=>gw),u(f8,"version_layers",()=>yM),u(f8,"constraints",()=>gM),u(f8,"initializers",()=>gZ),u(f8,"layers",()=>yn),u(f8,"metrics",()=>vl),u(f8,"models",()=>vN),u(f8,"regularizers",()=>vT);class f7 extends Error{constructor(e){super(e),Object.setPrototypeOf(this,f7.prototype)}}class f9 extends Error{constructor(e){super(e),Object.setPrototypeOf(this,f9.prototype)}}class me extends Error{constructor(e){super(e),Object.setPrototypeOf(this,me.prototype)}}class mt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mt.prototype)}}class mn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mn.prototype)}}class mr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function ma(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=Array(t);return n.fill(e),n}}function ms(e,t){if(!e)throw new mn(t)}function mi(e,t){let n=0;for(let r of e)r===t&&n++;return n}function mo(e){return 1===e.length?e[0]:e}function ml(e){return Array.isArray(e)?e:[e]}function mu(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function mh(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let mp={};function md(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function mc(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a;if(e in n)a=n[e];else if(e in mp)a=mp[e];else if(null==(a=t[e]))throw new me(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s,i;if(null==e.className||null==e.config)throw new me(`${r}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let o=e.className;if(o in n?[s,i]=n[o]:o in mp?[s,i]=mp.className:o in t&&([s,i]=t[o]),null==s)throw new me(`Unknown ${r}: ${o}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=i){let t={};for(let e of Object.keys(mp))t[e]=mp[e];for(let e of Object.keys(n))t[e]=n[e];e.config.customObjects=t;let r=Object.assign({},mp);for(let e of Object.keys(n))mp[e]=n[e];!function e(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>e(t));else for(let n of Object.keys(t)){let r=t[n];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?e(r):t[n]=r.value)}}(e.config);let o=i(s,e.config,n,a);return mp=Object.assign({},r),o}{let t=Object.assign({},mp);for(let e of Object.keys(n))mp[e]=n[e];let r=new s(e.config);return mp=Object.assign({},t),r}}}function mf(e,t){return -1*(e<t?-1:+(e>t))}function mm(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function mg(e,t,n){if(null!=n&&0>e.indexOf(n))throw new me(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function my(e,t,n=0,r=1/0){return ms(n>=0),ms(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function mb(e,t){Array.isArray(e)?(r4.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>mb(e,`element ${n+1} of ${t}`))):r4.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(e)}.`)}function mx(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let mw=0,mv={};function mk(e=""){return e in mv||(mv[e]=0),mv[e]+=1,e+mv[e].toString()}let mI=["channelsFirst","channelsLast"],mS=["nearest","bilinear"],mN=["valid","same","causal"],mT=["max","avg"],mC=["sum","mul","concat","ave"],m$=new Map;function mE(e){mg(mI,"DataFormat",e)}function mA(e){mg(mN,"PaddingMode",e)}function mR(e){mg(mT,"PoolMode",e)}let mF=[];function mD(e,t){mF.push(e);try{let e=t();return mF.pop(),e}catch(e){throw mF.pop(),e}}function mO(e){if(!mL(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===mF.length?"":mF.join("/")+"/")+e}function m_(e){if(!mL(e))throw Error("Not a valid tensor name: '"+e+"'");m$.has(e)||m$.set(e,0);let t=m$.get(e);if(m$.set(e,m$.get(e)+1),!(t>0))return e;{let n=`${e}_${t}`;return m$.set(n,1),n}}let mM=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function mL(e){return!!e.match(mM)}function mz(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function mP(e){if(0===e.length)return NaN;let t=1/0;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function mB(e){if(0===e.length)return NaN;let t=-1/0;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function mW(e,t){if(t<e)throw new me(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function mU(){return null==a&&(a=sW().epsilon()),a}function mV(){return"channelsLast"}function mG(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),uI(e,n)}function mH(e,t,n){return sA(()=>{switch(e.rank){case 1:return pX(e,t,n);case 2:return pZ(e,[t,0],[n,e.shape[1]]);case 3:return pY(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return pJ(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return u$(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return u$(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new me(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mj(e,t,n){return sA(()=>{switch(e.rank){case 1:return pX(e,t,n);case 2:return pZ(e,[0,t],[e.shape[0],n]);case 3:return pY(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return pJ(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new me(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mq(e,t,n,r){return sA(()=>{switch(e.rank){case 1:return pX(e,t,n);case 2:switch(r){case 1:return mH(e,t,n);case 2:return mj(e,t,n);default:throw new me(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return mH(e,t,n);case 2:return pY(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return mj(e,t,n);default:throw new me(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return mH(e,t,n);case 2:return pJ(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return pJ(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return mj(e,t,n);default:throw new me(`The axis is not within the rank of the tensor ${r}`)}default:throw new me(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function mK(e,t=-1){let n;return t<0&&(t=0!==(n=e[0].rank)?n:0),t===e[0].rank&&(t=-1),uT(e,t)}function mX(e,t){switch(e.rank){case 1:return uU([e,t]);case 2:return uV([e,t],0);case 3:return uG([e,t],0);case 4:return uH([e,t],0);default:throw new me(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mZ(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new me(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return hS(e,t)}function mY(e,t=0,n=1,r,a){return p$(e,t,n,r,a)}function mJ(e,t,n,r){if(e.rank<2||t.rank<2)throw new mt(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new mt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return dO.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?m0(e.rank,r,mV()):null,activation:n});{let a=e.shape.slice();e=uI(e,[-1,a.pop()]);let s=t.shape.slice(),i=s.pop(),o=s.pop(),l=[...s,i],u=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=uI(lu(t,u),[o,-1]);let h=[...a,...l];return uI(dO.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?m0(e.rank,r,mV()):null,activation:n}),h)}}function mQ(e,t,n){return sA(()=>hC(e,t=Array.isArray(t)?dt(t,"int32"):on(t,"int32"),n))}function m0(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new me(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)if(1===r.length)return uI(t,[1,r[0],1,1,1]);else return uI(t,[1,r[3],r[0],r[1],r[2]]);else if("channelsLast"===n)if(1===r.length)return uI(t,[1,1,1,1,r[0]]);else return uI(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)if(1===r.length)return uI(t,[1,r[0],1,1]);else return uI(t,[1,r[2],r[0],r[1]]);else if("channelsLast"===n)if(1===r.length)return uI(t,[1,1,1,r[0]]);else return uI(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)if(1===r.length)return uI(t,[1,r[0],1]);else return uI(t,[1,r[1],r[0]]);else if("channelsLast"===n)if(1===r.length)return uI(t,[1,1,r[0]]);else return uI(t,[1].concat(r))}else if(e<3)return t;throw new me(`Unsupported input rank by biasAdd: ${t.rank}`)}function m1(e,t,n){return sA(()=>(null==n&&(n=mV()),mE(n),os(e,m0(e.rank,t,n))))}function m2(e,t,n=!1){return n?e():t()}let m3=["fanIn","fanOut","fanAvg"],m4=["normal","uniform","truncatedNormal"];class m6 extends ow.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class m5 extends m6{apply(e,t){return h1(e,t)}}m5.className="Zeros",ow.registerClass(m5);class m8 extends m6{apply(e,t){return h2(e,t)}}m8.className="Ones",ow.registerClass(m8);class m7 extends m6{constructor(e){if(super(),"object"!=typeof e)throw new me(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new me(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return sA(()=>ol(ox(this.value),h2(e,t)))}getConfig(){return{value:this.value}}}m7.className="Constant",ow.registerClass(m7);class m9 extends m6{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return pA(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m9.className="RandomUniform",ow.registerClass(m9);class ge extends m6{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mt(`randomNormal does not support dType ${t}.`);return mY(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ge.className="RandomNormal",ow.registerClass(ge);class gt extends m6{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mt(`truncatedNormal does not support dType ${t}.`);return du(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gt.className="TruncatedNormal",ow.registerClass(gt);class gn extends m6{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return sA(()=>{if(2===e.length&&e[0]===e[1])return ol(this.gain,hN(e[0]));throw new me("Identity matrix initializer can only be used for 2D square matrices.")})}getConfig(){return{gain:this.gain}}}gn.className="Identity",ow.registerClass(gn);class gr extends m6{constructor(e){if(super(),e.scale<0)throw new me(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,mg(m3,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,mg(m4,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(mE(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=mz(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=mz(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=mz(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mt(`${this.getClassName()} does not support dType ${t}.`);return du(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return pA(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gr.className="VarianceScaling",ow.registerClass(gr);class ga extends gr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gr.className}}ga.className="GlorotUniform",ow.registerClass(ga);class gs extends gr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gr.className}}gs.className="GlorotNormal",ow.registerClass(gs);class gi extends gr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gr.className}}gi.className="HeNormal",ow.registerClass(gi);class go extends gr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gr.className}}go.className="HeUniform",ow.registerClass(go);class gl extends gr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gr.className}}gl.className="LeCunNormal",ow.registerClass(gl);class gu extends gr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gr.className}}gu.className="LeCunUniform",ow.registerClass(gu);class gh extends m6{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return sA(()=>{if(e.length<2)throw new mt("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);let n=r4.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=mY([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=cF.qr(s,!1),o=i[0];return o=ol(o,i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]).sign()),n<r&&(o=o.transpose()),ol(ox(this.gain),o.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}gh.className="Orthogonal",ow.registerClass(gh);let gp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gd(e,t={}){return mc(e,ow.SerializationMap.getMap().classNameMap,t,"initializer")}function gc(e){if("string"==typeof e){let t=e in gp?gp[e]:e;if("GlorotNormal"===t)return new gs;{if("GlorotUniform"===t)return new ga;if("HeNormal"===t)return new gi;if("HeUniform"===t)return new go;if("LeCunNormal"===t)return new gl;if("LeCunUniform"===t)return new gu;let e={};return e.className=t,e.config={},gd(e)}}return e instanceof m6?e:gd(e)}function gf(e){return Array.isArray(e)&&Array.isArray(e[0])}function gm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function gg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new me(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function gy(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new me(`Expected exactly 1 Shape; got ${e.length}`)}function gb(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}let gx="Variable";class gw{constructor(e,t="float32",n=gx,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=mw++,n=null==n?gx:n,this.originalName=mO(n),this.name=m_(this.originalName),this.trainable_=r,this.constraint=a,this.val=df(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function gv(e){return e.map(e=>e.read())}function gk(e){e.forEach(e=>{e[0].write(e[1])})}class gI{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gS{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=mw++,null!=s&&(this.originalName=mO(s),this.name=m_(this.originalName)),this.rank=t.length}}let gN=0;class gT{constructor(e,t){for(let n of(this.callArgs=t,this.id=gN++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes,e.inboundLayers))null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let gC=0;class g$ extends ow.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=gC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=mu(e)+"_"+mk(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new f9(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new me(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return mo(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return mo(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new f7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new f7(`Layer ${this.name} is not connected, no input to return.`);return mo(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new f7(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new f7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return mo(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){let t=ml(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let n=ml(this.inputSpec);if(t.length!==n.length)throw new me(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let r=t[e],a=n[e];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new me(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new me(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new me(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new me(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let t=r.shape;for(let n in a.axes){let r=Number(n),s=a.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new me(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let n=a.shape[t],s=r.shape[t];if(null!=n&&null!=s&&n!==s)throw new me(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=ml(e),r=function(e){let t=!0;for(let n of ml(e))if(!(n instanceof gS)){t=!1;break}return t}(e),a=function(e){let t=!0;for(let n of ml(e))if(n instanceof gS){t=!1;break}return t}(e);if(r===a)throw new me("Arguments to apply() must be all SymbolicTensors or all Tensors");return mD(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of ml(e))t.push(n.shape);this.build(mo(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);let a=ml(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=mo(s),null!=this.activityRegularizer)throw new mt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=ml(e);let t=[];for(let n of e)t.push(n.shape);return mo(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((n,r)=>new gS(s,n,this,ml(e),t,this.name,r)):new gS(s,a,this,ml(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new mt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new f7(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new f7(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new f9(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return gb(this.weights)}build(e){this.built=!0}getWeights(e=!1){return gv(e?this.trainableWeights:this.weights)}setWeights(e){sA(()=>{let t=this.weights;if(t.length!==e.length)throw new me(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=gv(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!r4.arraysEqual(s.shape,o.shape))throw new me(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}gk(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new me(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():gc("zeros"));let l=r.apply(t,n),u=new gw(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ml(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t)if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;let r=this.computeMask(e,n),a=ml(t),s=ml(r);if(a.length!==s.length)throw Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=s[e]}addInboundNode(e,t,n,r,a,s,i=null){let o=ml(e);t=ml(t),n=ml(n),r=ml(r),a=gm(a),s=gm(s);let l=[],u=[],h=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),h.push(e.tensorIndex);new gT({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class gE extends g${constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:mk("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new me("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t)if(null==e.inputShape)throw new me("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");else t=[e.batchSize].concat(e.inputShape);else if(null!=e.batchSize)throw new me("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new gS(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new gT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new me(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function gA(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new me("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new gE({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}gE.className="InputLayer",ow.registerClass(gE);class gR{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof gR)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null==this.id2Value[e.id])this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return on(t,e.dtype)}catch(n){throw new me(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n);else throw new me(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gS)if(null!=this.id2Value[e.id])return this.id2Value[e.id];else throw new me(`Nonexistent key: ${e.name}`);{let t=this.name2Id[e];if(null==t)throw new me(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof gS)if(null!=this.id2Value[e.id])return this.id2Mask[e.id];else throw new me(`Nonexistent key: ${e.name}`);{let t=this.name2Id[e];if(null==t)throw new me(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&sR(this.id2Mask)}}let gF=new mr,gD=new mr;function gO(e,t,n,r){let a,s=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map(e=>e.name),u=[],h=t.names();for(let e of l)-1!==h.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let p=l.join(",")+"|"+t.names().sort().join(","),d=gF.get(p);if(null==d){let e=function(e,t){r4.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){let a=g_(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=g_(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:function(e){let t={};for(let n in e)t[n]=e[n].size;return t}(r)}}(o,t);d=e.sorted,a=e.recipientCounts,gF.put(p,d),gD.put(p,a)}a={},s||Object.assign(a,gD.get(p));let c=new gR(t);for(let e=0;e<d.length;++e){if(null!=r){let e=s$().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let i=d[e],o=i.sourceLayer;if(o instanceof gE)continue;let h=[],p=[],f=[],m=!1;for(let e of i.inputs){let n=c.getValue(e),r=c.getMask(e);h.push(n),p.push(r),null!=r&&(m=!0),!s&&(a[e.name]--,0!==a[e.name]||t.hasKey(e)||-1!==l.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=p[0]);let g=ml(o.apply(h,n)),y=null;o.supportsMasking&&(y=o.computeMask(h,p));let b=function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}(i),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=l.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||sR(f)}return c.disposeMasks(),i?u:u[0]}function g_(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else for(let t of(i.push(s.length-1),e.inputs))null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}return{sorted:r,recipientMap:a}}eP.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=gF&&gF.setMaxEntries(e),null!=gD&&gD.setMaxEntries(e)});var gM={};function gL(e,t){return sA(()=>ou(hb(ol(e,e),t,!0)))}u(gM,"maxNorm",()=>gj),u(gM,"unitNorm",()=>gq),u(gM,"nonNeg",()=>gK),u(gM,"minMaxNorm",()=>gX);class gz extends ow.Serializable{getConfig(){return{}}}class gP extends gz{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sA(()=>{let t=gL(e,this.axis);return ol(e,oo(uW(t,0,this.maxValue),os(mU(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}gP.className="MaxNorm",ow.registerClass(gP);class gB extends gz{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sA(()=>oo(e,os(mU(),gL(e,this.axis))))}getConfig(){return{axis:this.axis}}}gB.className="UnitNorm",ow.registerClass(gB);class gW extends gz{apply(e){return pO(e)}}gW.className="NonNeg",ow.registerClass(gW);class gU extends gz{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return sA(()=>{let t=gL(e,this.axis),n=os(ol(this.rate,uW(t,this.minValue,this.maxValue)),ol(1-this.rate,t));return ol(e,oo(n,os(mU(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}gU.className="MinMaxNorm",ow.registerClass(gU);let gV={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function gG(e,t={}){return mc(e,ow.SerializationMap.getMap().classNameMap,t,"constraint")}function gH(e){return null==e?null:"string"==typeof e?gG({className:e in gV?gV[e]:e,config:{}}):e instanceof gz?e:gG(e)}function gj(e){return new gP(e)}function gq(e){return new gB(e)}function gK(){return new gW}function gX(e){return new gU(e)}var gZ={};function gY(){return new m5}function gJ(){return new m8}function gQ(e){return new m7(e)}function g0(e){return new m9(e)}function g1(e){return new ge(e)}function g2(e){return new gt(e)}function g3(e){return new gn(e)}function g4(e){return new gr(e)}function g6(e){return new ga(e)}function g5(e){return new gs(e)}function g8(e){return new gi(e)}function g7(e){return new go(e)}function g9(e){return new gl(e)}function ye(e){return new gu(e)}function yt(e){return new gh(e)}u(gZ,"zeros",()=>gY),u(gZ,"ones",()=>gJ),u(gZ,"constant",()=>gQ),u(gZ,"randomUniform",()=>g0),u(gZ,"randomNormal",()=>g1),u(gZ,"truncatedNormal",()=>g2),u(gZ,"identity",()=>g3),u(gZ,"varianceScaling",()=>g4),u(gZ,"glorotUniform",()=>g6),u(gZ,"glorotNormal",()=>g5),u(gZ,"heNormal",()=>g8),u(gZ,"heUniform",()=>g7),u(gZ,"leCunNormal",()=>g9),u(gZ,"leCunUniform",()=>ye),u(gZ,"orthogonal",()=>yt);var yn={};async function yr(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];"number"!=typeof s&&(t.push(s.data()),n.push(a),r.push(s))}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];sR(r)}}function ya(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}u(yn,"inputLayer",()=>x5),u(yn,"elu",()=>x8),u(yn,"reLU",()=>x7),u(yn,"leakyReLU",()=>x9),u(yn,"prelu",()=>we),u(yn,"softmax",()=>wt),u(yn,"thresholdedReLU",()=>wn),u(yn,"conv1d",()=>wr),u(yn,"conv2d",()=>wa),u(yn,"conv2dTranspose",()=>ws),u(yn,"conv3d",()=>wi),u(yn,"conv3dTranspose",()=>wo),u(yn,"separableConv2d",()=>wl),u(yn,"cropping2D",()=>wu),u(yn,"upSampling2d",()=>wh),u(yn,"depthwiseConv2d",()=>wp),u(yn,"activation",()=>wd),u(yn,"dense",()=>wc),u(yn,"dropout",()=>wf),u(yn,"spatialDropout1d",()=>wm),u(yn,"flatten",()=>wg),u(yn,"repeatVector",()=>wy),u(yn,"reshape",()=>wb),u(yn,"permute",()=>wx),u(yn,"embedding",()=>ww),u(yn,"add",()=>wv),u(yn,"average",()=>wk),u(yn,"concatenate",()=>wI),u(yn,"maximum",()=>wS),u(yn,"minimum",()=>wN),u(yn,"multiply",()=>wT),u(yn,"dot",()=>wC),u(yn,"batchNormalization",()=>w$),u(yn,"layerNormalization",()=>wE),u(yn,"zeroPadding2d",()=>wA),u(yn,"averagePooling1d",()=>wR),u(yn,"avgPool1d",()=>wF),u(yn,"avgPooling1d",()=>wD),u(yn,"averagePooling2d",()=>wO),u(yn,"avgPool2d",()=>w_),u(yn,"avgPooling2d",()=>wM),u(yn,"averagePooling3d",()=>wL),u(yn,"avgPool3d",()=>wz),u(yn,"avgPooling3d",()=>wP),u(yn,"globalAveragePooling1d",()=>wB),u(yn,"globalAveragePooling2d",()=>wW),u(yn,"globalMaxPooling1d",()=>wU),u(yn,"globalMaxPooling2d",()=>wV),u(yn,"maxPooling1d",()=>wG),u(yn,"maxPooling2d",()=>wH),u(yn,"maxPooling3d",()=>wj),u(yn,"gru",()=>wq),u(yn,"gruCell",()=>wK),u(yn,"lstm",()=>wX),u(yn,"lstmCell",()=>wZ),u(yn,"simpleRNN",()=>wY),u(yn,"simpleRNNCell",()=>wJ),u(yn,"convLstm2d",()=>wQ),u(yn,"convLstm2dCell",()=>w0),u(yn,"rnn",()=>w1),u(yn,"stackedRNNCells",()=>w2),u(yn,"bidirectional",()=>w3),u(yn,"timeDistributed",()=>w4),u(yn,"globalMaxPool1d",()=>w6),u(yn,"globalMaxPool2d",()=>w5),u(yn,"maxPool1d",()=>w8),u(yn,"maxPool2d",()=>w7),u(yn,"gaussianNoise",()=>w9),u(yn,"gaussianDropout",()=>ve),u(yn,"alphaDropout",()=>vt),u(yn,"masking",()=>vn),u(yn,"rescaling",()=>vr),u(yn,"centerCrop",()=>va),u(yn,"resizing",()=>vs),u(yn,"categoryEncoding",()=>vi),u(yn,"randomWidth",()=>vo),u(yn,"Layer",()=>g$),u(yn,"RNN",()=>bQ),u(yn,"RNNCell",()=>b0),u(yn,"input",()=>y9),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(I||(I={}));class ys{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class yi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochBegin(e,t)}async onEpochEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onEpochEnd(e,t)}async onBatchBegin(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchBegin(e,t)}async onBatchEnd(e,t){for(let n of(null==t&&(t={}),this.callbacks))await n.onBatchEnd(e,t)}async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}}class yo extends ys{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;for(let e in this.seen+=n,t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=sA(()=>os(this.totals[e],ol(r,n)));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:sA(()=>{let n=ol(oo(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),sF(t[e])}))}}class yl extends ys{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let n in null==t&&(t={}),this.epoch.push(e),t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class yu extends ys{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||cP,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r4.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():r4.now();return(...s)=>{let i=null!=n?n():r4.now();return i-a<t?r:(a=i,r=e(...s))}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await yr(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await yr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await yr(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await yr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await yr(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):r4.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await yr(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await yr(e),await this.trainEnd(e))}}function yh(e,t){return(null==e&&(e={}),e instanceof ys)?[e]:Array.isArray(e)&&e[0]instanceof ys?e:ml(e).map(e=>new yu(e,t))}class yp{constructor(){}static registerCallbackConstructor(e,t){r4.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),yp.checkForDuplicate(t),null==yp.constructors[e]&&(yp.constructors[e]=[]),yp.constructors[e].push(t)}static checkForDuplicate(e){for(let t in yp.constructors)yp.constructors[+t].forEach(t=>{if(t===e)throw new me("Duplicate callback constructor.")})}static clear(){yp.constructors={}}static createCallbacks(e){let t=[];for(let n in yp.constructors){let r=+n;e>=r&&t.push(...yp.constructors[r])}return t.map(e=>new e)}}function yd(e,t,n,r,a,s,i,o,l){let u=new yl,h=[new yo,...yp.createCallbacks(t)];null!=e&&h.push(...e),h.push(u);let p=new yi(h);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:p,history:u}}function yc(e,t={},n=!1){return mc(e,ow.SerializationMap.getMap().classNameMap,t,"layer",n)}function yf(e,t){return sA(()=>{var n;"float32"!==e.dtype&&(e=on(e,"float32"));let r=hb(ol(n=e,n),t,!0),a=oE(r.shape,mU()),s=ou(oP(r,a));return oo(e,s)})}function ym(e,t){return sA(()=>{var n;return h0(ol(n=oF(t,e),n),-1)})}function yg(e,t){return sA(()=>h0(oO(oF(t,e)),-1))}function yy(e,t){return sA(()=>{let n=oF(e,t),r=uW(oO(e),mU(),Number.MAX_VALUE);return ol(100,h0(oO(oo(n,r)),-1))})}function yb(e,t,n=!1){return sA(()=>{if(n)t=pQ(t);else{let e=hb(t,t.shape.length-1,!0);t=oo(t,e)}return t=uW(t,mU(),1-mU()),lo(hb(ol(on(e,"float32"),hz(t)),t.shape.length-1))})}function yx(e,t,n=!1){return sA(()=>{let r=on(hT(function(e){let t=[mz(e.shape)];return uI(e,t)}(e)),"int32"),a=(t=uW(t,mU(),1-mU())).shape;return yb(uI(la(r,a[a.length-1]),a),t,n)})}function yw(e,t){return sA(()=>{let n;return h0(function(e,t){if(!r4.arraysEqual(e.shape,t.shape))throw new me(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return sA(()=>{let n=pO(t),r=lo(oO(t));return os(oF(n,ol(t,e)),hP(hv(r)))})}(e,n=hz(oo(n=uW(t,mU(),1-mU()),oF(1,n)))),-1)})}function yv(e,t){return sA(()=>lo(hb(ol(yf(e,-1),yf(t,-1)),-1)))}yp.constructors={};let yk={meanSquaredError:ym,meanAbsoluteError:yg,meanAbsolutePercentageError:yy,meanSquaredLogarithmicError:function(e,t){return sA(()=>{var n;return h0(ol(n=oF(hz(os(1,uW(t,mU(),Number.MAX_VALUE))),hz(os(1,uW(e,mU(),Number.MAX_VALUE)))),n),-1)})},squaredHinge:function(e,t){return sA(()=>{let n=oP(0,oF(1,ol(e,t)));return h0(ol(n,n),-1)})},hinge:function(e,t){return sA(()=>h0(oP(0,oF(1,ol(e,t))),-1))},categoricalHinge:function(e,t){return sA(()=>{let n=hb(ol(e,t),-1),r=hg(ol(oF(1,e),t),-1);return oP(0,os(1,oF(r,n)))})},logcosh:function(e,t){return sA(()=>{let n=Math.log(2),r=oF(t,e);return h0(oF(os(r,hB(ol(-2,r))),n),-1)})},categoricalCrossentropy:yb,sparseCategoricalCrossentropy:yx,binaryCrossentropy:yw,kullbackLeiblerDivergence:function(e,t){return sA(()=>{let n=uW(e,mU(),1);return hb(ol(e,hz(oo(n,uW(t,mU(),1)))),-1)})},poisson:function(e,t){return sA(()=>{let n=hz(os(mU(),t));return h0(oF(t,ol(e,n)),-1)})},cosineProximity:yv};function yI(e){if("string"!=typeof e)return e;{if(e in yk)return yk[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new me(t)}}function yS(e,t){return sA(()=>{let n=ol(.5,pt(t)),r=on(h$(t,n),e.dtype);return h0(u7(e,r),-1)})}function yN(e,t){return sA(()=>on(u7(ue(e,-1),ue(t,-1)),"float32"))}function yT(e,t){return sA(()=>on(hb(hG(u7(e,1),u7(t,1))),"float32"))}function yC(e,t){return sA(()=>{let n=yT(e,t),r=os(n,sA(()=>on(hb(hG(u7(e,0),u7(t,1))),"float32")));return on(u9(h$(r,0),oo(n,r),0),"float32")})}function y$(e,t){return yw(e,t)}function yE(e,t){return e.rank===t.rank&&(e=p5(e,[e.rank-1])),(t=ue(t,-1)).dtype!==e.dtype&&(t=on(t,e.dtype)),on(u7(e,t),"float32")}let yA={binaryAccuracy:yS,categoricalAccuracy:yN,precision:yC,categoricalCrossentropy:yb,sparseCategoricalCrossentropy:yx,mse:ym,MSE:ym,mae:yg,MAE:yg,mape:yy,MAPE:yy,cosine:yv};function yR(e){if(ms(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(yk))if(yk[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(yA))if(yA[n]===e){t=n;break}return void 0!==t?t:e.name}}function yF(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t)if(Object.getPrototypeOf(t)===Object.prototype){for(let n of Object.keys(t))if("string"!=typeof n||!e(t[n]))return!1;return!0}else{if(!Array.isArray(t))return!1;for(let n of t)if(!e(n))return!1;return!0}{let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function yD(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function yO(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function y_(e,t){if(null===e)return null;if("string"==typeof e)return mh(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];yO(t,a,r)?n.push(r):n.push(y_(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=mh(n);t[e]=y_(r,e)}}return t}}let yM="4.22.0";class yL extends g${constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=mk(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],mm(this.inputs).length!==this.inputs.length)throw new me(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);for(let e of(mm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[],this.outputs)){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ms(0===n,"input layer has >1 nodes"),ms(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof gE))throw TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new f9(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(yL.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let h=u.inboundLayers.length;for(let e=0;e<h;e++){let r=u.inputTensors[e],a=u.inboundLayers[e];o(r,t,n,a,u.nodeIndices[e],u.tensorIndices[e])}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);for(let e of i.slice().reverse()){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];s=Math.max(s,null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id]),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let h={};for(let e in t){let r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}let p={};for(let e in r){let t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map(e=>parseInt(e,10)).sort(mf);for(let e of(this.layers=[],d)){let t=p[e];for(let e of(t.sort((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:+(n>r)}),t))e instanceof yL&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map(e=>parseInt(e,10)).sort(mf);let c=this.inputs.slice(),f=[];for(let e of d)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===c.indexOf(n))throw new f9(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${f}`);for(let e of t.outputTensors)c.push(e);f.push(e.name)}}this.nodesByDepth=h;let m=this.layers.map(e=>e.name);for(let e of m){let t=m.filter(t=>t===e).length;if(1!==t)throw new f9(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new gT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new me("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0,a=(e=>{let t=Object.keys(e);if(0===t.length)return!1;let n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);for(let t of(a&&this.parseWeights(e),this.layers))for(let[e,s]of t.weights.entries()){let t=a?`${s.name.split("/").slice(0,-1).join("/")+"/"}${e}`:s.originalName;if(null!=n[t])throw new me(`Duplicate weight name: ${t}`);n[t]=s,r++}let s=[];for(let r in e){let a=r;if(null==n[r]){let e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new me(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new me(`${e.length} of ${r} weights are not set: ${e}`)}gk(s)}parseWeights(e){for(let t in Object.keys(e)){let n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!r.includes(e)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yM}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=function e(t,n){if(null==t)return null;if("string"==typeof t)return mu(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let r=[],a=t.length;for(let s=0;s<a;++s){let a=t[s];yO(n,s,a)?r.push(a):r.push(e(a,n))}return r}{let n={};for(let r of Object.keys(t)){let a=t[r],s=mu(r);("name"===r||"className"===r)&&"string"==typeof a?n[s]=a:n[s]=e(a,r)}return n}}(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return sA(()=>{e=ml(e);let n=new gR;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return gO(this.outputs,n,t)})}computeMask(e,t){return sA(()=>{let n;return e=ml(e),n=null==t?ma(null,e.length):ml(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=gm(e);if(t.length!==this.inputLayers.length)throw new me(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(mf);if(r.length>1)for(let e of r)for(let t of this.nodesByDepth[e]){let e=t.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(e.id))continue;let r=[];for(let e=0;e<t.inboundLayers.length;e++){let a=t.inboundLayers[e],s=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=gm(e.computeOutputShape(mo(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++)n[`${e.name}_${s}_${t}`]=a[t]}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];ms(t in n),a.push(n[t])}return mo(a)}runInternalGraph(e,t){null==t&&(t=ma(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}for(let e of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(mf))for(let t of this.nodesByDepth[e]){let e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=[];for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){let[t,n]=s[0];null==u.mask&&(u.mask=n),o=ml(e.call(t,u)),l=ml(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==u.mask&&(u.mask=i),o=ml(e.call(r,u)),l=ml(e.computeMask(r,i));if(e.activityRegularizer)throw new mt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}let r=[],a=[],s=[];for(let e of this.outputs){ms(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,i]=n[e.id];s.push(t.shape),r.push(t),a.push(i)}return[r,a,s]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=+(e instanceof yL);for(let r=0;r<e.inboundNodes.length;r++){let a=yL.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new me("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new me(`No such layer: ${e}`)}findLayer(e){if(!(this.layers.length<=e))return this.layers[e];throw new me(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`)}calculateLosses(){return sA(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=yL.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=yL.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[yL.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=yL.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=yL.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}let o=t.name,l=t.layers;for(let e of l){let n=e.name,s=yc(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new me(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)})}for(;!function(e){if(null==e)throw new me(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}(s);)for(let e of l){let t=a[e.name];if(t.name in s){let e=s[t.name];for(let n of(delete s[t.name],e))!function(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let h=a[o];if(h.inboundNodes.length<=l)return void i(e,t);let p=h.inboundNodes[l];r.push(p.outputTensors[u])}r.length>0&&e.apply(mo(r),n)}(t,n)}}let u=[],h=[];for(let e of t.inputLayers){let t=e[0],n=e[1],r=e[2];ms(t in a);let s=a[t].inboundNodes[n].outputTensors;u.push(s[r])}for(let e of t.outputLayers){let t=e[0],n=e[1],r=e[2];ms(t in a);let s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:u,outputs:h,name:o})}get stateful(){if(this._stateful)throw new me("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){sA(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function yz(e,t){var n="classWeight";let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)if(Array.isArray(e)&&1===e.length)return e;else if("object"==typeof e&&t[0]in e)return[e[t[0]]];else return[e];if(Array.isArray(e)){if(e.length!==r)throw Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}async function yP(e,t,n,r){if(null!=t||null!=r)throw Error("Support sampleWeight is not implemented yet");if(null==n)return null;{let t=sA(()=>{if(1===e.shape.length)return or(e);if(2===e.shape.length)if(e.shape[1]>1)return ue(e,1);else if(1===e.shape[1])return uI(e,[e.shape[0]]);else throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`);throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());sR(t);let a=[];return r.forEach(e=>{if(null==n[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),dt(a,"float32")}}function yB(e,t){let n,r;n=t.xs,r=t.ys,r4.assert(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=yW("input",e.inputNames,n),s=yW("output",e.outputNames,r),i=a[0].shape[0];r4.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),r4.assert(s.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<a.length;t++)r4.assert(a[t].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let t=0;t<s.length;t++)r4.assert(s[t].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:s}}function yW(e,t,n){if(n instanceof aZ)return[n];if(Array.isArray(n))return r4.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(null==n[a])throw new me(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function yU(e,t,n){let r=null!=n.batchesPerEpoch;if(r4.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),r4.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),r4.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),r4.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),r4.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{var a,s;let i,o,l,u,h=null!=n.validationData;if(h)if(yV(n.validationData))r4.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let e=function(e){if(3===e.length)throw new mt("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}let p=e.makeTrainFunction(),d=e.getDedupedMetricsNames();l=h?d.slice().concat(d.map(e=>"val_"+e)):d.slice();let c=yh(n.callbacks,n.yieldEvery),f=null==n.verbose?1:n.verbose,{callbackList:m,history:g}=yd(c,f,n.epochs,null,null,(a=t,s=n,u=null,null!=s.batchesPerEpoch?u=s.batchesPerEpoch:Number.isFinite(a.size)&&(u=a.size),u),null,h,l);m.setModel(e),e.history=g,await m.onTrainBegin(),e.stopTraining_=!1;let y=null==n.initialEpoch?0:n.initialEpoch,b=await t.iterator();for(;y<n.epochs;){let a={};await m.onEpochBegin(y);let s=0,l=0;for(r||(b=await t.iterator());!r||s<n.batchesPerEpoch;){let t=await b.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${s} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=yB(e,t.value),i={};i.batch=l,i.size=r[0].shape[0],await m.onBatchBegin(l,i);let o=[];if(null!=n.classWeight){let t=yz(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await yP(a[e],null,t[e]))}let u=r.concat(a).concat(o),h=p(u);sR(u);for(let e=0;e<d.length;++e){let t=d[e],n=h[e];i[t]=n,sF(n)}await m.onBatchEnd(l,i),ya(i),l++,s++}if(r?s>=n.batchesPerEpoch:t.done){if(h){let t;t=yV(n.validationData)?ml(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ml(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)a[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await m.onEpochEnd(y,a),y++,e.stopTraining_)break}return await m.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function yV(e){return"function"==typeof e.iterator}async function yG(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new mt("Verbose mode is not implemented yet.");r4.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i="function"==typeof t.next?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=sA(()=>{if(t.value){let{xs:n,ys:r}=yB(e,t.value),i=n.concat(r),u=sA(()=>a(i));if(sR(i),0===l)for(let e=0;e<u.length;++e)s.push(ox(0));let h=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=sA(()=>os(s[e],ol(h,t))),l>0&&sR(n)}sR(u),o+=h,++l}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=oo(s[e],o),sR(t)}return mo(s)}function yH(e){r4.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function yj(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>mH(e,t,n-t)):mH(e,t,n-t)}function yq(e,t){return sA(()=>null==e?null:Array.isArray(e)?e.map(e=>yq(e,t)):mQ(e,"int32"===t.dtype?t:on(t,"int32")))}function yK(e,t){let n=[],r=0,a=null;for(;r<e;)(a=r+t)>=e&&(a=e),n.push([r,a]),r=a;return n}function yX(e){let t=[];e instanceof aZ&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(mG(r,1));else if(0===r.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");else t.push(r)}return t}function yZ(e,t){if(null==e)return;let n=[];if(t instanceof aZ)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof aZ)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach(e=>{e.isDisposed||e.dispose()})}function yY(e){return Array.isArray(e)}function yJ(e){return!(e instanceof aZ)&&!yY(e)}function yQ(e,t,n,r=!0,a=""){let s;if(null==t||0===t.length){if(null!=e){let t=!1;if(yY(e)&&e.length>0)t=!0;else if(yJ(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new me(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);if(yJ(e))for(let n of(s=[],t)){if(null==e[n])throw new me(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}else if(yY(e)){if(e.length!==t.length)throw new me(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new me(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=yX(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new me(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new me(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function y0(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new me(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new me(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new me(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new me(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class y1 extends yL{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new me("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){var a;let s,i=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a))if(e){t=!1;break}else e=!0;if(!t)break}return t}(e),o=["Layer (type)","Input Shape","Output shape","Param #"];if(i?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!i)for(let t in o.push("Receives inputs"),s=[],e.nodesByDepth)s.push(...e.nodesByDepth[t]);r("_".repeat(t)),yD(o,n,r),r("=".repeat(t));let l=e.layers;for(let e=0;e<l.length;++e)i?function(e,t,n){let r,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}let s=e.name,i=e.getClassName();yD([`${s} (${i})`,a,r,e.countParams().toString()],t,n)}(l[e],n,r):function(e,t,n,r){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(null==n||!(n.length>0)||-1!==n.indexOf(t))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];yD([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)yD(["","","","",i[e]],t,r)}(l[e],n,s,r),r((e===l.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=null!=(a=e).collectedTrainableWeights?gb(a.collectedTrainableWeights):gb(a.trainableWeights),h=gb(e.nonTrainableWeights);r(`Total params: ${u+h}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${h}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>cL.adagrad(.01),Adadelta:()=>cL.adadelta(1,.95,mU()),Adam:()=>cL.adam(.001,.9,.999,mU()),Adamax:()=>cL.adamax(.002,.9,.999,mU(),0),RMSProp:()=>cL.rmsprop(.001,.9,0,mU()),SGD:()=>cL.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new me(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof oC))throw new me("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new me(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(e=>yI(e))}else{let n=yI(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{for(let t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new me(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(yI(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],mD("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});let r=function(e,t){let n;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);if("string"==typeof e||"function"==typeof e)n=[e];else if(Array.isArray(e)||"object"==typeof e)n=e;else throw TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(e=>n);{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};mD("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1===n.indexOf(e))(t=>{let n,r,s;for(let i of t){let t;if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===yw?-1!==["accuracy","acc"].indexOf(i)?r=yS:-1!==["crossentropy","ce"].indexOf(i)&&(r=y$):this.lossFunctions[e]===yx?-1!==["accuracy","acc"].indexOf(i)?r=yE:-1!==["crossentropy","ce"].indexOf(i)&&(r=yx):-1!==["accuracy","acc"].indexOf(i)?r=yN:-1!==["crossentropy","ce"].indexOf(i)&&(r=yb),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=function(e){if("string"==typeof e&&e in yA)return yA[e];if("string"!=typeof e&&null!=e)return e;throw new me(`Unknown metric ${e}`)}(i),n=""+yR(i);mD(n,()=>{t=s}),a(e,n,t)}})(r[e])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;yH(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction,s=this.testLoop(t,e,r,n.verbose,n.steps);return mo(s)}finally{yZ(a[0],e),yZ(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),yG(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new me(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(null!=e)a=Array.isArray(e)?e[0].shape[0]:e.shape[0];else throw new me(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new me("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new gR;if(e instanceof aZ&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new me(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new me(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=gO(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ma(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new me(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return sA(()=>{let r=this.checkNumSamples(e);if(n)throw new mt("Verbose predictLoop() is not implemented yet.");let a=yK(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)sA(()=>{let n=yj(e,a[t][0],a[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});let s=new gR(r);return gO(this.outputs,s)}).forEach((e,t)=>s[t].push(e));return mo(s.map(e=>uT(e,0)))})}predict(e,t={}){let n=yX(e);y0(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return yH(e),this.predictLoop(n,e)}finally{yZ(n,e)}}predictOnBatch(e){y0(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new f9("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===yx?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}e=yQ(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yQ(t,this.feedOutputNames,a,!1,"target");var s=e,i=t;let o=mm(s.map(e=>e.shape[0]));o.sort();let l=mm(i.map(e=>e.shape[0]));if(l.sort(),o.length>1)throw new me(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(e=>e.shape))}`);if(l.length>1)throw new me(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(e=>e.shape))}`);if(o.length>0&&l.length>0&&!r4.arraysEqual(o,l))throw new me(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${l[0]} target sample(s).`);if(!function(e,t,n){let r=[ym,yw,yb];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===yb&&1===s.shape[s.shape.length-1])throw new me(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new me(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new me(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=yz(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await yP(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return sA(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new mt("Verbose mode is not implemented yet.");if(null!=a)throw new mt("steps mode in testLoop() is not implemented yet");{let r=yK(s,n),a=dt(mW(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=e(yq(t,mH(a,s,o-s)));if(0===n)for(let e=0;e<l.length;++e)i.push(ox(0));for(let e=0;e<l.length;++e){let t=l[e];i[e]=os(i[e],ol(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=oo(i[e],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(mi(e,r)>1){let t=mi(e.slice(0,n),r);a+=`_${t}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=()=>{let e,i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:n[e]});let o=new gR(i),l=gO(this.outputs,o,{training:!0});for(let n=0;n<this.lossFunctions.length;++n){let s=(0,this.lossFunctions[n])(r[n],l[n]);null!=a[n]&&(s=ol(s,a[n]));let i=h0(s);t.push(i),e=0===n?s:os(e,s)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=h0(t(r[a],l[a]))}sF(n),s.push(n)}return e=h0(e),this.calculateLosses().forEach(t=>{e=os(e,t)}),e},o=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(i,!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>sA(()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new gR(s),o=gO(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=h0((0,this.lossFunctions[e])(a[e],o[e]));t=0===e?r:os(t,r),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=h0(t(a[r],o[r]));n.push(s)}return n})}async fit(e,t,n={}){let r,a,s,i,o,l,u,h,p;if(this.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let d,c,f,m=null==n.batchSize?32:n.batchSize;yH(m);let g=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,m);r=g[0],a=g[1],p=g[2];let y=!1;if(null!=n.validationData&&n.validationData.length>0){if(y=!0,2===n.validationData.length)o=n.validationData[0],l=n.validationData[1];else if(3===n.validationData.length)throw new mt("validationData including sample weights is not supported yet.");else throw new me(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let e=await this.standardizeUserData(o,l,null,null,!0,m);u=e[0],h=e[1],d=u.concat(h)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){y=!0;let e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=yj(r,e,t),s=r,r=yj(r,0,e),h=yj(a,e,t),i=a,a=yj(a,0,e),d=u.concat(h)}else null!=n.validationSteps&&(y=!0);let b=r.concat(a).concat(p);this.checkTrainableWeightsConsistency();let x=this.makeTrainFunction(),w=this.getDedupedMetricsNames();y?(this.makeTestFunction(),c=this.testFunction,f=w.slice().concat(w.map(e=>"val_"+e))):(c=null,d=[],f=w.slice());let v=yh(n.callbacks,n.yieldEvery);return await this.fitLoop(x,b,w,m,n.epochs,n.verbose,v,c,d,n.shuffle,f,n.initialEpoch,null,null)}finally{this.isTraining=!1,yZ(r,e),yZ(a,t),yZ(s,e),yZ(i,t),yZ(u,o),yZ(h,l),null!=p&&sR(p)}}async fitLoop(e,t,n,r,a,s,i,o,l,u,h,p,d,c){let f;null==r&&(r=32),null==a&&(a=1),null==u&&(u=!0),null==p&&(p=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=c&&(m=!0,null==d))throw new me("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(t,r,d,"steps_per_epoch");null!=g&&(f=mW(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=yd(i,s,a,p,g,d,r,m,h);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let s=p;s<a;++s){await y.onEpochBegin(s);let a={};if(null!=d)throw new mt("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new mt("batch shuffling is not implemneted yet");u&&r4.shuffle(f);let s=dt(f),i=yK(g,r);for(let u=0;u<i.length;++u){let h={};if(await y.onBatchBegin(u,h),sA(()=>{let p=i[u][0],d=i[u][1],c=mH(s,p,d-p);h.batch=u,h.size=d-p;let f=e(yq(t,c));for(let e=0;e<n.length;++e){let t=n[e],r=f[e];h[t]=r,sF(r)}if(u===i.length-1&&m){let e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){let r=n[t],s=e[t];sF(s),a["val_"+r]=s}}}),await y.onBatchEnd(u,h),ya(h),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(s,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return yU(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return sR(s),yZ(n[0],e),yZ(n[1],t),mo(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)(!n||r[e].trainable)&&t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=s$().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-s$().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=mu(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>mu(e))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if("string"==typeof n[r])e[r]=mu(n[r]);else throw Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[mu(yR(this.metrics))];{if(Array.isArray(this.metrics))return this.metrics.map(e=>mu(yR(e)));let e={};for(let t in this.metrics)e[t]=mu(yR(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){let t,n;if(null!=e.weighted_metrics)throw Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw Error("Loading sample_weight_mode is not supported yet.");let r=yc(y_(e.optimizer_config));if("string"==typeof e.loss)t=mh(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>mh(e));else if(null!=e.loss)for(let n in t={},e.loss)t[n]=mh(e.loss[n]);if(Array.isArray(e.metrics))n=e.metrics.map(e=>mh(e));else if(null!=e.metrics)for(let t in n={},e.metrics)n[t]=mh(e.metrics[t]);this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=oH.getSaveHandlers(e);if(0===t.length)throw new me(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new me(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new me("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await oH.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${yM}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let{data:e,specs:t}=await oH.encodeWeights(await this.optimizer.getWeights(),"optimizer");n.specs.push(...t),n.data=oH.concatenateArrayBuffers([n.data,e])}return null!=this.userDefinedMetadata&&(yF(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){yF(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}y1.className="Model",ow.registerClass(y1);class y2 extends y1{}async function y3(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=yc(y_(n),t);if(null!=e.weightsManifest){let t=await oH.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),sR(t)}return r}async function y4(e,t){if(null==t&&(t={}),"string"==typeof e){let n=oH.getLoadHandlers(e,t);if(0===n.length)n.push(oH.browserHTTPRequest(e,t));else if(n.length>1)throw new me(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return y6(e,void 0,t)}async function y6(e,t,n){if(null==n&&(n={}),null==e.load)throw new me("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=yc(y_(a),t,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new me("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=oH.decodeWeights(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),sR(e),sR(t.map(e=>e.tensor))}return o}y2.className="Functional",ow.registerClass(y2);class y5 extends y1{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:mk("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new me(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof y5||e instanceof y1;if(n){if(1!==(t=e).outputs.length)throw new me("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new me("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new me("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=gA({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new me(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new me("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,n,r){if((null==n||null!=r&&r>0)&&(n=t.sourceLayer,r=t.nodeIndex),0===n.inboundNodes.length)return[t];{let t=n.inboundNodes[r];if(0===t.inboundLayers.length)return t.inputTensors;{let n=[];for(let r=0;r<t.inboundLayers.length;r++){let a=t.inputTensors[r];for(let s of e(a,t.inboundLayers[r],t.nodeIndices[r]))-1===n.indexOf(s)&&n.push(s)}return n}}}(this.outputs[0])}this.inboundNodes=[],new gT({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ma(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(gy(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new y1({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new f9("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new f9("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new f9("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new f9("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new me("Legacy serialization format not supported yet.");a=t}else r4.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof y5))throw new mt(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=yc(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new me("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new me("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function y8(e){return new y1(e)}function y7(e){return new y5(e)}function y9(e){return gA(e)}function be(e,t){yp.registerCallbackConstructor(e,t)}y5.className="Sequential",ow.registerClass(y5);class bt extends ow.Serializable{getConfig(){return{}}}class bn extends bt{apply(e,t=1){return function(e,t=1){if(1!==t)throw new mt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return hr(e)}(e,t)}}bn.className="elu",ow.registerClass(bn);class br extends bt{apply(e){return pV(e)}}br.className="selu",ow.registerClass(br);class ba extends bt{apply(e){return pO(e)}}ba.className="relu",ow.registerClass(ba);class bs extends bt{apply(e){return sA(()=>h4(6,pO(e)))}}bs.className="relu6",ow.registerClass(bs);class bi extends bt{apply(e){return e}}bi.className="linear",ow.registerClass(bi);class bo extends bt{apply(e){return uC(e)}}bo.className="sigmoid",ow.registerClass(bo);class bl extends bt{apply(e){return sA(()=>uW(os(.5,ol(.2,e)),0,1))}}bl.className="hardSigmoid",ow.registerClass(bl);class bu extends bt{apply(e){return hB(e)}}bu.className="softplus",ow.registerClass(bu);class bh extends bt{apply(e){return sA(()=>oo(e,os(oO(e),1)))}}bh.className="softsign",ow.registerClass(bh);class bp extends bt{apply(e){return uE(e)}}bp.className="tanh",ow.registerClass(bp);class bd extends bt{apply(e,t=-1){return pQ(e,t)}}bd.className="softmax",ow.registerClass(bd);class bc extends bt{apply(e,t=-1){return hU(e,t)}}bc.className="logSoftmax",ow.registerClass(bc);class bf extends bt{apply(e){return sA(()=>sA(()=>{let t=ol(.5,os(1,hs(oo(e,Math.sqrt(2)))));return ol(e,t)}))}}bf.className="gelu",ow.registerClass(bf);class bm extends bt{apply(e){return sA(()=>ol(.5,ol(e,os(1,uE(ol(ou(oo(2,Math.PI)),os(e,ol(.044715,oR(e,3)))))))))}}bm.className="gelu_new",ow.registerClass(bm);class bg extends bt{apply(e){return sA(()=>ol(e,uE(hB(e))))}}bg.className="mish",ow.registerClass(bg);class by extends bt{apply(e,t=1){return sA(()=>ol(uC(ol(e,t)),e))}}function bb(e){return e.getClassName()}function bx(e,t={}){return mc(e,ow.SerializationMap.getMap().classNameMap,t,"activation")}function bw(e){if(null==e){let e={};return e.className="linear",e.config={},bx(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},bx(t)}return e instanceof bt?e:bx(e)}function bv(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}by.className="swish",ow.registerClass(by);class bk extends ow.Serializable{}class bI extends bk{constructor(e){super(),bv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return sA(()=>{let t=h1([1]);return this.hasL1&&(t=os(t,hb(ol(this.l1,oO(e))))),this.hasL2&&(t=os(t,hb(ol(this.l2,ol(e,e))))),uI(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}bI.className="L1L2",ow.registerClass(bI);let bS={l1l2:"L1L2"};function bN(e,t={}){return mc(e,ow.SerializationMap.getMap().classNameMap,t,"regularizer")}function bT(e){return null==e?null:"string"==typeof e?bN({className:e in bS?bS[e]:e,config:{}}):e instanceof bk?e:bN(e)}class bC extends g${constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){let n=pO(e=gg(e));return null!=this.maxValue&&(n=uW(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue};return Object.assign(e,super.getConfig()),e}}bC.className="ReLU",ow.registerClass(bC);class b$ extends g${constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return hD(gg(e),this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}b$.className="LeakyReLU",ow.registerClass(b$);class bE extends g${constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gc(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=bT(e.alphaRegularizer),this.alphaConstraint=gH(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new me(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){let t=(e=gy(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new gI({ndim:e.length,axes:n})],this.built=!0}call(e,t){return ph(e=gg(e),this.alpha.read())}getConfig(){let e={alphaInitializer:md(this.alphaInitializer),alphaRegularizer:md(this.alphaRegularizer),alphaConstraint:md(this.alphaConstraint),sharedAxes:this.sharedAxes};return Object.assign(e,super.getConfig()),e}}bE.className="PReLU",ow.registerClass(bE);class bA extends g${constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new mt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){return hr(gg(e))}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha};return Object.assign(e,super.getConfig()),e}}bA.className="ELU",ow.registerClass(bA);class bR extends g${constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=gg(e);return ol(n,on(h$(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta};return Object.assign(e,super.getConfig()),e}}bR.className="ThresholdedReLU",ow.registerClass(bR);class bF extends g${constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new bd().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return sA(()=>{let n=gg(e),r=t.mask;if(null!=r){let e=ol(oF(h2(n.shape),on(r,n.dtype)),ox(-1e9));n=os(n,e)}if(this.axis instanceof Array)if(this.axis.length>1)return hv(oF(n,hV(n,this.axis,!0)));else return this.softmax(n,this.axis[0]);return this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function bD(e,t,n){if("number"==typeof e)return ma(e,t);if(e.length!==t)throw new me(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(a!==parseInt(a.toString(),10))throw new me(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function bO(e,t,n,r,a=1){return null==e?e:Math.floor((("same"===n?e:e-(t+(t-1)*(a-1))+1)+r-1)/r)}function b_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+mB([n-t,0]);else if("same"===r)e*=t;else throw new me(`Unsupport padding mode: ${r}.`);return e}function bM(e,t){return sA(()=>(mE(t),"channelsFirst"===t)?lu(e,[0,2,3,1]):e)}function bL(e,t){return sA(()=>(mE(t),"channelsFirst"===t)?lu(e,[0,2,3,4,1]):e)}function bz(e,t,n,r=[1,1],a="valid",s,i,o=null){return sA(()=>{if(null==s&&(s=mV()),mE(s),3!==e.rank&&4!==e.rank)throw new me(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new me(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=bM(e,s);if("causal"===a)throw new mt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=dO.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=lu(l,[0,3,1,2])),l})}bF.className="Softmax",ow.registerClass(bF);class bP extends g${constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",bP.verifyArgs(t),this.rank=e,mb(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new mt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=bD(t.kernelSize,e,"kernelSize"),this.strides=bD(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mA(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,mE(this.dataFormat),this.activation=bw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=gc(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gH(t.biasConstraint),this.biasRegularizer=bT(t.biasRegularizer),this.activityRegularizer=bT(t.activityRegularizer),this.dilationRate=bD(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new me(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new me(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new me(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(ms("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!my(e.kernelSize,"number",1,3))throw new me(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:bb(this.activation),useBias:this.useBias,biasInitializer:md(this.biasInitializer),biasRegularizer:md(this.biasRegularizer),activityRegularizer:md(this.activityRegularizer),biasConstraint:md(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}class bB extends bP{constructor(e,t){super(e,t),this.kernel=null,bB.verifyArgs(t),this.filters=t.filters,mb(this.filters,"filters"),this.kernelInitializer=gc(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gH(t.kernelConstraint),this.kernelRegularizer=bT(t.kernelRegularizer)}build(e){e=gy(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return sA(()=>{let t;e=gg(e);let n=null==this.bias?null:this.bias.read(),r=mx(this.activation.getClassName());if(null!=r&&2===this.rank)t=bz(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return sA(()=>{if(null==s&&(s=mV()),mE(s),3!==e.shape.length)throw new me(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new me(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new me(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===s&&(e=lu(e,[0,2,1])),"causal"===a)throw new mt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=uq(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=m1(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=bz(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(3===this.rank)t=function(e,t,n,r=[1,1,1],a="valid",s,i){return sA(()=>{if(null==s&&(s=mV()),mE(s),4!==e.rank&&5!==e.rank)throw new me(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new me(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=bL(e,s);if("causal"===a)throw new mt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=uZ(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=m1(o,n)),"channelsFirst"===s&&(o=lu(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new mt("convolutions greater than 3D are not implemented yet.");null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=gy(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=bO(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t)).push(this.filters):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:md(this.kernelInitializer),kernelRegularizer:md(this.kernelRegularizer),kernelConstraint:md(this.kernelConstraint)};return Object.assign(e,super.getConfig()),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new me(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class bW extends bB{constructor(e){super(2,e),bW.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!my(e.kernelSize,"number",1,2))throw new me(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}bW.className="Conv2D",ow.registerClass(bW);class bU extends bB{constructor(e){super(3,e),bU.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!(Array.isArray(e.kernelSize)&&(1===e.kernelSize.length||3===e.kernelSize.length)))throw new me(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}bU.className="Conv3D",ow.registerClass(bU);class bV extends bW{constructor(e){if(super(e),this.inputSpec=[new gI({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new me(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=gy(e)).length)throw new me("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gI({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return sA(()=>{let t,n,r=gg(e);if(4!==r.shape.length)throw new me(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);let a=r.shape,s=a[0];"channelsFirst"===this.dataFormat?(t=2,n=3):(t=1,n=2);let i=a[t],o=a[n],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,b_(i,h,l,this.padding),b_(o,p,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=lu(r,[0,2,3,1]));let c=uX(r,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=lu(c,[0,3,1,2])),null!=this.bias&&(c=m1(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c})}computeOutputShape(e){let t,n,r,a=(e=gy(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=b_(a[n],o,s,this.padding),a[r]=b_(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}bV.className="Conv2DTranspose",ow.registerClass(bV);class bG extends bU{constructor(e){if(super(e),this.inputSpec=[new gI({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new me(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=gy(e)).length)throw new me("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gI({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return sA(()=>{let t,n,r,a=gg(e);if(5!==a.shape.length)throw new me(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let s=a.shape,i=s[0];"channelsFirst"===this.dataFormat?(r=2,t=3,n=4):(r=1,t=2,n=3);let o=s[r],l=s[t],u=s[n],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=b_(o,c,h,this.padding),y=[i,g,b_(l,f,p,this.padding),b_(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(a=lu(a,[0,2,3,4,1]));let b=uJ(a,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=lu(b,[0,4,1,2,3])),null!==this.bias&&(b=m1(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b})}computeOutputShape(e){let t,n,r,a,s=(e=gy(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],p=this.strides[2];return s[t]=this.filters,s[n]=b_(s[n],u,i,this.padding),s[r]=b_(s[r],h,o,this.padding),s[a]=b_(s[a],p,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}bG.className="Conv3DTranspose",ow.registerClass(bG);class bH extends bB{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new me("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new me("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new me(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=gc(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=bT(t.depthwiseRegularizer),this.depthwiseConstraint=gH(t.depthwiseConstraint),this.pointwiseInitializer=gc(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=bT(t.pointwiseRegularizer),this.pointwiseConstraint=gH(t.pointwiseConstraint)}build(e){if((e=gy(e)).length<this.rank+2)throw new me(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new me(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new gI({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return sA(()=>{let t;if(e=gg(e),1===this.rank)throw new mt("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=lu(e,[0,2,3,1])),t=pG(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=m1(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=lu(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=md(this.depthwiseInitializer),e.pointwiseInitializer=md(this.pointwiseInitializer),e.depthwiseRegularizer=md(this.depthwiseRegularizer),e.pointwiseRegularizer=md(this.pointwiseRegularizer),e.depthwiseConstraint=md(this.depthwiseConstraint),e.pointwiseConstraint=md(this.pointwiseConstraint),e}}bH.className="SeparableConv";class bj extends bH{constructor(e){super(2,e)}}bj.className="SeparableConv2D",ow.registerClass(bj);class bq extends bB{constructor(e){super(1,e),bq.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!my(e.kernelSize,"number",1,1))throw new me(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}bq.className="Conv1D",ow.registerClass(bq);class bK extends g${constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return sA(()=>{if(e=gg(e),"channelsLast"===this.dataFormat){let t=mq(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return mq(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=mq(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return mq(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}bK.className="Cropping2D",ow.registerClass(bK);class bX extends g${constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,mE(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,mg(mS,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return sA(()=>{let t=gg(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=lu(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3];return lu("nearest"===this.interpolation?cR.resizeNearestNeighbor(t,[e,r]):cR.resizeBilinear(t,[e,r]),[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?cR.resizeNearestNeighbor(t,[e,r]):cR.resizeBilinear(t,[e,r])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}}bX.className="UpSampling2D",ow.registerClass(bX);class bZ extends bP{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=gc(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gH(e.depthwiseConstraint),this.depthwiseRegularizer=bT(e.depthwiseRegularizer)}build(e){if((e=gy(e)).length<4)throw new me(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new me(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sA(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return sA(()=>{null==a&&(a=mV()),mE(a);let s=bM(e,a);if(4!==e.rank)throw new me(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new me(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=u6(s,t,n,"same"===r?"same":"valid","NHWC",null),"channelsFirst"===a&&(s=lu(s,[0,3,1,2])),s})}(e=gg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=m1(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=gy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=bO(t,this.kernelSize[0],this.padding,this.strides[0]),s=bO(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=md(this.depthwiseInitializer),e.depthwiseRegularizer=md(this.depthwiseRegularizer),e.depthwiseConstraint=md(this.depthwiseRegularizer),e}}function bY(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new me("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function bJ(e,t,n,r=!1,a,s,i=!1,o=!1){return sA(()=>{let l,u,h,p=t.shape.length;if(p<3)throw new me(`Input should be at least 3D, but is ${p}D.`);let d=[1,0].concat(mW(2,p));if(t=lu(t,d),null!=s)throw new mt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=on(on(a,"bool"),"float32")).rank===p-1&&(a=hk(a,-1)),a=lu(a,d)),r&&(t=pM(t,0),null!=a&&(a=pM(a,0)));let c=[],f=n,m=t.shape[0],g=dd(t);null!=a&&(u=dd(a));for(let t=0;t<m;++t){let n=g[t],r=sA(()=>e(n,f));if(null==a)l=r[0],f=r[1];else{let e=sA(()=>{let e=u[t],n=oF(pt(e),e);return{output:os(ol(r[0],e),ol(f[0],n)),newStates:f.map((t,a)=>os(ol(r[1][a],e),ol(t,n)))}});l=e.output,f=e.newStates}o&&c.push(l)}return o&&(h=p8(c,1)),[l,h,f]})}bZ.className="DepthwiseConv2D",ow.registerClass(bZ);class bQ extends g${constructor(e){let t;if(super(e),null==e.cell)throw new me("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new b8({cells:e.cell}):e.cell).stateSize)throw new me("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new gI({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?mW(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){let t;gf(e)&&(e=e[0]);let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let r=n[0];if(t=this.returnSequences?[e[0],e[1],r]:[e[0],r],!this.returnState)return t;{let r=[];for(let t of n)r.push([e[0],t]);return[t].concat(r)}}computeMask(e,t){return sA(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;return this.returnState?[e].concat(this.states.map(e=>null)):e})}get states(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}}set states(e){this.states_=e}build(e){let t;if(null!=this.numConstants)throw new mt("Constants support is not implemented in RNN yet.");gf(e)&&(e=e[0]);let n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new gI({shape:[n,null,...r]});let a=[e[0]].concat(e.slice(2));if(this.cell.build(a),t=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r4.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),t))throw new me(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=t.map(e=>new gI({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){sA(()=>{if(!this.stateful)throw new f7("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new me("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>h1([n,e])):this.states_=[h1([n,this.cell.stateSize])];else if(null==e)sR(this.states_),null!=this.keptStates&&(sR(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>h1([n,e])):this.states_[0]=h1([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new me(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):sR(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=[n,Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize];if(!r4.arraysEqual(r.shape,a))throw new me(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>sF(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=bY(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){for(let e of(t.initialState=n,s=s.concat(n),this.stateSpec=[],n))this.stateSpec.push(new gI({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),!(s[0]instanceof gS))return super.apply(e,t);{let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}}call(e,t){return sA(()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=gg(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new me(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=bJ((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);let p=this.returnSequences?u:l;return this.returnState?[p].concat(h):p})}getInitialState(e){return sA(()=>{let t=h1(e.shape);return(t=mG(t=hb(t,[1,2])),Array.isArray(this.cell.stateSize))?this.cell.stateSize.map(e=>e>1?mZ(t,[1,e]):t):this.cell.stateSize>1?[mZ(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===bQ.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=yc(t.cell,n);return new e(Object.assign(t,{cell:r}))}}bQ.className="RNN",ow.registerClass(bQ);class b0 extends g${}class b1 extends b0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mb(this.units,"units"),this.activation=bw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gc(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gc(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gc(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bT(e.kernelRegularizer),this.recurrentRegularizer=bT(e.recurrentRegularizer),this.biasRegularizer=bT(e.biasRegularizer),this.kernelConstraint=gH(e.kernelConstraint),this.recurrentConstraint=gH(e.recurrentConstraint),this.biasConstraint=gH(e.biasConstraint),this.dropout=mP([1,mB([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mP([1,mB([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=gy(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sA(()=>{let n;if(2!==e.length)throw new me(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];let a=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=b7({ones:()=>pt(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=b7({ones:()=>pt(r),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask;n=null!=s?mJ(ol(e,s),this.kernel.read()):mJ(e,this.kernel.read()),null!=this.bias&&(n=m1(n,this.bias.read())),null!=i&&(r=ol(r,i));let o=os(n,mJ(r,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:bb(this.activation),useBias:this.useBias,kernelInitializer:md(this.kernelInitializer),recurrentInitializer:md(this.recurrentInitializer),biasInitializer:md(this.biasInitializer),kernelRegularizer:md(this.kernelRegularizer),recurrentRegularizer:md(this.recurrentRegularizer),biasRegularizer:md(this.biasRegularizer),activityRegularizer:md(this.activityRegularizer),kernelConstraint:md(this.kernelConstraint),recurrentConstraint:md(this.recurrentConstraint),biasConstraint:md(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}b1.className="SimpleRNNCell",ow.registerClass(b1);class b2 extends bQ{constructor(e){e.cell=new b1(e),super(e)}call(e,t){return sA(()=>{null!=this.cell.dropoutMask&&(sR(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sR(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}}b2.className="SimpleRNN",ow.registerClass(b2);class b3 extends b0{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new me("GRUCell does not support reset_after parameter set to true.");this.units=e.units,mb(this.units,"units"),this.activation=bw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=bw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gc(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gc(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gc(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bT(e.kernelRegularizer),this.recurrentRegularizer=bT(e.recurrentRegularizer),this.biasRegularizer=bT(e.biasRegularizer),this.kernelConstraint=gH(e.kernelConstraint),this.recurrentConstraint=gH(e.recurrentConstraint),this.biasConstraint=gH(e.biasConstraint),this.dropout=mP([1,mB([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mP([1,mB([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=gy(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return sA(()=>{let n,r;if(2!==e.length)throw new me(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let a=null!=t.training&&t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=b7({ones:()=>pt(e),rate:this.dropout,training:a,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=b7({ones:()=>pt(s),rate:this.recurrentDropout,training:a,count:3,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=ol(e,i[0]));let l=mJ(e,this.kernel.read());this.useBias&&(l=m1(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ol(s,o[0]));let u=this.recurrentKernel.read(),[h,p]=p3(u,[2*this.units,this.units],u.rank-1),d=mJ(s,h),[c,f,m]=p3(l,3,l.rank-1),[g,y]=p3(d,2,d.rank-1);n=this.recurrentActivation.apply(os(c,g));let b=mJ(ol(this.recurrentActivation.apply(os(f,y)),s),p);r=this.activation.apply(os(m,b));let x=os(ol(n,s),ol(os(1,lo(n)),r));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:bb(this.activation),recurrentActivation:bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:md(this.kernelInitializer),recurrentInitializer:md(this.recurrentInitializer),biasInitializer:md(this.biasInitializer),kernelRegularizer:md(this.kernelRegularizer),recurrentRegularizer:md(this.recurrentRegularizer),biasRegularizer:md(this.biasRegularizer),activityRegularizer:md(this.activityRegularizer),kernelConstraint:md(this.kernelConstraint),recurrentConstraint:md(this.recurrentConstraint),biasConstraint:md(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}b3.className="GRUCell",ow.registerClass(b3);class b4 extends bQ{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new b3(e),super(e)}call(e,t){return sA(()=>{null!=this.cell.dropoutMask&&(sR(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sR(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}b4.className="GRU",ow.registerClass(b4);class b6 extends b0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mb(this.units,"units"),this.activation=bw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=bw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gc(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gc(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gc(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=bT(e.kernelRegularizer),this.recurrentRegularizer=bT(e.recurrentRegularizer),this.biasRegularizer=bT(e.biasRegularizer),this.kernelConstraint=gH(e.kernelConstraint),this.recurrentConstraint=gH(e.recurrentConstraint),this.biasConstraint=gH(e.biasConstraint),this.dropout=mP([1,mB([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=mP([1,mB([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=gy(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends m6{apply(t,n){let a=e.apply([r]),s=new m8().apply([r]),i=e.apply([2*r]);return mX(mX(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return sA(()=>{let n,r,a=null!=t.training&&t.training;if(3!==e.length)throw new me(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=b7({ones:()=>pt(e),rate:this.dropout,training:a,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=b7({ones:()=>pt(s),rate:this.recurrentDropout,training:a,count:4,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=ol(e,o[0]));let u=mJ(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ol(s,l[0])),u=os(u,mJ(s,this.recurrentKernel.read())),this.useBias&&(u=m1(u,this.bias.read()));let[h,p,d,c]=p3(u,4,u.rank-1);n=this.recurrentActivation.apply(h),r=os(ol(this.recurrentActivation.apply(p),i),ol(n,this.activation.apply(d)));let f=ol(this.recurrentActivation.apply(c),this.activation.apply(r));return[f,f,r]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:bb(this.activation),recurrentActivation:bb(this.recurrentActivation),useBias:this.useBias,kernelInitializer:md(this.kernelInitializer),recurrentInitializer:md(this.recurrentInitializer),biasInitializer:md(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:md(this.kernelRegularizer),recurrentRegularizer:md(this.recurrentRegularizer),biasRegularizer:md(this.biasRegularizer),activityRegularizer:md(this.activityRegularizer),kernelConstraint:md(this.kernelConstraint),recurrentConstraint:md(this.recurrentConstraint),biasConstraint:md(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}b6.className="LSTMCell",ow.registerClass(b6);class b5 extends bQ{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new b6(e),super(e)}call(e,t){return sA(()=>{null!=this.cell.dropoutMask&&(sR(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sR(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}b5.className="LSTM",ow.registerClass(b5);class b8 extends b0{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return sA(()=>{let n,r=e.slice(1),a=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(r.splice(0,e.stateSize.length)):a.push(r.splice(0,1));a.reverse();let s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];r=a[i],n=0===i?[e[0]].concat(r):[n[0]].concat(r),n=o.call(n,t),s.push(n.slice(1))}for(let e of(r=[],s.slice().reverse()))r.push(...e);return[n[0]].concat(r)})}build(e){let t;gf(e)&&(e=e[0]),this.cells.forEach((n,r)=>{mD(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign(Object.assign({},e),{cells:t})}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(yc(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return gv(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}gk(t)}}function b7(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>{var e;return null!=s?s(t(),n):(e=t(),sA(()=>d$(e,n,void 0,void 0)))},o=()=>m2(i,t,r);return!a||a<=1?sF(o().clone()):Array(a).fill(void 0).map(o).map(e=>sF(e.clone()))}b8.className="StackedRNNCells",ow.registerClass(b8);var b9=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&0>t.indexOf(r)&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)0>t.indexOf(r[a])&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n};class xe extends bQ{constructor(e){if(e.unroll)throw new mt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new mt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new gI({ndim:5})]}call(e,t){return sA(()=>{if(null!=this.cell.dropoutMask&&(sR(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(sR(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new me("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return sA(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=h1([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){sA(()=>{if(!this.stateful)throw new f7("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new me("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>h1(a)):this.states_=[h1(a)];else if(null==e)sR(this.states_),null!=this.keptStates&&(sR(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>h1(a)):this.states_[0]=h1(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new me(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):sR(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t];if(!r4.arraysEqual(n.shape,a))throw new me(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>sF(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],h=bO(l,r[0],a,s[0],i[0]),p=bO(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,h,p]:[h,p,n]]}}xe.className="ConvRNN2D";class xt extends b6{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,mb(this.filters,"filters"),this.kernelSize=bD(n,2,"kernelSize"),this.kernelSize.forEach(e=>mb(e,"kernelSize")),this.strides=bD(r||1,2,"strides"),this.strides.forEach(e=>mb(e,"strides")),this.padding=a||"valid",mA(this.padding),this.dataFormat=s||"channelsLast",mE(this.dataFormat),this.dilationRate=bD(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>mb(e,"dilationRate"))}build(e){var t;e=gy(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new me(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends m6{apply(e,t){let a=n.apply([r]);return mK([a,h2([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return sA(()=>{if(3!==e.length)throw new me(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=b7({ones:()=>pt(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ol(t[n],e):e,l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=b7({ones:()=>pt(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3),[y,b,x,w]=p3(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?p3(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),h=this.inputConv(h,x,I,this.padding),p=this.inputConv(p,w,S,this.padding);let[N,T,C,$]=p3(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);let E=this.recurrentActivation.apply(os(l,c)),A=this.recurrentActivation.apply(os(u,f)),R=os(ol(A,s),ol(E,this.activation.apply(os(h,m)))),F=ol(this.recurrentActivation.apply(os(p,g)),this.activation.apply(R));return[F,F,R]})}getConfig(){let e=super.getConfig(),{units:t}=e,n=b9(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){let a=uj(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?m1(a,n,this.dataFormat):a}recurrentConv(e,t){return uj(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}xt.className="ConvLSTM2DCell",ow.registerClass(xt);class xn extends xe{constructor(e){super(Object.assign(Object.assign({},e),{cell:new xt(e)}))}static fromConfig(e,t){return new e(t)}}xn.className="ConvLSTM2D",ow.registerClass(xn);class xr extends g${constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return m2(()=>{var e,t;return e=this.rate,t=this.seed,sA(()=>d$(n,e,r,t))},()=>n,e)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed};return Object.assign(e,super.getConfig()),e}dispose(){return super.dispose()}}xr.className="Dropout",ow.registerClass(xr);class xa extends xr{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}}xa.className="SpatialDropout1D",ow.registerClass(xa);class xs extends g${constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,mb(this.units,"units"),this.activation=bw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=gc(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gc(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gH(e.kernelConstraint),this.biasConstraint=gH(e.biasConstraint),this.kernelRegularizer=bT(e.kernelRegularizer),this.biasRegularizer=bT(e.biasRegularizer),this.activityRegularizer=bT(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=gy(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=gy(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return sA(()=>{let n;this.invokeCallHook(e,t);let r=gg(e),a=mx(this.activation.getClassName());return null!=a?n=mJ(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=mJ(r,this.kernel.read()),null!=this.bias&&(n=m1(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){let e={units:this.units,activation:bb(this.activation),useBias:this.useBias,kernelInitializer:md(this.kernelInitializer),biasInitializer:md(this.biasInitializer),kernelRegularizer:md(this.kernelRegularizer),biasRegularizer:md(this.biasRegularizer),activityRegularizer:md(this.activityRegularizer),kernelConstraint:md(this.kernelConstraint),biasConstraint:md(this.biasConstraint)};return Object.assign(e,super.getConfig()),e}}xs.className="Dense",ow.registerClass(xs);class xi extends g${constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=gy(e)).slice(1))if(null==t)throw new me(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],mz(e,1)]}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=lu(n,e)}var r=n;if(r.rank<=1)throw new me(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let a=[r.shape[0],mz(r.shape,1)];return uI(r,a)})}getConfig(){let e={};return null!=this.dataFormat&&(e.dataFormat=this.dataFormat),Object.assign(e,super.getConfig()),e}}xi.className="Flatten",ow.registerClass(xi);class xo extends g${constructor(e){super(e),this.supportsMasking=!0,this.activation=bw(e.activation)}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);return this.activation.apply(n)})}getConfig(){let e={activation:bb(this.activation)};return Object.assign(e,super.getConfig()),e}}xo.className="Activation",ow.registerClass(xo);class xl extends g${constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return sA(()=>{var t,n;return t=e=gg(e),n=this.n,sA(()=>{if(2!==t.shape.length)throw new me(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return mZ(mG(t,1),[1,n,1])})})}getConfig(){let e={n:this.n};return Object.assign(e,super.getConfig()),e}}xl.className="RepeatVector",ow.registerClass(xl);class xu extends g${constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t))if(null===s)s=e;else throw new me("Can only specifiy one unknown dimension.");else a*=t}let i=mz(e);if(null!==s){if(0===a||i%a!=0)throw new me(n);r[s]=i/a}else if(i!==a)throw new me(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e),r=n.shape;return uI(n,r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape)))})}getConfig(){let e={targetShape:this.targetShape};return Object.assign(e,super.getConfig()),e}}xu.className="Reshape",ow.registerClass(xu);class xh extends g${constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=mW(1,e.dims.length+1);if(!r4.arraysEqual(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new gI({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=gy(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return lu(gg(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims};return Object.assign(e,super.getConfig()),e}}xh.className="Permute",ow.registerClass(xh);class xp extends g${constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){return l9(pe(gg(e),this.maskValue),-1)}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e),r=l9(pe(n,this.maskValue),-1,!0);return ol(n,on(r,n.dtype))})}}xp.className="Masking",ow.registerClass(xp);class xd extends g${constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ml(e.inputLength))}this.inputDim=e.inputDim,mb(this.inputDim,"inputDim"),this.outputDim=e.outputDim,mb(this.outputDim,"outputDim"),this.embeddingsInitializer=gc(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=bT(e.embeddingsRegularizer),this.activityRegularizer=bT(e.activityRegularizer),this.embeddingsConstraint=gH(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return sA(()=>this.maskZero?pe(e=gg(e),op(e)):null)}computeOutputShape(e){if(e=gy(e),null==this.inputLength)return[...e,this.outputDim];let t=ml(this.inputLength);if(t.length!==e.length-1)throw new me(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new me(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);"int32"!==n.dtype&&(n=on(n,"int32"));let r=mQ(this.embeddings.read(),uI(n,[n.size]));return uI(r,gy(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:md(this.embeddingsInitializer),embeddingsRegularizer:md(this.embeddingsRegularizer),activityRegularizer:md(this.activityRegularizer),embeddingsConstraint:md(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength};return Object.assign(e,super.getConfig()),e}}xd.className="Embedding",ow.registerClass(xd);class xc extends g${constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new mt}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new me("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[gy(e)]),e.length<2)throw new me(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if((t=mm(t)).length>1)throw new me(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map(e=>e.length);-1===e.indexOf(null)&&1===mm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return sA(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){let r=mB(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=mG(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=uI(r,[a].concat(mz(e.slice(1))));i=uI(i=lu(i,[1,0]),s),t.push(i),n=!0}else if(e>1){let a=mW(1,e).concat([0]);t.push(lu(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));r=uI(lu(uI(r,[-1,n]),[1,0]),a)}else a>1&&(r=lu(r,[a-1].concat(mW(0,a-1))));return r}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return 1===(n=mm(n)).length?n.concat(t):[null].concat(t)}computeMask(e,t){return sA(()=>{if(null==t)return null;if(!Array.isArray(t))throw new me("`mask` should be an Array");if(!Array.isArray(e))throw new me("`inputs` should be an Array");if(t.length!==e.length)throw new me(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:hk(e,0)))[0];for(let e=1;e<t.length-1;++e)n=hG(n,t[e]);return n})}}class xf extends xc{constructor(e){super(e)}mergeFunction(e){return sA(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=os(t,e[n]);return t})}}xf.className="Add",ow.registerClass(xf);class xm extends xc{constructor(e){super(e)}mergeFunction(e){return sA(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ol(t,e[n]);return t})}}xm.className="Multiply",ow.registerClass(xm);class xg extends xc{constructor(e){super(e)}mergeFunction(e){return sA(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=os(t,e[n]);return ol(1/e.length,t)})}}xg.className="Average",ow.registerClass(xg);class xy extends xc{constructor(e){super(e)}mergeFunction(e){return sA(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=oP(t,e[n]);return t})}}xy.className="Maximum",ow.registerClass(xy);class xb extends xc{constructor(e){super(e)}mergeFunction(e){return sA(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=h4(t,e[n]);return t})}}xb.className="Minimum",ow.registerClass(xb);class xx extends xc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new me("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(r4.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new me("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return sA(()=>mK(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new me("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),n=this.axis<0?t.length+this.axis:this.axis;for(let r of e.slice(1)){if(null==t[n]||null==r[n]){t[n]=null;break}t[n]+=r[n]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new me("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new me("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new me(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return sA(()=>{let n=!0;if(t.forEach(e=>{if(null!=e){n=!1;return}}),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(on(pt(e[n]),"bool")):t[n].rank<e[n].rank?r.push(hk(t[n],-1)):r.push(t[n]);return l7(uT(r,this.axis),-1,!1)})}getConfig(){let e={axis:this.axis};return Object.assign(e,super.getConfig()),e}}function xw(e,t){for(;e<0;)e+=t;return e}xx.className="Concatenate",ow.registerClass(xx);class xv extends xc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r4.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new mt("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new me(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){let t;if(2!==e.length)throw new me(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],r=e[1];t=Array.isArray(this.axes)?this.axes.map((t,n)=>xw(t,e[n].shape.length)):[xw(this.axes,n.shape.length),xw(this.axes,r.shape.length)],this.normalize&&(n=yf(n,t[0]),r=yf(r,t[1]));var a=n,s=r,i=t;if(a.shape.length>3||s.shape.length>3)throw new mt("batchDot is not implemented for tensors of 4D or higher rank yet");if(r4.assert(a.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${a.shape.length}`),r4.assert(a.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${s.shape.length}`),"number"==typeof i&&(i=[i,i]),"complex64"===a.dtype||"complex64"===s.dtype)throw new mt("batchDot is not implemented for complex64-type Tensors yet.");let o=a.shape.length,l=s.shape.length;null==i&&(i=[o-1,l-2]);let u=i;return sA(()=>{let e,t;if(o>l){e=o-l;let t=[];for(let n=0;n<e;++n)t.push(1);s=uI(s,s.shape.concat(t))}else if(l>o){e=l-o;let t=[];for(let n=0;n<e;++n)t.push(1);a=uI(a,a.shape.concat(t))}else e=0;if(2===a.shape.length&&2===s.shape.length)t=u[0]===u[1]?hb(ol(a,s),u[0]):hb(ol(lu(a,[1,0]),s),u[1]);else{let e=u[0]!==a.shape.length-1,n=u[1]===s.shape.length-1;t=lr(a,s,e,n)}if(e>0){let n;n=o>l?o+l-3:o-1;let r=[];for(let t=n;t<n+e;++t)r.push(t);t=p5(t,r)}return 1===t.shape.length&&(t=hk(t,1)),t})}interpretAxes(e,t){return Array.isArray(this.axes)?this.axes:[xw(this.axes,e.length),xw(this.axes,t.length)]}computeOutputShape(e){r4.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new mt("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize};return Object.assign(e,super.getConfig()),e}}xv.className="Dot",ow.registerClass(xv);class xk extends g${constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);return m2(()=>os(mY(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}xk.className="GaussianNoise",ow.registerClass(xk);class xI extends g${constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sA(()=>{this.invokeCallHook(e,t);let n=gg(e);return this.rate>0&&this.rate<1?m2(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return ol(n,mY(n.shape,1,e))},()=>n,t.training||!1):n})}}xI.className="GaussianDropout",ow.registerClass(xI);class xS extends g${constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||gg(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return sA(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return m2(()=>{let t=gg(e),r=hE(pA(n),this.rate);r=on(r,"float32");let a=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,s=-(-1.7580993408473766*a)*this.rate,i=os(ol(t,r),ol(os(r,-1),-1.7580993408473766));return os(ol(i,a),s)},()=>gg(e),t.training||!1)}return e})}}function xN(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=uD(e,t,n,r,a,s);else if(3===e.rank)i=uO(e,t,n,r,a,s);else if(4===e.rank)i=u_(e,t,n,r,a,s);else throw new mt(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}xS.className="AlphaDropout",ow.registerClass(xS);class xT extends g${constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gc(e.betaInitializer||"zeros"),this.gammaInitializer=gc(e.gammaInitializer||"ones"),this.movingMeanInitializer=gc(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gc(e.movingVarianceInitializer||"ones"),this.betaConstraint=gH(e.betaConstraint),this.gammaConstraint=gH(e.gammaConstraint),this.betaRegularizer=bT(e.betaRegularizer),this.gammaRegularizer=bT(e.gammaRegularizer)}build(e){e=gy(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new me(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new gI({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return sA(()=>{let n=null!=t.training&&t.training,r=gg(e),a=r.shape,s=a.length,i=mW(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=ma(1,s);l[o]=a[o];let u=i.slice();u.sort();let h=!r4.arraysEqual(u,mW(0,s).slice(0,s-1)),p=()=>{if(!h)return xN(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);{let e=uI(this.movingMean.read(),l),t=uI(this.movingVariance.read(),l);return xN(r,e,t,this.center?uI(this.beta.read(),l):null,this.scale?uI(this.gamma.read(),l):null,this.epsilon)}};if(!n)return p();let[d,c,f]=function(e,t,n,r,a=.001){return r4.arraysEqual(r.slice().sort(),mW(0,e.rank-1))?function(e,t,n,r,a=.001){return sA(()=>{let s=h8(e,r),i=s.mean,o=s.variance;return[xN(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return sA(()=>{let s=h8(e,r),i=s.mean,o=s.variance,l=[];for(let t of mW(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=uI(i,l),h=uI(o,l),p=null==t?null:uI(t,l);return[xN(e,u,h,null==n?null:uI(n,l),p,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{sA(()=>{let r=e.read(),a=ol(oF(r,t),1-n);e.write(oF(r,a))})};return m(this.movingMean,c,this.momentum),m(this.movingVariance,f,this.momentum),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:md(this.betaInitializer),gammaInitializer:md(this.gammaInitializer),movingMeanInitializer:md(this.movingMeanInitializer),movingVarianceInitializer:md(this.movingVarianceInitializer),betaRegularizer:md(this.betaRegularizer),gammaRegularizer:md(this.gammaRegularizer),betaConstraint:md(this.betaConstraint),gammaConstraint:md(this.gammaConstraint)};return Object.assign(e,super.getConfig()),e}}xT.className="BatchNormalization",ow.registerClass(xT);class xC extends g${constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gc(e.betaInitializer||"zeros"),this.gammaInitializer=gc(e.gammaInitializer||"ones"),this.betaRegularizer=bT(e.betaRegularizer),this.gammaRegularizer=bT(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=gy(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==mm(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=gg(e),r=n.shape,a=r.length;return sA(()=>{let{mean:e,variance:t}=h8(n,this.axis,!0),s=ma(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?uI(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),h.push(1)):(u.push(1),h.push(r[e]));return e=hS(e,u),t=hS(t,u),null!=o&&(o=hS(o,h)),null!=l&&(l=hS(l,h)),xN(n,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:md(this.betaInitializer),gammaInitializer:md(this.gammaInitializer),betaRegularizer:md(this.betaRegularizer),gammaRegularizer:md(this.gammaRegularizer)};return Object.assign(e,super.getConfig()),e}}xC.className="LayerNormalization",ow.registerClass(xC);class x$ extends g${constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?mV():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,n;if(e.padding=e.padding,2!==e.padding.length)throw new me(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new me(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new me(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new gI({ndim:4})]}computeOutputShape(e){let t,n;return(e=gy(e),"channelsFirst"===this.dataFormat)?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return sA(()=>{var t,n,r;return t=gg(e),n=this.padding,r=this.dataFormat,sA(()=>{if(4!==t.rank)throw new me(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new me("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r=mV()),"channelsLast"!==r&&"channelsFirst"!==r)throw new me(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return pr(t,"channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]])})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}function xE(e,t,n,r,a,s){return sA(()=>{let i;mE(a),mR(s),mA(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a=mV()),null==s&&(s="max"),e=bM(e,a);let o="same"===r?"same":"valid";return i="max"===s?hY(e,t,n,o):uS(e,t,n,o),"channelsFirst"===a&&(i=lu(i,[0,3,1,2])),i})}function xA(e,t,n,r,a,s){return sA(()=>{let i;mE(a),mR(s),mA(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a=mV()),null==s&&(s="max"),e=bL(e,a);let o="same"===r?"same":"valid";return i="max"===s?hJ(e,t,n,o):uN(e,t,n,o),"channelsFirst"===a&&(i=lu(i,[0,4,1,2,3])),i})}x$.className="ZeroPadding2D",ow.registerClass(x$);class xR extends g${constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new me(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(mb(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new me(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);mb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mA(this.padding),this.inputSpec=[new gI({ndim:3})]}computeOutputShape(e){let t=bO((e=gy(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return sA(()=>(this.invokeCallHook(e,t),e=mG(gg(e),2),p5(this.poolingFunction(gg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast"),[2])))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides};return Object.assign(e,super.getConfig()),e}}class xF extends xR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xE(e,t,n,r,a,"max")}}xF.className="MaxPooling1D",ow.registerClass(xF);class xD extends xR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xE(e,t,n,r,a,"avg")}}xD.className="AveragePooling1D",ow.registerClass(xD);class xO extends g${constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new me(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];mb(this.poolSize,"poolSize"),mb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,mE(this.dataFormat),mA(this.padding),this.inputSpec=[new gI({ndim:4})]}computeOutputShape(e){e=gy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return(t=bO(t,this.poolSize[0],this.padding,this.strides[0]),n=bO(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return sA(()=>(this.invokeCallHook(e,t),this.poolingFunction(gg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class x_ extends xO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xE(e,t,n,r,a,"max")}}x_.className="MaxPooling2D",ow.registerClass(x_);class xM extends xO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xE(e,t,n,r,a,"avg")}}xM.className="AveragePooling2D",ow.registerClass(xM);class xL extends g${constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new me(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];mb(this.poolSize,"poolSize"),mb(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,mE(this.dataFormat),mA(this.padding),this.inputSpec=[new gI({ndim:5})]}computeOutputShape(e){e=gy(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return(t=bO(t,this.poolSize[0],this.padding,this.strides[0]),n=bO(n,this.poolSize[1],this.padding,this.strides[1]),r=bO(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return sA(()=>(this.invokeCallHook(e,t),this.poolingFunction(gg(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class xz extends xL{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xA(e,t,n,r,a,"max")}}xz.className="MaxPooling3D",ow.registerClass(xz);class xP extends xL{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return mE(a),mA(r),xA(e,t,n,r,a,"avg")}}xP.className="AveragePooling3D",ow.registerClass(xP);class xB extends g${constructor(e){super(e),this.inputSpec=[new gI({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new mt}}class xW extends xB{constructor(e){super(e||{})}call(e,t){return sA(()=>h0(gg(e),1))}}xW.className="GlobalAveragePooling1D",ow.registerClass(xW);class xU extends xB{constructor(e){super(e||{})}call(e,t){return sA(()=>hg(gg(e),1))}}xU.className="GlobalMaxPooling1D",ow.registerClass(xU);class xV extends g${constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,mE(this.dataFormat),this.inputSpec=[new gI({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new mt}getConfig(){let e={dataFormat:this.dataFormat};return Object.assign(e,super.getConfig()),e}}class xG extends xV{call(e,t){return sA(()=>{let t=gg(e);return"channelsLast"===this.dataFormat?h0(t,[1,2]):h0(t,[2,3])})}}xG.className="GlobalAveragePooling2D",ow.registerClass(xG);class xH extends xV{call(e,t){return sA(()=>{let t=gg(e);return"channelsLast"===this.dataFormat?hg(t,[1,2]):hg(t,[2,3])})}}xH.className="GlobalMaxPooling2D",ow.registerClass(xH);class xj extends g${constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}};return Object.assign(e,super.getConfig()),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=yc(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}}class xq extends xj{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=gy(e)).length<3)throw new me(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=gy(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return sA(()=>bJ((e,n)=>[gg(this.layer.call(e,t)),[]],e=gg(e),[],!1,null,null,!1,!0)[1])}}xq.className="TimeDistributed",ow.registerClass(xq);class xK extends xj{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=yc(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=yc(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,mg(mC,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new mt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return(Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState)?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):mo(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=bY(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new me("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map(e=>new gI({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new mt("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof gS;for(let e of s)if(e instanceof gS!==o)throw new me("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!o)return super.apply(e,t);{let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}}call(e,t){return sA(()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return(this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=pM(r,1)),"concat"===this.mergeMode?s=mK([n,r]):"sum"===this.mergeMode?s=os(n,r):"ave"===this.mergeMode?s=ol(.5,os(n,r)):"mul"===this.mergeMode?s=ol(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState)?null==this.mergeMode?s.concat(a):[s].concat(a):s})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){mD(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),mD(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return n;{let e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode};return Object.assign(e,super.getConfig()),e}static fromConfig(e,t){let n=yc(t.layer);if(delete t.layer,null!=t.numConstants)throw new mt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=n,new e(t)}}xK.className="Bidirectional",ow.registerClass(xK);class xX extends g${constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset};return Object.assign(e,super.getConfig()),e}call(e,t){return sA(()=>("float32"!==(e=gg(e)).dtype&&(e=on(e,"float32")),os(ol(e,this.scale),this.offset)))}}xX.className="Rescaling",ow.registerClass(xX);let{resizeBilinear:xZ,cropAndResize:xY}=cR;class xJ extends g${constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return sA(()=>{let l,u=!1,h=[t/s,n/i,(r+t)/s,(a+n)/i],p=[];3===e.rank?(u=!0,l=p8([e])):l=e;for(let e=0;e<l.shape[0];e++)p.push(h);let d=sb(p,[p.length,4]),c=xY(l,d,pF(0,p.length,1,"int32"),[r,a],"nearest");if(u)return on(gg(dd(c)),o);return on(c,o)})}upsize(e,t,n,r){return sA(()=>on(xZ(e,[t,n]),r))}call(e,t){return sA(()=>{let t=gg(e),n=t.dtype,r=t.shape,a=r[r.length-3],s=r[r.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return(s!==this.width&&0===(o=Math.floor((s-this.width)/2))&&(o=1),i>=0&&o>=0)?this.centerCrop(t,i,o,this.height,this.width,a,s,n):this.upsize(e,this.height,this.width,n)})}getConfig(){let e={height:this.height,width:this.width};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=gy(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}xJ.className="CenterCrop",ow.registerClass(xJ);class xQ extends g${constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){return null==(e=gy(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return sA(()=>{let n;if("int32"!==(e=gg(e)).dtype&&(e=on(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new me(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=gg(t.countWeights)}let r=hg(e),a=hy(e),s=h$(this.numTokens,r).bufferSync().get(0),i=hE(a,0).bufferSync().get(0);if(!(s&&i))throw new me(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let a,s=gg(e);if("int32"!==s.dtype&&(s=on(s,"int32")),"int"===t)return s;let i=s.shape;if(0===s.rank&&(s=hk(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=hk(s,-1)),s.rank>2)throw new me(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);let o=["multiHot","oneHot"].includes(t),l=s;if(a=void 0!==r&&"count"===t?u3(l,r,n,o):u3(l,[],n,o),"tfIdf"!==t)return a;if(r)return ol(a,r);throw new me("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)})}}xQ.className="CategoryEncoding",ow.registerClass(xQ);let x0=new Set(["bilinear","nearest"]);class x1 extends g${constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(x0.has(e.interpolation))this.interpolation=e.interpolation;else throw new me(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){let t=(e=gy(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio};return Object.assign(e,super.getConfig()),e}call(e,t){return sA(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return cR.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return cR.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...x0]} are supported`)})}}x1.className="Resizing",ow.registerClass(x1);class x2{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}x2.className="RandomSeed";class x3 extends g${constructor(e){super(e),this.randomGenerator=new x2(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed};return Object.assign(e,super.getConfig()),e}}x3.className="BaseRandomLayer";let x4=new Set(["bilinear","nearest"]);class x6 extends x3{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new me(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new me(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new me(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(x4.has(n))this.interpolation=n;else throw new me(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation};return Object.assign(e,super.getConfig()),e}computeOutputShape(e){let t=(e=gy(e))[2];return[this.imgHeight,-1,t]}call(e,t){return sA(()=>{let t=gg(e);this.imgHeight=t.shape[t.shape.length-3];let n=t.shape[t.shape.length-2];this.widthFactor=pA([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);let a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return cR.resizeBilinear(e,a);case"nearest":return cR.resizeNearestNeighbor(e,a);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...x4]} are supported`)}})}}function x5(e){return new gE(e)}function x8(e){return new bA(e)}function x7(e){return new bC(e)}function x9(e){return new b$(e)}function we(e){return new bE(e)}function wt(e){return new bF(e)}function wn(e){return new bR(e)}function wr(e){return new bq(e)}function wa(e){return new bW(e)}function ws(e){return new bV(e)}function wi(e){return new bU(e)}function wo(e){return new bG(e)}function wl(e){return new bj(e)}function wu(e){return new bK(e)}function wh(e){return new bX(e)}function wp(e){return new bZ(e)}function wd(e){return new xo(e)}function wc(e){return new xs(e)}function wf(e){return new xr(e)}function wm(e){return new xa(e)}function wg(e){return new xi(e)}function wy(e){return new xl(e)}function wb(e){return new xu(e)}function wx(e){return new xh(e)}function ww(e){return new xd(e)}function wv(e){return new xf(e)}function wk(e){return new xg(e)}function wI(e){return new xx(e)}function wS(e){return new xy(e)}function wN(e){return new xb(e)}function wT(e){return new xm(e)}function wC(e){return new xv(e)}function w$(e){return new xT(e)}function wE(e){return new xC(e)}function wA(e){return new x$(e)}function wR(e){return new xD(e)}function wF(e){return wR(e)}function wD(e){return wR(e)}function wO(e){return new xM(e)}function w_(e){return wO(e)}function wM(e){return wO(e)}function wL(e){return new xP(e)}function wz(e){return wL(e)}function wP(e){return wL(e)}function wB(e){return new xW(e)}function wW(e){return new xG(e)}function wU(e){return new xU(e)}function wV(e){return new xH(e)}function wG(e){return new xF(e)}function wH(e){return new x_(e)}function wj(e){return new xz(e)}function wq(e){return new b4(e)}function wK(e){return new b3(e)}function wX(e){return new b5(e)}function wZ(e){return new b6(e)}function wY(e){return new b2(e)}function wJ(e){return new b1(e)}function wQ(e){return new xn(e)}function w0(e){return new xt(e)}function w1(e){return new bQ(e)}function w2(e){return new b8(e)}function w3(e){return new xK(e)}function w4(e){return new xq(e)}x6.className="RandomWidth",ow.registerClass(x6);let w6=wU,w5=wV,w8=wG,w7=wH;function w9(e){return new xk(e)}function ve(e){return new xI(e)}function vt(e){return new xS(e)}function vn(e){return new xp(e)}function vr(e){return new xX(e)}function va(e){return new xJ(e)}function vs(e){return new x1(e)}function vi(e){return new xQ(e)}function vo(e){return new x6(e)}var vl={};function vu(e,t){return yS(e,t)}function vh(e,t){return yw(e,t)}function vp(e,t){return yE(e,t)}function vd(e,t){return yN(e,t)}function vc(e,t){return yb(e,t)}function vf(e,t){return yC(e,t)}function vm(e,t){return sA(()=>{let n=yT(e,t),r=os(n,sA(()=>on(hb(hG(u7(e,1),u7(t,0))),"float32")));return on(u9(h$(r,0),oo(n,r),0),"float32")})}function vg(e,t){return yv(e,t)}function vy(e,t){return yg(e,t)}function vb(e,t){return yy(e,t)}function vx(e,t){return yy(e,t)}function vw(e,t){return yy(e,t)}function vv(e,t){return ym(e,t)}function vk(e,t){return ym(e,t)}function vI(e,t){return ym(e,t)}function vS(e,t){return sA(()=>{let n=e.sub(t).square().sum(),r=e.sub(e.mean()).square().sum();return ox(1).sub(n.div(r))})}u(vl,"binaryAccuracy",()=>vu),u(vl,"binaryCrossentropy",()=>vh),u(vl,"sparseCategoricalAccuracy",()=>vp),u(vl,"categoricalAccuracy",()=>vd),u(vl,"categoricalCrossentropy",()=>vc),u(vl,"precision",()=>vf),u(vl,"recall",()=>vm),u(vl,"cosineProximity",()=>vg),u(vl,"meanAbsoluteError",()=>vy),u(vl,"meanAbsolutePercentageError",()=>vb),u(vl,"MAPE",()=>vx),u(vl,"mape",()=>vw),u(vl,"meanSquaredError",()=>vv),u(vl,"MSE",()=>vk),u(vl,"mse",()=>vI),u(vl,"r2Score",()=>vS);var vN={};u(vN,"modelFromJSON",()=>y3);var vT={};function vC(e){return new bI(e)}function v$(e){return bv(e),new bI({l1:null!=e?e.l1:null,l2:0})}function vE(e){return bv(e),new bI({l2:null!=e?e.l2:null,l1:0})}u(vT,"l1l2",()=>vC),u(vT,"l1",()=>v$),u(vT,"l2",()=>vE);class vA extends ys{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof y1))throw Error("model must be a LayersModel, not some other Container");this.model=e}}function vR(e,t){return e<t}function vF(e,t){return e>t}class vD extends vA{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new mt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=vR:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=vF:this.monitorFunc=vR,this.monitorFunc===vR&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===vR?1/0:-1/0}async onEpochEnd(e,t){await yr(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}let vO={earlyStopping:function(e){return new vD(e)}};var v_={};u(v_,"GraphModel",()=>k5),u(v_,"loadGraphModel",()=>k8),u(v_,"loadGraphModelSync",()=>k7),u(v_,"deregisterOp",()=>vz),u(v_,"registerOp",()=>vL),u(v_,"version_converter",()=>k9),eP.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(S||(S={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(N||(N={}));let vM={};function vL(e,t){vM[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function vz(e){delete vM[e]}function vP(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return vB(t.inputNames[o],n,r,a);if("tensors"===s.type){let s=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter((e,t)=>{var n;return(null==(n=s[t])?void 0:n.op)!=="NoOp"}).map(e=>vB(e,n,r,a))}let l=vB(t.inputNames[o],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:r4.toNestedArray(l.shape,u)}let i=t.attrParams[e];return i&&i.value}function vB(e,t,n,r){let[a,s]=vG(e,n);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find(e=>!!t[vV(a,e)]);return void 0!==i?t[vV(a,i)][s]:void 0}function vW(e,t,n){return t[vV(e,n.currentContextId)]}function vU(e,t){let[n,r,a]=vG(e,t);return[vV(n,t&&t.currentContextId),r,a]}function vV(e,t){return t?`${e}-${t}`:e}function vG(e,t){let n;if(""===e)return["",0,void 0];let r=null!=t&&null!=t.parseNodeNameCache;if(r){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let a=e.split(":");if(1===a.length)n=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;n=[e,Number(a[a.length-1]),t]}return r&&t.parseNodeNameCache.set(e,n),n}function vH(e,t,n){let r=vP("pad",e,t,n);if("explicit"===r){r=vP("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function vj(e){return e.kept?e:or(e)}var vq={};u(vq,"json",()=>vK);let vK=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var vX={};u(vX,"json",()=>vZ);let vZ=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var vY={};u(vY,"json",()=>vJ);let vJ=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var vQ={};u(vQ,"json",()=>v0);let v0=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var v1={};u(v1,"json",()=>v2);let v2=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var v3={};u(v3,"json",()=>v4);let v4=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var v6={};u(v6,"json",()=>v5);let v5=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var v8={};u(v8,"json",()=>v7);let v7=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var v9={};u(v9,"json",()=>ke);let ke=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var kt={};u(kt,"json",()=>kn);let kn=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var kr={};u(kr,"json",()=>ka);let ka=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var ks={};u(ks,"json",()=>ki);let ki=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var ko={};u(ko,"json",()=>kl);let kl=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var ku={};u(ku,"json",()=>kh);let kh=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var kp={};u(kp,"json",()=>kd);let kd=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var kc={};u(kc,"json",()=>kf);let kf=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var km={};u(km,"json",()=>kg);let kg=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var ky={};u(ky,"json",()=>kb);let kb=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var kx={};u(kx,"json",()=>kw);let kw=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class kv{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[vq,vX,vY,vQ,v1,v3,v6,v8,v9,kt,kr,ks,ko,ku,kp,kc,km,ky,kx].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e),{}),o=[],l=[],u={},h={};null!=t&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(e=>{let t=i[e];t.inputNames.forEach((e,n)=>{let[r,,a]=vU(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(h).length?p.forEach(e=>{let t=i[e];0===t.children.length&&l.push(t)}):Object.keys(h).forEach(e=>{let[t]=vU(e),n=i[t];null!=n&&(n.signatureKey=h[e],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=vU(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))}):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=vM[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let r,a=n.type;switch(n.type){case"string":void 0===(r=kI(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(r=kD(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(r=kN(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(r=kN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(r=kF(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(r=kS(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(r=k_(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=k_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(r=kR(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kR(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(r=kO(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kO(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(r=k$(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=k$(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(r=kE(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kE(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":void 0===(r=kC(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(r=kC(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));let a=[],s=[];e.signature.inputArg.forEach(e=>{let[t]=vU(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:kT(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{let t=r[e];t.inputNames.forEach((e,n)=>{let[a,,s]=vU(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});let i=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=vU(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function kk(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=eP.global;return void 0!==t.atob?t.atob(e):new sJ(e,"base64").toString()}(e);return t?n:n.toLowerCase()}function kI(e,t,n,r=!1){let a=e[t];return null!=a?kk(a.s,r):n}function kS(e,t,n){let r=e[t];return r?r.b:n}function kN(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function kT(e){switch("string"==typeof e&&(e=S[e]),e){case S.DT_FLOAT:case S.DT_HALF:return"float32";case S.DT_INT32:case S.DT_INT64:case S.DT_INT8:case S.DT_UINT8:return"int32";case S.DT_BOOL:return"bool";case S.DT_DOUBLE:return"float32";case S.DT_STRING:return"string";case S.DT_COMPLEX64:case S.DT_COMPLEX128:return"complex64";default:return null}}function kC(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function k$(e,t,n){let r=e[t];return r&&r.type?kT(r.type):n}function kE(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>kT(e)):n}function kA(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function kR(e,t,n){let r=e[t];return r&&r.shape?kA(r.shape):n}function kF(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function kD(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>kk(e,r)):n}function kO(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>kA(e)):n}function k_(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class kM{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return vB(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return vB(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return kN(this.node.rawAttrs,e,t);if(null!=n.s)return kI(this.node.rawAttrs,e,t);if(null!=n.b)return kS(this.node.rawAttrs,e,t);if(null!=n.shape)return kR(this.node.rawAttrs,e,t);if(null!=n.type)return k$(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return kF(this.node.rawAttrs,e,t);if(null!=n.list.s)return kD(this.node.rawAttrs,e,t);if(null!=n.list.shape)return kO(this.node.rawAttrs,e,t);if(null!=n.list.b)return k_(this.node.rawAttrs,e,t);if(null!=n.list.type)return kE(this.node.rawAttrs,e,t)}return t}}var kL={};function kz(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){r4.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];r4.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function kP(e){return!("number"==typeof e||e.some(e=>e<0))}function kB(e,t,n){let r=kW(e,n),a=!kP(r);if(a&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=kW(e.shape,r)}),!kP(r))throw Error(`Non-fully-defined elementShape: ${r}`);return r}function kW(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}l(kL,l4);class kU{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ox(0),sF(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),kz(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,sF(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return sb([],[0].concat(this.elementShape));let n=this.readMany(e);return kz(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),p8(n,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return sb([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return kz(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),uT(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,dd(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(e=>n+=e);if(n!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];sA(()=>{t=uI(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=uI(u$(t,i,o),this.elementShape)}return s});let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class kV{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);kz(t,e.shape,"TensorList shape mismatch: "),sF(e)}),this.idTensor=ox(0),this.maxNumElements=r,sF(this.idTensor)}copy(){return new kV([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);kz(e,this.elementShape,"TensorList shape mismatch: ");let r=kB(this.elementShape,this.tensors,e);return sA(()=>p8(this.tensors.map(e=>uI(e,r)),0))}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let n=kB(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,kz(r.shape,e,"TensorList shape mismatch: "),uI(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(kz(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");sF(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new kV([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);kz(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=kB(this.elementShape,this.tensors,t);return uI(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);kz(this.elementShape,t.shape,"TensorList shape mismatch: "),sF(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);kz(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=kB(this.elementShape,this.tensors,n);return 0===e.length?sb([],[0].concat(r)):sA(()=>p8(e.map(e=>uI(this.tensors[e],r)),0))}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);kz(this.elementShape,t,"TensorList shape mismatch: ");let n=kB(this.elementShape,this.tensors,t);return 0===this.size()?sb([],[0].concat(n)):sA(()=>uT(this.tensors.map(e=>uI(e,n)),0))}}let kG=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=vP("thenBranch",e,t,n),a=vP("elseBranch",e,t,n),s=vP("cond",e,t,n),i=vP("args",e,t,n);if((await s.data())[0])return n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap);return n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=vP("body",e,t,n),a=vP("cond",e,t,n),s=vP("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id),l=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let u=s;for(;l[0];){let e=u,t=(u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return u}case"LoopCond":return[vj(vP("pred",e,t,n))];case"Switch":{let r=vP("pred",e,t,n),a=vP("data",e,t,n);return a.kept||(a=vj(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==vB(e,t,n));if(r)return[vj(vB(r,t,n))];return}case"Enter":{let r=vP("frameName",e,t,n),a=vP("tensor",e,t,n);return n.enterFrame(r),[vj(a)]}case"Exit":{let r=vP("tensor",e,t,n);return n.exitFrame(),[vj(r)]}case"NextIteration":{let r=vP("tensor",e,t,n);return n.nextIteration(),[vj(r)]}case"TensorArrayV3":{let r=vP("size",e,t,n),a=vP("dtype",e,t,n),s=vP("elementShape",e,t,n),i=vP("dynamicSize",e,t,n),o=vP("clearAfterRead",e,t,n),l=vP("identicalElementShapes",e,t,n),u=new kU(vP("name",e,t,n),a,r,s,l,i,o);return n.addTensorArray(u),[u.idTensor,ox(1)]}case"TensorArrayWriteV3":{let r=vP("tensorArrayId",e,t,n),a=vP("index",e,t,n),s=vP("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=vP("tensorArrayId",e,t,n),a=vP("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=vP("tensorArrayId",e,t,n),a=vP("indices",e,t,n),s=vP("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=vP("tensorArrayId",e,t,n),a=vP("indices",e,t,n),s=vP("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=vP("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=vP("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=vP("tensorArrayId",e,t,n),a=vP("tensor",e,t,n),s=vP("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=vP("tensorArrayId",e,t,n);return[ox(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=vP("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=vP("tensorListId",e,t,n),a=vP("index",e,t,n),s=vP("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=vP("tensorListId",e,t,n),a=vP("index",e,t,n),s=vP("elementShape",e,t,n),i=vP("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=vP("indices",e,t,n),a=vP("tensor",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new kV([],n,e.dtype,r),i=dd(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(a,r,vP("elementShape",e,t,n),vP("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=vP("elementShape",e,t,n),a=vP("elementDType",e,t,n),s=vP("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,n),i=new kV([],r,a,"TensorListReserve"===e.op?-1:s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=vP("tensorListId",e,t,n),a=vP("indices",e,t,n),s=vP("elementShape",e,t,n),i=vP("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=vP("tensorListId",e,t,n),a=vP("elementShape",e,t,n),s=vP("elementDType",e,t,n),i=vP("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=vP("tensor",e,t,n),a=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);return kz(e.shape.slice(1),t,"TensorList shape mismatch: "),new kV(dd(e),t,r)}(r,vP("elementShape",e,t,n),vP("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=vP("tensorListId",e,t,n),a=n.getTensorList(r.id),s=vP("dtype",e,t,n),i=vP("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=vP("tensorListId",e,t,n),a=vP("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=vP("tensorListId",e,t,n),a=vP("elementShape",e,t,n),s=vP("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=vP("tensor",e,t,n),a=vP("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map(e=>r+=e);if(r!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=kW(e.shape.slice(1),n),i=0===r?0:e.size/r,o=sA(()=>{let n=[];e=uI(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=uI(u$(e,o,l),s)}return e.dispose(),n}),l=new kV([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,vP("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=vP("tensorListId",e,t,n);return[ox(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=vP("tensorListId",e,t,n),a=vP("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function kH(e,t,n){let[r,a]=vP("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=vP("numArgs",e,t,n);if(s){if(i&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===r)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=vP("strides",e,t,n),u=vH(e,t,n),h=vP("dataFormat",e,t,n).toUpperCase(),p=vP("dilations",e,t,n),[d,c]=vP("args",e,t,n);return s||(c=d,d=void 0),{stride:l,pad:u,dataFormat:h,dilations:p,biasArg:d,preluArg:c,activationFunc:a,leakyreluAlpha:vP("leakyreluAlpha",e,t,n)}}function kj(e,t,n){let r=vP("boxes",e,t,n),a=vP("scores",e,t,n),s=vP("maxOutputSize",e,t,n),i=vP("iouThreshold",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:vP("scoreThreshold",e,t,n),softNmsSigma:vP("softNmsSigma",e,t,n)}}let kq=async(e,t,n,r,a=kL)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=kj(e,t,n),h=await a.image.nonMaxSuppressionWithScoreAsync(r,s,i,o,l,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=kj(e,t,n),u=vP("padToMaxOutputSize",e,t,n),h=await a.image.nonMaxSuppressionPaddedAsync(r,s,i,o,l,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=kj(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,i,o,l)]}case"Where":{let r=a.cast(vP("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(vP("x",e,t,n),vP("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}};class kK{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ox(0),this.tensorMap=new Map,sF(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ox(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),sA(()=>{let e=dd(t),r=n.length,a=e.length;r4.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){let r=n[t],a=e[t];sF(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return sA(()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return p8(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}let kX=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=new kK(vP("keyDType",e,t,n),vP("valueDType",e,t,n));return r.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=vP("tableHandle",e,t,n,r),s=vP("keys",e,t,n),i=vP("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=vP("tableHandle",e,t,n,r),s=vP("keys",e,t,n),i=vP("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=vP("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function kZ(e,t,n,r,a=sA){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(vP("a",e,t,n),vP("b",e,t,n))];case"AddN":return[r.addN(vP("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(vP("a",e,t,n),vP("b",e,t,n))];case"Mul":return[r.mul(vP("a",e,t,n),vP("b",e,t,n))];case"RealDiv":case"Div":return[r.div(vP("a",e,t,n),vP("b",e,t,n))];case"DivNoNan":return[r.divNoNan(vP("a",e,t,n),vP("b",e,t,n))];case"FloorDiv":return[r.floorDiv(vP("a",e,t,n),vP("b",e,t,n))];case"Sub":return[r.sub(vP("a",e,t,n),vP("b",e,t,n))];case"Minimum":return[r.minimum(vP("a",e,t,n),vP("b",e,t,n))];case"Maximum":return[r.maximum(vP("a",e,t,n),vP("b",e,t,n))];case"Pow":return[r.pow(vP("a",e,t,n),vP("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(vP("a",e,t,n),vP("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(vP("x",e,t,n))];case"Acos":return[r.acos(vP("x",e,t,n))];case"Acosh":return[r.acosh(vP("x",e,t,n))];case"Asin":return[r.asin(vP("x",e,t,n))];case"Asinh":return[r.asinh(vP("x",e,t,n))];case"Atan":return[r.atan(vP("x",e,t,n))];case"Atan2":return[r.atan2(vP("x",e,t,n),vP("y",e,t,n))];case"Atanh":return[r.atanh(vP("x",e,t,n))];case"Ceil":return[r.ceil(vP("x",e,t,n))];case"Complex":return[r.complex(vP("real",e,t,n),vP("imag",e,t,n))];case"Cos":return[r.cos(vP("x",e,t,n))];case"Cosh":return[r.cosh(vP("x",e,t,n))];case"Elu":return[r.elu(vP("x",e,t,n))];case"Erf":return[r.erf(vP("x",e,t,n))];case"Exp":return[r.exp(vP("x",e,t,n))];case"Expm1":return[r.expm1(vP("x",e,t,n))];case"Floor":return[r.floor(vP("x",e,t,n))];case"Log":return[r.log(vP("x",e,t,n))];case"Log1p":return[r.log1p(vP("x",e,t,n))];case"Imag":return[r.imag(vP("x",e,t,n))];case"Neg":return[r.neg(vP("x",e,t,n))];case"Reciprocal":return[r.reciprocal(vP("x",e,t,n))];case"Real":return[r.real(vP("x",e,t,n))];case"Relu":return[r.relu(vP("x",e,t,n))];case"Round":return[r.round(vP("x",e,t,n))];case"Selu":return[r.selu(vP("x",e,t,n))];case"Sigmoid":return[r.sigmoid(vP("x",e,t,n))];case"Sin":return[r.sin(vP("x",e,t,n))];case"Sign":return[r.sign(vP("x",e,t,n))];case"Sinh":return[r.sinh(vP("x",e,t,n))];case"Softplus":return[r.softplus(vP("x",e,t,n))];case"Sqrt":return[r.sqrt(vP("x",e,t,n))];case"Square":return[r.square(vP("x",e,t,n))];case"Tanh":return[r.tanh(vP("x",e,t,n))];case"Tan":return[r.tan(vP("x",e,t,n))];case"ClipByValue":return[r.clipByValue(vP("x",e,t,n),vP("clipValueMin",e,t,n),vP("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(vP("x",e,t,n))];case"Rsqrt":return[r.rsqrt(vB(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(vP("x",e,t,n),vP("alpha",e,t,n))];case"Prelu":return[r.prelu(vP("x",e,t,n),vP("alpha",e,t,n))];case"IsNan":return[r.isNaN(vB(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(vB(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(vB(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return kG(e,t,n);case"convolution":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Conv1D":{let a=vP("stride",e,t,n),s=vP("pad",e,t,n),i=vP("dataFormat",e,t,n).toUpperCase(),o=vP("dilation",e,t,n);return[r.conv1d(vP("x",e,t,n),vP("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=vP("strides",e,t,n),s=vH(e,t,n),i=vP("dataFormat",e,t,n).toUpperCase(),o=vP("dilations",e,t,n);return[r.conv2d(vP("x",e,t,n),vP("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=kH(e,t,n);return[r.fused.conv2d({x:vP("x",e,t,n),filter:vP("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:h,leakyreluAlpha:p}=kH(e,t,n);return[r.fused.depthwiseConv2d({x:vP("x",e,t,n),filter:vP("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:h,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=vP("outputShape",e,t,n),s=vP("strides",e,t,n),i=vH(e,t,n);return[r.conv2dTranspose(vP("x",e,t,n),vP("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=vP("strides",e,t,n),s=vH(e,t,n),i=vP("dilations",e,t,n),o=vP("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(vP("input",e,t,n),vP("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("dataFormat",e,t,n).toUpperCase(),o=vP("dilations",e,t,n);return[r.conv3d(vP("x",e,t,n),vP("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("kernelSize",e,t,n);return[r.avgPool(vP("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("kernelSize",e,t,n);return[r.maxPool(vP("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("kernelSize",e,t,n),o=vP("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(vP("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[l,u]}case"AvgPool3D":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("kernelSize",e,t,n);return[r.avgPool3d(vP("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("kernelSize",e,t,n);return[r.maxPool3d(vP("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=vP("strides",e,t,n),s=vP("pad",e,t,n),i=vP("dilations",e,t,n),o=a[1],l=a[2],u=i[1],h=i[2];return[r.dilation2d(vP("x",e,t,n),vP("filter",e,t,n),[o,l],s,[u,h],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Fill":{let a=vP("shape",e,t,n),s=vP("dtype",e,t,n),i=vP("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=vP("start",e,t,n),s=vP("stop",e,t,n),i=vP("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=vP("logits",e,t,n),s=vP("numSamples",e,t,n),i=vP("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=vP("indices",e,t,n),s=vP("depth",e,t,n),i=vP("onValue",e,t,n),o=vP("offValue",e,t,n),l=vP("dtype",e,t,n);return[r.oneHot(a,s,i,o,l)]}case"Ones":return[r.ones(vP("shape",e,t,n),vP("dtype",e,t,n))];case"OnesLike":return[r.onesLike(vP("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(vP("shape",e,t,n),vP("dtype",e,t,n),vP("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(vP("shape",e,t,n),vP("minval",e,t,n),vP("maxval",e,t,n),vP("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(vP("shape",e,t,n),vP("minval",e,t,n),vP("maxval",e,t,n),vP("seed",e,t,n))];case"Range":{let a=vP("start",e,t,n),s=vP("stop",e,t,n),i=vP("step",e,t,n);return[r.range(a,s,i,vP("dtype",e,t,n))]}case"TruncatedNormal":{let a=vP("shape",e,t,n),s=vP("mean",e,t,n),i=vP("stdDev",e,t,n),o=vP("seed",e,t,n);return[r.truncatedNormal(a,s,i,vP("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(vP("shape",e,t,n),vP("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(vP("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return kq(e,t,n);case"evaluation":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"LowerBound":{let a=vP("sortedSequence",e,t,n),s=vP("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=vP("x",e,t,n),s=vP("k",e,t,n),i=vP("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=vP("sortedSequence",e,t,n),s=vP("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=vP("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=vP("x",e,t,n),s=vP("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"ResizeBilinear":{let a=vP("images",e,t,n),s=vP("size",e,t,n),i=vP("alignCorners",e,t,n),o=vP("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=vP("images",e,t,n),s=vP("size",e,t,n),i=vP("alignCorners",e,t,n),o=vP("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=vP("image",e,t,n),s=vP("boxes",e,t,n),i=vP("boxInd",e,t,n),o=vP("cropSize",e,t,n),l=vP("method",e,t,n),u=vP("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let a=vP("images",e,t,n),s=vP("transforms",e,t,n),i=vP("outputShape",e,t,n),o=vP("fillValue",e,t,n),l=vP("interpolation",e,t,n),u=vP("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=vP("default",e,t,n);return[vB(e.name,t,n)||a];case"Placeholder":return[vB(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[vj(vP("x",e,t,n))];case"IdentityN":return vP("x",e,t,n).map(e=>vj(e));case"Shape":return[r.tensor1d(vP("x",e,t,n).shape,"int32")];case"ShapeN":return vP("x",e,t,n).map(e=>r.tensor1d(e.shape));case"Size":return[r.scalar(vP("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(vP("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let s=vP("x",e,t,n),i=vP("data",e,t,n),o=vP("message",e,t,n),l=vP("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Equal":return[r.equal(vP("a",e,t,n),vP("b",e,t,n))];case"NotEqual":return[r.notEqual(vP("a",e,t,n),vP("b",e,t,n))];case"Greater":return[r.greater(vP("a",e,t,n),vP("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(vP("a",e,t,n),vP("b",e,t,n))];case"Less":return[r.less(vP("a",e,t,n),vP("b",e,t,n))];case"LessEqual":return[r.lessEqual(vP("a",e,t,n),vP("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(vP("a",e,t,n),vP("b",e,t,n))];case"LogicalNot":return[r.logicalNot(vP("a",e,t,n))];case"LogicalOr":return[r.logicalOr(vP("a",e,t,n),vP("b",e,t,n))];case"Select":case"SelectV2":return[r.where(vP("condition",e,t,n),vP("a",e,t,n),vP("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(vP("a",e,t,n),vP("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(vP("a",e,t,n),vP("b",e,t,n),vP("transposeA",e,t,n),vP("transposeB",e,t,n))];case"Einsum":return[r.einsum(vP("equation",e,t,n),...vP("tensors",e,t,n))];case"Transpose":return[r.transpose(vP("x",e,t,n),vP("perm",e,t,n))];case"_FusedMatMul":let[a,s]=vP("fusedOps",e,t,n),i="prelu"===s,o=vP("numArgs",e,t,n),l=vP("leakyreluAlpha",e,t,n);if("biasadd"===a){if(i&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,h]=vP("args",e,t,n);return[r.fused.matMul({a:vP("a",e,t,n),b:vP("b",e,t,n),transposeA:vP("transposeA",e,t,n),transposeB:vP("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(vP("a",e,t,n),vP("numLower",e,t,n),vP("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(vP("x",e,t,n),vP("axis",e,t,n),vP("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(vP("x",e,t,n),vP("mean",e,t,n),vP("variance",e,t,n),vP("offset",e,t,n),vP("scale",e,t,n),vP("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(vP("x",e,t,n),vP("radius",e,t,n),vP("bias",e,t,n),vP("alpha",e,t,n),vP("beta",e,t,n))];case"Softmax":return[r.softmax(vP("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(vP("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"ragged":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(vP("paramsNestedSplits",e,t,n),vP("paramsDenseValues",e,t,n),vP("indices",e,t,n),vP("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(vP("starts",e,t,n),vP("limits",e,t,n),vP("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(vP("shape",e,t,n),vP("values",e,t,n),vP("defaultValue",e,t,n),vP("rowPartitionTensors",e,t,n),vP("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Max":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.max(vP("x",e,t,n),a,s)]}case"Mean":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.mean(vP("x",e,t,n),a,s)]}case"Min":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.min(vP("x",e,t,n),a,s)]}case"Sum":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.sum(vP("x",e,t,n),a,s)]}case"All":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.all(vP("x",e,t,n),a,s)]}case"Any":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.any(vP("x",e,t,n),a,s)]}case"ArgMax":{let a=vP("axis",e,t,n);return[r.argMax(vP("x",e,t,n),a)]}case"ArgMin":{let a=vP("axis",e,t,n);return[r.argMin(vP("x",e,t,n),a)]}case"Prod":{let a=vP("axis",e,t,n),s=vP("keepDims",e,t,n);return[r.prod(vP("x",e,t,n),a,s)]}case"Cumprod":{let a=vP("axis",e,t,n),s=vP("exclusive",e,t,n),i=vP("reverse",e,t,n);return[r.cumprod(vP("x",e,t,n),a,s,i)]}case"Cumsum":{let a=vP("axis",e,t,n),s=vP("exclusive",e,t,n),i=vP("reverse",e,t,n);return[r.cumsum(vP("x",e,t,n),a,s,i)]}case"Bincount":let a=vP("x",e,t,n),s=vP("weights",e,t,n),i=vP("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let a=vP("x",e,t,n),s=vP("weights",e,t,n),i=vP("size",e,t,n),o=vP("binaryOutput",e,t,n);return[r.denseBincount(a,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=vP("n",e,t,n),s=vP("axis",e,t,n),i=vP("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=vP("x",e,t,n),s=vP("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=vP("axis",e,t,n),s=vP("batchDims",e,t,n),i=vP("x",e,t,n),o=vP("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=vP("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);let i=vP("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=vP("axis",e,t,n),s=vP("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=vP("begin",e,t,n),s=vP("size",e,t,n);return[r.slice(vP("x",e,t,n),a,s)]}case"StridedSlice":{let a=vP("begin",e,t,n),s=vP("end",e,t,n),i=vP("strides",e,t,n),o=vP("beginMask",e,t,n),l=vP("endMask",e,t,n),u=vP("ellipsisMask",e,t,n),h=vP("newAxisMask",e,t,n),p=vP("shrinkAxisMask",e,t,n),d=vP("x",e,t,n);return[r.stridedSlice(d,a,s,i,o,l,u,h,p)]}case"Pack":return sA(()=>{let a=vP("axis",e,t,n),s=vP("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,l=s.map(e=>{let t=r4.arraysEqual(e.shape,i);if(!t&&!r4.arraysEqual(r.squeeze(e).shape,o))throw Error("the input tensors shape does not match");return t?e:r.reshape(e,i)});return[r.stack(l,a)]});case"Unpack":{let a=vP("axis",e,t,n),s=vP("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=vP("reps",e,t,n);return[r.tile(vP("x",e,t,n),a)]}case"Split":case"SplitV":{let a=vP("axis",e,t,n),s=vP("numOrSizeSplits",e,t,n),i=vP("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=vP("indices",e,t,n),s=vP("values",e,t,n),i=vP("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=vP("x",e,t,n),s=vP("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=vP("sparseIndices",e,t,n),s=vP("outputShape",e,t,n),i=vP("sparseValues",e,t,n),o=vP("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=vP("indices",e,t,n),s=vP("values",e,t,n),i=vP("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(vP("indices",e,t,n),vP("values",e,t,n),vP("denseShape",e,t,n),vP("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(vP("inputIndices",e,t,n),vP("inputShape",e,t,n),vP("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(vP("data",e,t,n),vP("indices",e,t,n),vP("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(vP("data",e,t,n),vP("indices",e,t,n),vP("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"FFT":return[r.fft(vP("x",e,t,n))];case"IFFT":return[r.ifft(vP("x",e,t,n))];case"RFFT":return[r.rfft(vP("x",e,t,n))];case"IRFFT":return[r.irfft(vP("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(vP("input",e,t,n),vP("pattern",e,t,n),vP("rewrite",e,t,n),vP("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(vP("data",e,t,n),vP("dataSplits",e,t,n),vP("separator",e,t,n),vP("nGramWidths",e,t,n),vP("leftPad",e,t,n),vP("rightPad",e,t,n),vP("padWidth",e,t,n),vP("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(vP("input",e,t,n),vP("delimiter",e,t,n),vP("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(vP("input",e,t,n),vP("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return a(()=>((e,t,n,r=kL)=>{switch(e.op){case"Cast":return[r.cast(vP("x",e,t,n),vP("dtype",e,t,n))];case"ExpandDims":{let a=vP("axis",e,t,n);return[r.expandDims(vP("x",e,t,n),a)]}case"Squeeze":{let a=vP("axis",e,t,n);return[r.squeeze(vP("x",e,t,n),a)]}case"Reshape":return[r.reshape(vP("x",e,t,n),vP("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(vP("x",e,t,n),vP("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(vP("x",e,t,n),vP("padding",e,t,n),vP("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(vP("x",e,t,n),vP("padding",e,t,n),vP("constantValue",e,t,n))];case"SpaceToBatchND":{let a=vP("blockShape",e,t,n),s=vP("paddings",e,t,n);return[r.spaceToBatchND(vP("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=vP("blockShape",e,t,n),s=vP("crops",e,t,n);return[r.batchToSpaceND(vP("x",e,t,n),a,s)]}case"DepthToSpace":{let a=vP("blockSize",e,t,n),s=vP("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(vP("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(vP("x",e,t,n),vP("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(vP("s0",e,t,n),vP("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return kX(e,t,n,r);case"custom":let s=vM[e.op];if(s&&s.customExecutor)return s.customExecutor(new kM(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return r4.isPromise(s)?s.then(e=>[].concat(e)):[].concat(s)}class kY{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function kJ(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=new Set(Object.keys(e).map(e=>vG(e)[0])),h=new Set((r=r||[]).map(e=>vG(e.name)[0])),p=[...t];for(;p.length>0;){var d,c;let e=p.pop();if((k3(e)||(d=e,k1.has(d.op))||(c=e,k2.has(c.op)))&&null==i&&(o=(i=e).children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),!(null!=n[e.name]||u.has(e.name)||h.has(e.name))){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),p.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}class kQ extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}let k0=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),k1=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),k2=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function k3(e){return k0.has(e.op)}class k4{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new k4(e.functions[t],this)})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=kJ(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}let i=function(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(e=>vG(e)[0]).map(t=>e.nodes[t]),s=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let l=o([...a,...e.weights,...s]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),h=new Map(u.map(e=>[e.name,e])),p={};for(let e of u)for(let t of(p[e.name]=p[e.name]||0,e.children))i(t)||(p[t.name]=1/0),p[t.name]=(p[t.name]||0)+1;let d=Object.entries(p).filter(([,e])=>0===e).map(([e])=>e),c=[...d];for(;d.length>0;){let e=d.pop();for(let t of h.get(e).children.filter(i))0==--p[t.name]&&(c.push(t.name),d.push(t.name))}let f=function(e,t){let n=new Map(e.map(e=>[e.name,e])),r=t.map(e=>e.name),a=new Set(r);for(;r.length>0;){let e=r.pop();for(let t of n.get(e).children)!n.has(t.name)||a.has(t.name)||(a.add(t.name),r.push(t.name))}return e.filter(e=>a.has(e.name))}(c.map(e=>h.get(e)),l);return function(e,t){let n=new Map(e.map((e,t)=>[e.name,t])),r=new Set(t.map(e=>e.name)),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map(e=>e.name)),i=e=>s.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(i)){if(!n.has(e.name))throw new kQ(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new kQ(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!n.has(e.name))throw new kQ(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new kQ(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,r=e.map((e,t)=>k3(e)?n:t),a=e=>{let n=r[t.get(e.name)];return null==n?-1:n},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),r[t])),i=new Map;for(let t=0;t<e.length;++t){let r=s[t];if(r===n)continue;let a=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(a)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return sF(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let n=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(e=>this.graph.nodes[vG(e)[0]]),a=t.map(e=>vG(e)[0]),s=new Set(a),i=a.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);let o=this.getCompilationKey(r,i),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=eP.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let u={},h={};return sA(()=>{let n=new kY(this.weightMap,u,h,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,s]=vG(t,n),i=[];i[s]=e[t],r[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))});let a=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(let e of i){if(r[e.name])continue;let t=kZ(e,r,n,this._resourceManager);if(r4.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map(e=>vB(e,r,n))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,n,r,a,s,i){if(!(k3(t)||s.has(e))){for(let r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(let e of t.inputs){if(k3(e))continue;let t=vW(e.name,n,r);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){if(!k3(e)&&null!=s){for(let e of s)if(!(k3(e)||a.has(e.name)))for(let a of vW(e.name,t,n))!a||a.kept||r.has(a.id)||a.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=eP.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new kY(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>vB(e,i,s)),l=new Set([...o.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(i).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(e,t,n){let r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(e=>this.graph.nodes[vG(e)[0]]),i=n.map(e=>vG(e)[0]),o=new Set(i),l=i.map(e=>this.graph.nodes[e]);0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:h,dynamicNode:p,syncInputs:d}=kJ(e,l,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,r]=vG(t),a=[];a[r]=e[t],f[n]=a});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(s,c,t,f,y,g,o,m,u);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(e=>!k3(e)&&!vB(e.name,f,t)).map(e=>e.name);if(b.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${h}]. ${e}`)}return f}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let h="";if("Enter"===e.node.op&&vP("isConstant",e.node,r,n)&&([h]=vU(e.node.name,n)),null==r[e.node.name]){let p=kZ(e.node,r,n,this._resourceManager);h||([h]=vU(e.node.name,n));let d=n.currentContext;r4.isPromise(p)?u.push(p.then(u=>(r[h]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u))):(r[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{let[i]=vU(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!vB(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!vB(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=vG(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);r4.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&r4.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=null==(n=null==(t=this._signature)?void 0:t.inputs)?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=vG(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let r=null==(n=null==(t=this._signature)?void 0:t.outputs)?void 0:n[e];return null!=r?r.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=vG(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}class k6{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class k5{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=oH){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new k6}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return r4.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await iE(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new k4(kv.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=kv.Instance.transformGraph(e.modelInitializer);this.initializer=new k4(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof aZ?[e]:e).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof aZ)&&!Array.isArray(e)){let n=null==(t=this.signature)?void 0:t.inputs;if(null!=n)for(let t in n){let r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((t,n)=>{var a,s,i;let o=null==(i=null==(s=null==(a=this.signature)?void 0:a.inputs)?void 0:s[n])?void 0:i.resourceId;return null!=o?t[n]=this.resourceIdToCapturedInput[o]:t[n]=e[r++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&sR(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function k8(e,t={},n=oH){var r;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((r=e).endsWith("/")||(r+="/"),e=`${r}model.json?tfjs-format=file`);let a=new k5(e,t,n);return await a.load(),a}function k7(e){let t;if(null==e)throw Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");if(e instanceof Array){let[n,r]=e;if(!n)throw Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw Error("Model JSON is missing 'weightsManifest'");let a=oH.getWeightSpecs(n.weightsManifest),s=oH.getModelArtifactsForJSONSync(n,a,r);t=oH.fromMemorySync(s)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=oH.fromMemorySync(e);else throw Error("Unknown model format");let n=new k5(t);return n.load(),n}let k9="4.22.0";var Ie={};function It(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw Error("A deep map function may not return both a value and recurse=true.");if(!a.recurse)return n.set(e,a.value),a.value;if(Ia(e)){let a=Array.isArray(e)?[]:{};for(let s in r.add(e),e){let i=It(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw Error(`Can't recurse into non-iterable type: ${e}`)}function In(e){return null===e?null:Ia(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Ir(e,t){let n=new Map;for(let r of(It(e,t,n),Array.from(n.keys()))){let e=n.get(r);if(r4.isPromise(e)){let t=await e;n.set(r,t)}}return It(e,t,n)}function Ia(e){let t=!1;if(eP.get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=O("foUwZ");t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof aZ)&&!(e instanceof Promise)&&!t)}function Is(e){return e instanceof aZ?{value:e.clone(),recurse:!1}:Ia(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}u(Ie,"array",()=>IC),u(Ie,"Dataset",()=>IN),u(Ie,"zip",()=>I$),u(Ie,"CSVDataset",()=>IM),u(Ie,"TextLineDataset",()=>IA),u(Ie,"csv",()=>IJ),u(Ie,"func",()=>IQ),u(Ie,"generator",()=>I0),u(Ie,"microphone",()=>I2),u(Ie,"webcam",()=>I1),u(Ie,"FileDataSource",()=>IZ),u(Ie,"URLDataSource",()=>IY),u(Ie,"version_data",()=>I3);class Ii{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw RangeError("Can't create ring buffer of capacity < 1.");this.data=Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Io extends Ii{constructor(){super(Io.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Io.INITIAL_CAPACITY=32;class Il{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)n=e((t=await this.next()).value)}handleErrors(e){return new Iy(this,e)}filter(e){return new Im(this,e)}map(e){return new Ig(this,e)}mapAsync(e){return new Ib(this,e)}serialMapAsync(e){return new Ib(this,e).serial()}flatmap(e){return new Iw(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new If(this,e,t)}columnMajorBatch(e,t=!0,n=In){return this.rowMajorBatch(e,t).map(e=>(function(e,t=In){return function e(t,n,r=new Set){let a=t[0];if(r.has(a))throw Error("Circular references are not supported.");let s=n(t);if(s.recurse&&null!==s.value)throw Error("A deep zip function may not return both a value and recurse=true.");if(!s.recurse)return s.value;if(Ia(a)){let s=Array.isArray(a)?[]:{};for(let i in r.add(a),a){let a=e(t.map(e=>e[i]),n,r);s[i]=a}return r.delete(a),s}throw Error(`Can't recurse into non-iterable type: ${a}`)}(e,t)})(e,n))}concatenate(e,t){return new Iv(new Iu([this,e]),t)}take(e){return e<0||null==e?this:new Ic(this,e)}skip(e){return e<0||null==e?this:new Id(this,e)}prefetch(e){return new II(this,e)}shuffle(e,t){return new IS(this,e,t)}serial(){return new Ip(this)}}class Iu extends Il{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:It(e,Is),done:!1}}}class Ih extends Il{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Ip extends Il{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class Id extends Il{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;sR(e.value)}return this.upstream.next()}}class Ic extends Il{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class If extends Il{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done){if(this.enableSmallLastBatch&&e.length>0)return{value:e,done:!1};return{value:null,done:!0}}e.push(t.value)}return{value:e,done:!1}}}class Im extends Il{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;sR(e.value)}}}class Ig extends Il{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=aQ.getTensorsInContainer(e.value),n=this.transform(e.value),r=aQ.getTensorsInContainer(n);for(let e of t)aQ.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Iy extends Il{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Ib extends Il{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=aQ.getTensorsInContainer(e.value),n=await this.transform(e.value),r=aQ.getTensorsInContainer(n);for(let e of t)aQ.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Ix extends Il{constructor(){super(),this.outputQueue=new Io,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Iw extends Ix{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=aQ.getTensorsInContainer(e.value),n=this.transform(e.value),r=aQ.getTensorsInContainer(n);for(let e of(this.outputQueue.pushAll(n),t))aQ.isTensorInList(e,r)||e.dispose();return!0}}class Iv extends Il{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(T||(T={}));class Ik extends Il{constructor(e,t=T.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,r=await Ir(this.iterators,function(e){return e instanceof Il?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case T.FAIL:throw Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case T.SHORTEST:return{value:null,done:!0};case T.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class II extends Il{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ii(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class IS extends II{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=pg.alea(n||r4.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class IN{constructor(){this.size=null}batch(e,t=!0){let n=this;return r4.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`),IT(async()=>(await n.iterator()).columnMajorBatch(e,t,IE),this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(e){let t=this;return IT(async()=>(await t.iterator()).concatenate(await e.iterator()),this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}filter(e){let t=this;return IT(async()=>(await t.iterator()).filter(t=>sA(()=>e(t))),this.size===1/0?1/0:null)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return IT(async()=>(await t.iterator()).map(t=>sA(()=>e(t))),this.size)}mapAsync(e){let t=this;return IT(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return IT(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this;return IT(async()=>new Iv(new Ih(async()=>({value:await t.iterator(),done:!1})).take(e),void 0),null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null)}skip(e){let t=this;return IT(async()=>(await t.iterator()).skip(e),null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}shuffle(e,t,n=!0){if(null==e||e<0)if(null==this.size)throw RangeError("`Dataset.shuffle()` requires bufferSize to be specified.");else throw RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=pg.alea(t||r4.now().toString());return IT(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){let t=this;return IT(async()=>(await t.iterator()).take(e),null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}async toArray(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function IT(e,t=null){return new class extends IN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function IC(e){return IT(async()=>new Iu(e),e.length)}function I$(e){let t;if(!Ia(e))throw Error("The argument to zip() must be an object or array.");if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return IT(async()=>(function(e,t=T.FAIL){return new Ik(e,t)})(await Ir(e,e=>{if(e instanceof IN)return{value:e.iterator(),recurse:!1};if(Ia(e))return{value:null,recurse:!0};throw Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),T.SHORTEST),t)}function IE(e){var t,n;if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof aZ||r4.isTypedArray(t)?{value:function(e){if(0===e.length)throw Error("Can't make a batch of zero elements.");return e[0]instanceof aZ?p8(e):sb(e)}(e),recurse:!1}:{value:null,recurse:!0}}IN.MAX_BUFFER_SIZE=1e4;class IA extends IN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}let IR=Symbol("out"),IF=Symbol("field"),ID=Symbol("quote"),IO=Symbol("quoteafterquote"),I_=Symbol("quoteinquote");class IM extends IN{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(this.fullColumnNames||e)this.fullColumnNames&&e&&r4.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").");else throw Error("Column names must be provided if there is no header line.");this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(r4.assert(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(!this.hasHeader)return null;{let e=await this.base.iterator(),t=await e.next();if(t.done)throw Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new IA(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(r4.assert(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else if(i&&(i.required||i.isLabel))throw Error(`Required column ${s} is empty in this line: ${e}`);else l=void 0;else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return+("1"===e||"true"===e.toLowerCase())}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=IR;for(let t=0;t<a;t++)switch(s){case IR:switch(e.charAt(t)){case'"':r=t+1,s=ID;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=IR;break;default:s=IF,r=t}break;case IF:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=IR,r=t+1);break;case ID:'"'===e.charAt(t)&&(s=IO);break;case IO:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=IR,r=t+1;break;case'"':s=ID;break;default:s=I_}break;case I_:'"'===e.charAt(t)&&(s=ID)}if(s===IO?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class IL extends Il{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!eP.get("IS_BROWSER"))throw Error("microphone API is only supported in browser environment.");let t=new IL(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){let e,t;if(this.isClosed)return{value:null,done:!0};let n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){!this.isClosed&&(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(r4.sizeFromShape(t));return n.set(e,n.length-e.length),sb(n,t)}}class Iz extends Il{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=dt([0],"int32"),this.webcamConfig.centerCrop){let e=this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2;this.cropBox=dn([r,n,t+r,n+e],[1,4])}else this.cropBox=dn([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!eP.get("IS_BROWSER"))throw Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new Iz(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&r4.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){let e;if(this.isClosed)return{value:null,done:!0};try{e=lp.fromPixels(this.webcamVideoElement)}catch(e){throw Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!!this.webcamConfig.resizeWidth&&!!this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return sA(()=>{let t,n=hk(on(e,"float32"),0),r=(t=cR.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear")).shape;return uI(t,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw Error("Can not convert infinite video stream to array.")}}class IP{}class IB extends Il{split(e){return new IW(this,e)}}class IW extends IB{constructor(e,t){super(),this.upstream=e,this.impl=new IU(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class IU extends Ix{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);for(let e of(t[0]=this.carryover+t[0],t.slice(0,-1)))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class IV extends Il{decodeUTF8(){return new IG(this)}}class IG extends IB{constructor(e){super(),this.upstream=e,this.impl=new IH(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class IH extends Ix{constructor(e){if(super(),this.upstream=e,eP.get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=O("foUwZ");this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=eP.get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(sJ.from(e.buffer)),this.outputQueue.push(t),!0)}}class Ij extends IV{constructor(e,t={}){super(),this.file=e,this.options=t,r4.assert(e instanceof Uint8Array||!!eP.get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};let e=new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(Error("Aborted")),r.onerror=e=>t(Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}async function Iq(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=IK(e));let s=await (n||r4.fetch)(r,a);if(s.ok)return new Ij(new Uint8Array(await s.arrayBuffer()),t);throw Error(s.statusText)}let IK=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function IX(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class IZ extends IP{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(IX(this.input)&&eP.get("IS_NODE")){let e=O("foUwZ");this.input=e.readFileSync(this.input.slice(7))}return new Ij(this.input,this.options)}}class IY extends IP{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return IX(this.url)?new IZ(this.url,this.fileOptions).iterator():Iq(this.url,this.fileOptions)}}function IJ(e,t={}){return new IM(new IY(e),t)}function IQ(e){let t=new Ih(e);return IT(async()=>t)}function I0(e){return IT(async()=>{let t=await e();return new Ih(()=>t.next())})}async function I1(e,t){return Iz.create(e,t)}async function I2(e){return IL.create(e)}let I3="4.22.0";var I4={},I6={};function I5(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r4.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}u(I6,"MathBackendCPU",()=>I7),u(I6,"version_cpu",()=>NA),u(I6,"shared",()=>I9);let I8=fH.whereImpl;class I7 extends P{nextDataId(){return I7.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new z(this,sr)}write(e,t,n){this.firstUse&&(this.firstUse=!1,eP.get("IS_NODE")&&cB.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&r4.isString(n[0])){let a=n.map(e=>r4.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return cB.mergeRealAndImagArrays(e,t)}return r4.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>r4.decodeString(e));return ot(e.shape,e.dtype,n)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return ot(e.shape,e.dtype,t)}makeOutput(e,t,n){return sr.makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=r4.now();return e(),{kernelMs:r4.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){I5([e],"where");let t=this.readSync(e.dataId);return I8(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}I7.nextDataId=0;var I9={};function Se(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function St(e){return(t,n,r,a,s)=>{let i=cB.assertAndGetBroadcastShape(t,n),o=i.length,l=r4.computeStrides(i),u=r4.sizeFromShape(i),h=r4.getTypedArrayFromDType(s,u),p=t.length,d=n.length,c=r4.computeStrides(t),f=r4.computeStrides(n),m=cB.getBroadcastDims(t,i),g=cB.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){let n=r4.indexToLoc(t,o,l),s=n.slice(-p);m.forEach(e=>s[e]=0);let i=r4.locToIndex(s,p,c),u=n.slice(-d);g.forEach(e=>u[e]=0);let y=r4.locToIndex(u,d,f);h[t]=e(r[i],a[y])}return[h,i]}}function Sn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}function Sr(e,t,n="float32"){if("complex64"===n)return Sn({inputs:{real:Sr(e,t,"float32"),imag:Sr(e,t,"float32")},backend:e});let r=r4.makeZerosTypedArray(r4.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Sa(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Ss(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function Si(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){let r=r4.toTypedArray([0],n),[a,s]=St((e,t)=>+(e!==t))(t,[],e,r,"bool");return[s,"bool",a]}throw Error(`Error in Cast: failed to cast ${n} to ${r}`)}function So(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Sa({inputs:{x:a},backend:n});let e=Sr(n,a.shape,a.dtype),t=So({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Sn({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=Ss({inputs:{input:a},backend:n}),t=So({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!r4.hasEncodingLoss(a.dtype,s)){let e=Sa({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let[i,o,l]=Si(n.data.get(a.dataId).values,a.shape,a.dtype,s);return n.makeTensorInfo(i,o,l)}function Sl(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n;I5([s,i],e);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values,u="string"===s.dtype?cB.fromUint8ToStringArray(o):o,h="string"===s.dtype?cB.fromUint8ToStringArray(l):l,p=r||s.dtype,[d,c]=t(s.shape,i.shape,u,h,p);return a.makeTensorInfo(c,p,d)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e;if("complex64"===s.dtype||"complex64"===i.dtype){let e=So({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),t=a.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=a.data.get(r.dataId).values,u=a.data.get(o.dataId).values,h=So({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),p=a.data.get(h.dataId),d=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=a.data.get(d.dataId).values,m=a.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=a.makeTensorInfo(b,"float32",g),w=a.makeTensorInfo(b,"float32",y),v=Sn({inputs:{real:x,imag:w},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),v}{let e=a.data.get(s.dataId).values,n=a.data.get(i.dataId).values,o=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,o);return a.makeTensorInfo(u,o,l)}}}function Su(e){return(t,n,r,a,s,i)=>{let o=cB.assertAndGetBroadcastShape(t,n),l=r4.sizeFromShape(o),u=o.length,h=r4.computeStrides(o),p=r4.getTypedArrayFromDType("float32",l),d=r4.getTypedArrayFromDType("float32",l),c=cB.getBroadcastDims(t,o),f=cB.getBroadcastDims(n,o),m=cB.mergeRealAndImagArrays(r,a),g=cB.mergeRealAndImagArrays(s,i),y=t.length,b=r4.computeStrides(t),x=n.length,w=r4.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<p.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){let n=r4.indexToLoc(t,u,h),r=n.slice(-y);c.forEach(e=>r[e]=0);let a=r4.locToIndex(r,y,b),s=n.slice(-x);f.forEach(e=>s[e]=0);let i=r4.locToIndex(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[t]=o.real,d[t]=o.imag}return[p,d,o]}}u(I9,"simpleAbsImpl",()=>Se),u(I9,"addImpl",()=>Sh),u(I9,"bincountImpl",()=>Sd),u(I9,"bincountReduceImpl",()=>Sc),u(I9,"bitwiseAndImpl",()=>Sf),u(I9,"castImpl",()=>Si),u(I9,"ceilImpl",()=>Sx),u(I9,"concatImpl",()=>Sv),u(I9,"equalImpl",()=>Sk),u(I9,"expImpl",()=>SS),u(I9,"expm1Impl",()=>ST),u(I9,"floorImpl",()=>S$),u(I9,"floorDivImpl",()=>SA),u(I9,"gatherNdImpl",()=>SF),u(I9,"gatherV2Impl",()=>SD),u(I9,"greaterImpl",()=>SO),u(I9,"greaterEqualImpl",()=>SM),u(I9,"lessImpl",()=>Sz),u(I9,"lessEqualImpl",()=>SB),u(I9,"linSpaceImpl",()=>SU),u(I9,"logImpl",()=>SV),u(I9,"maxImpl",()=>SH),u(I9,"maximumImpl",()=>Sj),u(I9,"minimumImpl",()=>SK),u(I9,"multiplyImpl",()=>SZ),u(I9,"negImpl",()=>SJ),u(I9,"notEqualImpl",()=>SQ),u(I9,"prodImpl",()=>S3),u(I9,"raggedGatherImpl",()=>S6),u(I9,"raggedRangeImpl",()=>S5),u(I9,"raggedTensorToTensorImpl",()=>Nt),u(I9,"rangeImpl",()=>Nn),u(I9,"rsqrtImpl",()=>Nr),u(I9,"scatterImpl",()=>Ns),u(I9,"sigmoidImpl",()=>Ni),u(I9,"sliceImpl",()=>Nl),u(I9,"sparseFillEmptyRowsImpl",()=>Nh),u(I9,"sparseReshapeImpl",()=>Np),u(I9,"sparseSegmentReductionImpl",()=>Nd),u(I9,"sqrtImpl",()=>Nc),u(I9,"squaredDifferenceImpl",()=>Nm),u(I9,"staticRegexReplaceImpl",()=>Ny),u(I9,"stridedSliceImpl",()=>Nx),u(I9,"stringNGramsImpl",()=>Nv),u(I9,"stringSplitImpl",()=>Nk),u(I9,"stringToHashBucketFastImpl",()=>NI),u(I9,"subImpl",()=>NS),u(I9,"tileImpl",()=>NT),u(I9,"topKImpl",()=>N$),u(I9,"transposeImpl",()=>S1),u(I9,"uniqueImpl",()=>NE);let Sh=St((e,t)=>e+t),Sp=Sl(e4,Sh,Su((e,t,n,r)=>({real:e+n,imag:t+r})));function Sd(e,t,n,r,a){let s=r4.sizeFromShape(r),i=r4.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw Error("Input x must be non-negative!");r>=a||(s>0?i[r]+=t[n]:i[r]+=1)}return i}function Sc(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=ot([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}let Sf=St((e,t)=>e&t),Sm=Sl(td,Sf);function Sg(e){return(t,n,r)=>{let a=r4.getArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function Sy(e,t,n){return Sb(e,Sg(t),n)}function Sb(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let i,{x:o}=r;I5(o,e);let l=s.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(l))throw Error("String tensor's value was not an instance of Array");i=cB.fromUint8ToStringArray(l)}else i=l;let u=n||o.dtype,h=t(i,u,a);return s.makeTensorInfo(o.shape,u,h)}}let Sx=Sg(e=>Math.ceil(e)),Sw=Sb(tg,Sx);function Sv(e,t,n,r){let a=r4.getArrayFromDType(n,r4.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{let n=r4.sizeFromShape(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{let s="string"===n?cB.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}let Sk=St((e,t)=>+(e===t)),SI=Sl(tq,Sk,null,"bool"),SS=Sg(e=>Math.exp(e)),SN=Sb(tK,SS,"float32"),ST=Sg(e=>Math.expm1(e)),SC=Sb(tZ,ST),S$=Sg(e=>Math.floor(e)),SE=Sb(t0,S$),SA=St((e,t)=>Math.floor(e/t)),SR=Sl(t1,SA,null,"int32");function SF(e,t,n,r,a,s,i,o,l){let u=ot([r,s],n);for(let n=0;n<r;n++){let r=[],h=0;for(let t=0;t<a;t++){let s=e[n*a+t];h+=s*i[t],r.push(s)}if(h<0||h>=l/s)throw Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(h*s+e))}return u}function SD(e,t,n){let r=ot(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}let SO=St((e,t)=>+(e>t)),S_=Sl(t6,SO,null,"bool"),SM=St((e,t)=>+(e>=t)),SL=Sl(t5,SM,null,"bool"),Sz=St((e,t)=>+(e<t)),SP=Sl(na,Sz,null,"bool"),SB=St((e,t)=>+(e<=t)),SW=Sl(ns,SB,null,"bool");function SU(e,t,n){let r=(t-e)/(n-1),a=r4.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}let SV=Sg(e=>Math.log(e)),SG=Sb(no,SV);function SH(e,t,n,r){let a=r4.getTypedArrayFromDType(r,r4.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}let Sj=St((e,t)=>Math.max(e,t)),Sq=Sl(nx,Sj),SK=St((e,t)=>Math.min(e,t)),SX=Sl(nC,SK),SZ=St((e,t)=>e*t),SY=Sl(nR,SZ,Su((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function SJ(e,t,n){return SZ([],t,r4.createScalarValue(-1,n),e,n)}let SQ=St((e,t)=>+(e!==t)),S0=Sl(nD,SQ,null,"bool");function S1(e,t,n,r,a){let s=t.length,i=r4.sizeFromShape(t),o=r4.computeStrides(t),l=r4.computeStrides(a),u=r4.getTypedArrayFromDType(n,r4.sizeFromShape(a));for(let t=0;t<i;++t){let n=r4.indexToLoc(t,s,o),a=Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[r4.locToIndex(a,s,l)]=e[t]}return u}function S2(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;I5(a,"transpose");let i=Array(a.shape.length);for(let e=0;e<i.length;e++)i[e]=a.shape[s[e]];let o=S1(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(o,i,a.dtype),shape:i,dtype:a.dtype}}function S3(e,t,n,r){let[a,s]=cB.computeOutAndReduceShapes(e,r),i=a1(t,"int32"),o=r4.makeZerosTypedArray(r4.sizeFromShape(a),i),l=r4.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}function S4(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function S6(e,t,n,r,a,s,i,o){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");let l=t[0][0]-1;if(s.forEach((e,t)=>{if(e<0||e>=l){let n=r4.indexToLoc(t,i.length,r4.computeStrides(i)).join(",");throw Error(`indices[${n}] = ${e} is not in [0, ${l})`)}}),0===r.length)throw Error("params.rank must be nonzero");let{outSplits:u,valueSlices:h,numValues:p}=function(e,t,n,r){let a=[],s=0,i=Array(t.length-1+n.length).fill(null).map(()=>[0]);for(let e=0;e<n.length;++e){let t=n[e],a=e===n.length-1?r:n[e+1].length;if(0===t.length)throw Error("Ragged splits may not be empty");if(t[0]<0)throw Error("Ragged splits must be non-negative");if(t[t.length-1]>a)throw Error("Ragged splits must not point past values");for(let e=1;e<t.length;++e)if(t[e-1]>t[e])throw Error("Ragged splits must be sorted in ascending order")}let o=1;for(let e=0;e<t.length-1;++e){o*=t[e];let n=t[e+1];for(let t=1;t<o+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){let r=n[e],a=e+t.length-1;if(a>=0){let e=i[a],t=e[e.length-1]-r[o];for(let e=o;e<l;++e)i[a].push(r[e+1]+t)}o=r[o],l=r[l]}l!==o&&(a.push([o,l]),s+=l-o)}return{outSplits:i,valueSlices:a,numValues:s}}(s,i,e,r[0]),d=function(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=r4.getArrayFromDType("int32",r);t.push(a),e[n].forEach((e,t)=>a[t]=e)}return t}(u),c=function(e,t,n,r,a){let s=t.slice();s[0]=a;let i=r4.getArrayFromDType(n,r4.sizeFromShape(s)),o=e.length,l=0===o?0:o/t[0];return!function(e,t,n,r,a,s){let i=S4(t,2)[1],o=S4(s,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[l*o+t]=e[n*i+t];++l}}(e,t,r,l,i,s),[i,s]}(n,r,a,h,p);return[d,c[0],c[1]]}function S5(e,t,n,r,a,s,i){if(t.length>1)throw Error("starts must be a scalar or vector");if(a.length>1)throw Error("limits must be a scalar or vector");if(i.length>1)throw Error("deltas must be a scalar or vector");let o=0===t.length,l=0===a.length,u=0===i.length,h=[];o||h.push(t[0]),l||h.push(a[0]),u||h.push(i[0]);for(let e=1;e<h.length;++e)if(h[e]!==h[e-1])throw Error("starts, limits, and deltas must have the same shape");let p=0===h.length?1:h[0],d=r4.getArrayFromDType("int32",p+1);d[0]=0;for(let t=0;t<p;++t){let n,a=o?e[0]:e[t],i=l?r[0]:r[t],h=u?s[0]:s[t];if(0===h)throw Error("Requires delta != 0");if(h>0&&i<a||h<0&&i>a)n=0;else if((n=Math.ceil(Math.abs((i-a)/h)))>0x7fffffff)throw Error("Requires ((limit - start) / delta) <= 2147483647");d[t+1]=d[t]+n}let c=d[p],f=r4.getArrayFromDType(n,c),m=0;for(let t=0;t<p;++t){let n=d[t+1]-d[t],r=o?e[0]:e[t],a=u?s[0]:s[t];for(let e=0;e<n;++e)f[m++]=r,r+=a}return[d,f]}var S8=cB.RowPartitionType;class S7{constructor(e,t,n,r,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=cB.getRowPartitionTypesHelper(u),this.raggedRank=cB.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===S8.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===S8.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case S8.VALUE_ROWIDS:return S7.getMaxWidthValueRowID(t);case S8.ROW_SPLITS:return S7.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${S8[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){let t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Ne(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;cB.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=cB.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let e=0;e<r;++e,s+=t)a.push(s);for(let t=r;t<e;++t)a.push(-1);return r4.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(r,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i<r?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case S8.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case S8.ROW_SPLITS:if(a.length-1>t.length)throw Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw Error(`Unsupported partition type: ${S8[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case S8.FIRST_DIM_SIZE:return e[0];case S8.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case S8.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${S8[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let r=Ne(t,!1),a=r4.getArrayFromDType(this.valuesDType,r4.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;let a=this.values,s=r.slice();s=s.slice(e+1);let i=r4.sizeFromShape(s),o=t.length,l=this.defaultValue;if(l.length!==i&&1!==l.length){let e=this.defaultValueShape;sA(()=>{l=uP(uI(l,e),s).dataSync()})}let u=0,h=0,p=0;for(let e=0;e<=o;++e){let r=e<o?t[e]:-1;if(r===p){++p;continue}if(h<p){let e=a.subarray(u*i);S9(n.subarray(h*i),e,(p-h)*i)}if(e>=o&&(r=Math.floor(n.length/i)),r>p)if(1===this.defaultValue.length)n.subarray(p*i,r*i).fill(this.defaultValue[0]),p=r;else for(;r>p;)S9(n.slice(p*i),l,i),++p;r<0?(u=e+1,h=p):(u=e,p=(h=p)+1)}}}function S9(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Ne(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw Error(`Dimension ${r} must be >= 0`);if(r<-1)throw Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function Nt(e,t,n,r,a,s,i,o,l,u){return new S7(e,t,n,r,a,s,i,o,l,u).compute()}function Nn(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return r4.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),l=r4.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let e=1;e<l.length;e++)l[e]=l[e-1]+n;return l}let Nr=Sg(e=>1/Math.sqrt(e)),Na=Sb(n5,Nr);function Ns(e,t,n,r,a,s,i,o,l,u){let h=e.values,p=t.values;if(0===r)return ot(n,t.dtype);let d=l instanceof aq?l:ot([r/a,a],t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?d.values[l*a+n]+=p[e*a+n]:d.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}let Ni=Sg(e=>1/(1+Math.exp(-e))),No=Sy(ri,e=>1/(1+Math.exp(-e)));function Nl(e,t,n,r,a){let s=lT.isSliceContinous(r,t,n),i=r4.sizeFromShape(n),o=r4.computeStrides(r);if(s){let n=lT.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l="string"===a?cB.fromUint8ToStringArray(e):e,u=ot(r,a,l),h=ot(n,a);for(let e=0;e<h.size;++e){let n=h.indexToLoc(e),r=n.map((e,n)=>e+t[n]);h.set(u.get(...r),...n)}return"string"===a?cB.fromStringArrayToUint8(h.values):h.values}function Nu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;I5(a,"slice");let[o,l]=lT.parseSliceParams(a,s,i);lT.assertParamsValid(a,o,l);let u=Nl(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}function Nh(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=Array(l),h=Array(o),p=t[1];if(0===l){if(0!==o)throw Error(cB.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[r4.getArrayFromDType(n,0),[0,p],r4.getArrayFromDType(a,0),u,h]}let d=!0,c=0,f=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p];if(n<0)throw Error(cB.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw Error(cB.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){for(let e=0;e<o;++e)h[e]=e;return[e,[o,p],r,u,h]}{let t=f[l-1],s=r4.getArrayFromDType(n,t*p),d=r4.getArrayFromDType(a,t),c=Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*p],a=c[n],i=(0===n?0:f[n-1])+a;c[n]++;for(let n=0;n<p;++n)s[i*p+n]=e[t*p+n];d[i]=r[t],h[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=i}return[s,[t,p],d,u,h]}}function Np(e,t,n,r,a){let s=r4.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,h=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==h)throw Error(cB.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,e));h=e,l.push(1)}else{if(t<0)throw Error(cB.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==h){if(u<=0)throw Error(cB.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw Error(cB.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=e}if(r4.sizeFromShape(l)!==s)throw Error(cB.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=r4.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function Nd(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],h=o>0?a[o-1]+1:0;if(h<0)throw Error(cB.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=h;let d=p.reduce((e,t)=>e*t,1),c=r4.getArrayFromDType(n,d);if(0===o)return h>0&&c.fill(i),[c,p];if(h<=0)throw Error(cB.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[0];for(;;){let t=0;if(m<o){if(y===(t=a[m])){++m;continue}if(y>=t)throw Error(cB.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw Error(cB.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&c.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw Error(cB.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)c[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<h&&c.fill(i,g*u,h*u),[c,p]}let Nc=Sg(e=>Math.sqrt(e)),Nf=Sy(rl,e=>Math.sqrt(e)),Nm=St((e,t)=>{let n=e-t;return n*n}),Ng=Sl(rb,Nm),Ny=Sg((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),Nb=Sb(rw,Ny);function Nx(e,t,n,r){let a=ot(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}class Nw{constructor(e,t,n,r,a,s){this.separator=r4.encodeString(e),this.nGramWidths=t,this.leftPad=r4.encodeString(n),this.rightPad=r4.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o,l=this.getPadWidth(s),u=Math.max(0,l-i),h=Math.max(0,l-(a-(i+1))),p=s-(u+h),d=t+(u>0?0:i-l);o=0+u*this.leftPad.length;for(let t=0;t<p;++t)o+=e[d+t].length;o+=h*this.rightPad.length,o+=(u+h+p-1)*this.separator.length,n[r+i]=new Uint8Array(o);let c=n[r+i],f=0,m=e=>e.forEach(e=>c[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<p-1;++t)m(e[d+t]),m(this.separator);if(p>0){m(e[d+p-1]);for(let e=0;e<h;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<h-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(!(r=r&&t[a]<=n))throw Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=r4.getArrayFromDType("int32",r);if(0===n||0===r){let e=Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach(s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l}),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth;this.createNGrams(e,r,i,a,1,o)}}return[i,s]}}function Nv(e,t,n,r,a,s,i,o){return new Nw(n,r,a,s,i,o).compute(e,t)}function Nk(e,t,n){let r=e.length,a=[],s=0,i=0,o=Array(r);for(let l=0;l<r;++l){let r=a.length;!function(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}n&&0===e.length||r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=r4.getArrayFromDType("int32",2*s),u=Array(s),h=[r,i],p=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*p]=e,l[2*p+1]=t,u[p]=a[p],++p;return[l,u,h]}function NI(e,t){let n=r4.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=r4.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}let NS=St((e,t)=>e-t),NN=Sl(rN,NS,Su((e,t,n,r)=>({real:e-n,imag:t-r})));function NT(e,t){let n=Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=ot(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}let NC=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function N$(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=r4.getTypedArrayFromDType(n,i*r),u=r4.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=Array(s.length);s.forEach((e,t)=>i[t]={value:e,index:t}),r<i.length&&(!function e(t,n,r=0,a=t.length-1){for(;a>r;){if(a-r>600){let s=a-r+1,i=n-r+1,o=Math.log(s),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(s-l)/s)*Math.sign(i-s/2),h=Math.max(r,Math.floor(n-i*l/s+u)),p=Math.min(a,Math.floor(n+(s-i)*l/s+u));e(t,n,h,p)}let s=t[n],i=r,o=a;for(r4.swap(t,r,n),NC(t[a],s)>0&&r4.swap(t,r,a);i<o;){for(r4.swap(t,i,o),i++,o--;0>NC(t[i],s);)i+=1;for(;NC(t[o],s)>0;)o-=1}0===NC(t[r],s)?r4.swap(t,r,o):(o+=1,r4.swap(t,o,a)),o<=n&&(r=o+1),n<=o&&(a=o-1)}}(i,r),i=i.slice(0,r)),a&&i.sort(NC);let h=t*r,p=l.subarray(h,h+r),d=u.subarray(h,h+r);for(let e=0;e<r;e++)p[e]=i[e].value,d[e]=i[e].index}let h=t.slice();return h[h.length-1]=r,[ot(h,n,l),ot(h,"int32",u)]}function NE(e,t,n,r){let a=r4.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i=new Map,o=new Int32Array(n[a]),l=new aq(s,r,e),u=[],h=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}let r=i.get(n);if(null!=r)o[t]=r;else{let e=i.size;i.set(n,e),o[t]=e,u.push(t)}}let p=s.slice();p[1]=i.size;let d=new aq(p,r);u.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(l.get(n,e,r),n,t,r)});let c=n.slice();return c[a]=p[1],{outputValues:d.values,outputShape:c,indices:o}}let NA="4.22.0";sB("cpu",()=>new I7,1);let NR=Sy(tG,e=>e>=0?e:Math.exp(e)-1);function NF(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;I5([a],"leakyRelu");let i=r4.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=r4.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}let ND=St((e,t)=>e<0?t*e:e);function NO(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;I5([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=ND(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}let N_=Sy(nY,e=>Math.max(0,e)),NM=Sy(n3,e=>Math.min(Math.max(0,e),6));function NL(e,t,n,r,a){if("linear"===n)return Sa({inputs:{x:t},backend:e});if("relu"===n)return N_({inputs:{x:t},backend:e});if("elu"===n)return NR({inputs:{x:t},backend:e});if("relu6"===n)return NM({inputs:{x:t},backend:e});if("prelu"===n)return NO({inputs:{x:t,alpha:r},backend:e});else if("leakyrelu"===n)return NF({inputs:{x:t},backend:e,attrs:{alpha:a}});else if("sigmoid"===n)return No({inputs:{x:t},backend:e});throw Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Nz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=r4.sizeFromShape(a.shape),o=r4.inferFromImplicitShape(s,i),l=r4.sizeFromShape(o);r4.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}function NP(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;I5([a,s],"matMul");let l=a.shape.length,u=s.shape.length,h=i?a.shape[l-2]:a.shape[l-1],p=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-1]:a.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=r4.sizeFromShape(f),y=r4.sizeFromShape(m),b=o_.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);r4.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=Nz({inputs:{x:a},backend:n,attrs:{shape:i?[g,h,d]:[g,d,h]}}),w=Nz({inputs:{x:s},backend:n,attrs:{shape:o?[y,c,p]:[y,p,c]}}),v=i?x.shape[1]:x.shape[2],k=i?x.shape[2]:x.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),N=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,C=r4.computeStrides(x.shape),$=r4.computeStrides(w.shape),[E,A,R]=i?[C[0],1,C[1]]:[C[0],C[1],1],[F,D,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],_=k*I,M=ot([S,k,I],x.dtype),L=M.values,z=n.blockSize;for(let e=0;e<S;e++){let t=e%g,n=e%y;for(let r=0;r<k;r+=z){let a=Math.min(r+z,k);for(let s=0;s<I;s+=z){let i=Math.min(s+z,I);for(let o=0;o<v;o+=z){let l=Math.min(o+z,v);for(let u=r;u<a;u++)for(let r=s;r<i;r++){let a=0;for(let e=o;e<l;e++)a+=N[t*E+u*A+e*R]*T[e*F+r*D+n*O];L[e*_+(u*I+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,M.dtype,M.values)}let NB=Sy(e2,e=>Math.acos(e)),NW=Sy(e3,e=>Math.acosh(e)),NU=Sy(te,e=>Math.asin(e)),NV=Sy(tt,e=>Math.asinh(e)),NG=Sy(tn,e=>Math.atan(e)),NH=Sl(ta,St((e,t)=>Math.atan2(e,t))),Nj=Sy(tr,e=>Math.atanh(e));function Nq(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,d=a.padInfo.top,c=a.padInfo.left,f="max"===s?-1/0:1/0,m=ot(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let w=y*i-d,v=Math.max(0,w),k=Math.min(a.inHeight,h+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){let i=n*o-c,h=Math.max(0,i),d=Math.min(a.inWidth,p+i),y=f,b=0,w=0;for(let n=v;n<k;n+=l){let a=m+n*r[1];for(let n=h;n<d;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function NK(e,t,n,r,a=!1,s=!1){let i=ot(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,c=r.padInfo.top,f=r.padInfo.left,m=ot(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=h;let x=Math.min(r.inWidth,d+p),w=-1/0,v=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=h){let l=o-p,u=m.get(e,n,o,t);u>w&&(w=u,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(v,e,n,o,t)}}return i}function NX(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,h=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterDepth,c=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?-1/0:1/0,x=ot(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){let N=v*i-m,T=N;for(;T<0;)T+=u;let C=Math.min(a.inDepth,d+N),$=n+v*k;for(let n=0;n<a.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=h;let m=Math.min(a.inHeight,c+i),v=$+n*I;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=p;let c=Math.min(a.inWidth,f+i),g=v+n*S,k=b,I=0,N=0;for(let n=T;n<C;n+=u){let a=x+n*r[1];for(let n=d;n<m;n+=h){let i=a+n*r[2];for(let n=o;n<c;n+=p){let a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/Math.max(N,1):k}}}}return x}let NZ=Sy(ty,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e);function NY(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}function NJ(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=r4.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);cB.assertParamsConsistent(i,s);let o=cB.computeOutShape(t.map(e=>e.shape),s);if(0===r4.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>r4.sizeFromShape(e.shape)>0);if(1===l.length)return Sa({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map(e=>Ss({inputs:{input:e},backend:n})),t=l.map(e=>NY({inputs:{input:e},backend:n})),r=NJ({inputs:e,backend:n,attrs:{axis:s}}),a=NJ({inputs:t,backend:n,attrs:{axis:s}}),i=Sn({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=l.map(e=>{let t=r4.sizeFromShape(e.shape.slice(s));return Nz({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=cB.computeOutShape(u.map(e=>e.shape),1);let p=1===u[0].shape[0],d=Sv(h,o,t[0].dtype,p),c=cB.computeOutShape(l.map(e=>e.shape),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}function NQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;I5([a,s],"conv2d");let p=cB.convertConv2DDataFormat(l),d=cB.computeConv2DInfo(a.shape,s.shape,i,u,o,h,!1,p),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,w=new aq(d.outShape,a.dtype),v=r4.computeStrides(a.shape),k=r4.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,D=w.values;for(let e=0;e<d.batchSize;++e){let t=e*I,n=e*C;for(let e=0;e<d.outHeight;++e){let r=n+e*$,a=e*d.strideHeight-b;for(let e=0;e<c;++e){let n=a+e*m;if(n<0||n>=d.inHeight)continue;let s=e*k[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){let t=r+e*E,n=e*d.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=d.inWidth)continue;let a=s+e*k[1],o=i+r*N,l=a;for(let e=0;e<d.inChannels;++e){let n=R[o+e*T];for(let e=0;e<d.outChannels;++e)D[t+e*A]+=n*F[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}let N0=Sy(tC,e=>Math.cos(e)),N1=Sy(t$,e=>Math.cosh(e));function N2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;I5([a,s],"depthwiseConv2DNative");let h=r4.computeStrides(a.shape),p=r4.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),r4.assert(cB.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let c=cB.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,v=c.outChannels/c.inChannels,k=new aq(c.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<c.batchSize;++e){let t=e*h[0],n=e*k.strides[0];for(let e=0;e<c.outHeight;++e){let r=n+e*k.strides[1],a=e*c.strideHeight-w;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=c.inHeight)continue;let s=e*p[0],i=t+n*h[1];for(let e=0;e<c.outWidth;++e){let t=r+e*k.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=c.inWidth)continue;let a=s+e*p[1],o=i+r*c.inChannels,l=t,u=a;for(let e=0;e<c.inChannels;++e){let t=I[o+e];for(let e=0;e<v;++e)N[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}function N3(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;I5(s,"sum");let l=(t="bool"===s.dtype?So({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):Sa({inputs:{x:s},backend:r})).shape.length,u=r4.parseAxisParam(i,t.shape),h=cB.getAxesPermutation(u,l),p=u,d=t;null!=h&&(d=S2({inputs:{x:t},backend:r,attrs:{perm:h}}),p=cB.getInnerMostAxes(p.length,l)),cB.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[c,f]=cB.computeOutAndReduceShapes(d.shape,p),m=Sr(r,c,cB.upcastType(d.dtype,"int32")),g=r4.sizeFromShape(f),y=r.data.get(m.dataId).values,b=r.data.get(d.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(o){let e=cB.expandShapeToKeepDim(m.shape,u),t=m;m=Nz({inputs:{x:m},backend:r,attrs:{shape:e}}),r.disposeIntermediateTensorInfo(t)}return r.disposeIntermediateTensorInfo(t),null!=h&&r.disposeIntermediateTensorInfo(d),m}let N4=cB.ERF_P,N6=cB.ERF_A1,N5=cB.ERF_A2,N8=cB.ERF_A3,N7=cB.ERF_A4,N9=cB.ERF_A5,Te=Sy(tj,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+N4*n);return t*(1-((((N9*r+N7)*r+N8)*r+N5)*r+N6)*r*Math.exp(-n*n))});function Tt(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(r4.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),Nz({inputs:{x:a},backend:n,attrs:{shape:o}})}let Tn=Sl(tU,St((e,t)=>e/t)),Tr={kernelName:tU,backendName:"cpu",kernelFunc:Tn};function Ta(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],h=r4.sizeFromShape(u),p=r4.getTypedArrayFromDType("float32",h),d=r4.getTypedArrayFromDType("float32",h);for(let e=0;e<a;e++){let r=Nu({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Nu({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Sn({inputs:{real:r,imag:a},backend:n}),{real:u,imag:h}=function(e,t,n){var r;let a=r4.sizeFromShape(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(((r=a)&r-1)==0){let r=function e(t,n,r,a,s){if(1===r)return{real:t,imag:n};let i=cB.mergeRealAndImagArrays(t,n),o=r/2,l=cB.complexWithEvenIndex(i),u=l.real,h=l.imag,p=[u.length],d=s.makeTensorInfo(p,"float32",u),c=s.makeTensorInfo(p,"float32",h),f=Sn({inputs:{real:d,imag:c},backend:s}),m=cB.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),w=s.makeTensorInfo(b,"float32",y),v=Sn({inputs:{real:x,imag:w},backend:s}),k=e(u,h,o,a,s),I=k.real,S=k.imag,N=[I.length],T=s.makeTensorInfo(N,"float32",I),C=s.makeTensorInfo(N,"float32",S),$=Sn({inputs:{real:T,imag:C},backend:s}),E=e(g,y,o,a,s),A=E.real,R=E.imag,F=[A.length],D=s.makeTensorInfo(F,"float32",A),O=s.makeTensorInfo(F,"float32",R),_=Sn({inputs:{real:D,imag:O},backend:s}),M=cB.exponents(r,a),L=[M.real.length],z=s.makeTensorInfo(L,"float32",M.real),P=s.makeTensorInfo(L,"float32",M.imag),B=Sn({inputs:{real:z,imag:P},backend:s}),W=SY({inputs:{a:B,b:_},backend:s}),U=Sp({inputs:{a:$,b:W},backend:s}),V=NN({inputs:{a:$,b:W},backend:s}),G=Ss({inputs:{input:U},backend:s}),H=Ss({inputs:{input:V},backend:s}),j=NY({inputs:{input:U},backend:s}),q=NY({inputs:{input:V},backend:s}),K=NJ({inputs:[G,H],backend:s,attrs:{axis:0}}),X=NJ({inputs:[j,q],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Y=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Y}}(i,o,a,t,n),s=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(s,"float32",r.real),t=n.makeTensorInfo(s,"float32",r.imag),i=n.makeTensorInfo([],"float32",r4.createScalarValue(a,"float32")),o=Sa({inputs:{x:i},backend:n}),l=Tr.kernelFunc({inputs:{a:e,b:i},backend:n}),u=Tr.kernelFunc({inputs:{a:t,b:o},backend:n}),h=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:p}}return r}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=cB.exponent(a*r,t,n),l=cB.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),cB.assignToTypedArray(r,s,i,a)}return r}(cB.mergeRealAndImagArrays(i,o),a,t);return cB.splitRealAndImagArrays(e)}}(i,t,n),c=cB.mergeRealAndImagArrays(u,h);for(let t=0;t<s;t++){let n=cB.getComplexWithIndex(c,t);p[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",d),m=Sn({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function Ts(e){var t,n;let{backend:r,attrs:a}=e,{shape:s,value:i,dtype:o}=a,l=o||r4.inferDtype(i),u=r4.getArrayFromDType(l,r4.sizeFromShape(s));return t=u,n=i,t.fill(n),r.makeTensorInfo(s,l,u)}let Ti=Sy(ne,e=>+!!Number.isFinite(e),"bool"),To=Sy(nt,e=>+(Math.abs(e)===1/0),"bool"),Tl=Sy(nn,e=>+!!Number.isNaN(e),"bool"),Tu=Sy(nl,e=>Math.log1p(e)),Th=Sl(nu,St((e,t)=>e&&t),null,"bool"),Tp=Sy(nh,e=>+!e,"bool"),Td=Sl(np,St((e,t)=>e||t),null,"bool");function Tc(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape,l=o.length,u=r4.parseAxisParam(s,o),h=u,p=cB.getAxesPermutation(h,l),d=n.data.get(a.dataId).values;if(null!=p){let e=Array(l);for(let t=0;t<e.length;t++)e[t]=o[p[t]];d=S1(d,o,a.dtype,p,e),h=cB.getInnerMostAxes(h.length,l),o=e}I5(a,"max"),cB.assertAxesAreInnerMostDims("max",h,l);let[c,f]=cB.computeOutAndReduceShapes(o,h),m=SH(d,r4.sizeFromShape(f),c,a.dtype),g=n.write(m,c,a.dtype),y=c;return i&&(y=cB.expandShapeToKeepDim(c,u)),{dataId:g,shape:y,dtype:a.dtype}}let Tf=Sl(nE,St((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}));function Tm(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=r4.parseAxisParam([o],a.shape),u=Tc({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=cB.expandShapeToKeepDim(u.shape,l),p=Nz({inputs:{x:u},backend:n,attrs:{shape:h}}),d=NN({inputs:{a:a,b:p},backend:n}),c=SN({inputs:{x:d},backend:n}),f=N3({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=Nz({inputs:{x:f},backend:n,attrs:{shape:h}}),g=Tn({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}let Tg=fH.nonMaxSuppressionV3Impl,Ty=fH.nonMaxSuppressionV4Impl,Tb=fH.nonMaxSuppressionV5Impl;function Tx(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==r.dtype)return Ts({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}});{let e=Ss({inputs:{input:r},backend:n}),t=Tx({inputs:{x:e},backend:n}),a=NY({inputs:{input:r},backend:n}),s=Tx({inputs:{x:a},backend:n}),i=Sn({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}}function Tw(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Tt({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{r4.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),r4.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=NJ({inputs:t.map(e=>{let t=Tt({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}let Tv={kernelName:nB,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;I5(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=n.data.get(a.dataId).values,h=r4.sizeFromShape(a.shape),p=a.shape.length,d=r4.computeStrides(a.shape),c=r4.sizeFromShape(o),f=o.length,m=r4.computeStrides(o),g=r4.getTypedArrayFromDType(a.dtype,c);0!==i&&g.fill(i);for(let e=0;e<h;e++){let t=r4.indexToLoc(e,p,d).map((e,t)=>e+l[t]);g[r4.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},Tk=Sl(nU,St((e,t)=>Math.pow(e,t))),TI=Sy(nZ,e=>1/e),TS=Sy(n6,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),TN=cB.SELU_SCALEALPHA,TT=cB.SELU_SCALE,TC=Sy(rt,e=>e>=0?TT*e:TN*(Math.exp(e)-1)),T$=Sy(rs,e=>e<0?-1:+(e>0)),TE=Sy(rr,e=>Math.sin(e)),TA=Sy(ra,e=>Math.sinh(e)),TR=Math.log(11920928955078125e-23)+2,TF=Sy(ro,e=>{let t=Math.exp(e);return e<TR?t:e>-TR?e:Math.log(1+t)}),TD=Sy(rL,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),TO=Sy(rT,e=>Math.tan(e)),T_=Sy(rC,e=>Math.tanh(e));function TM(e,t,n){switch(n){case"reflect":var r,a,s,i,o=e,l=t;let u=o;if(u<0)if(l<=1)u=0;else{let e=2*l;u<e&&(u=e*Math.trunc(-u/e)+u),u=u<-l?u+e:-u-1}else if(u>l-1)if(l<=1)u=0;else{let e=2*l;(u-=e*Math.trunc(u/e))>=l&&(u=e-u-1)}return r4.clamp(0,u,l-1);case"wrap":let h;return r=e,a=t,(h=r)<0?a<=1?h=0:h+=a*(Math.trunc(-h/(a-1))+1):h>a-1&&(a<=1?h=0:h-=a*Math.trunc(h/(a-1))),r4.clamp(0,h,a-1);case"nearest":return s=e,i=t,r4.clamp(0,s,i-1);default:return e}}function TL(e,t,n,r,a,s,i,o,l,u,h){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:h}for(let e of[{kernelName:rB,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:h}=a,{transposeA:p,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];for(let e of(t=NP({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:d},backend:s}),u&&(n=Sp({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(r=NL(s,t,c,h,f),m.push(t),t=r),m))s.disposeIntermediateTensorInfo(e);return t}},{kernelName:e1,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;I5(t,"abs");let r=new Float32Array(r4.sizeFromShape(t.shape));return r=Se(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},{kernelName:e2,backendName:"cpu",kernelFunc:NB},{kernelName:e3,backendName:"cpu",kernelFunc:NW},{kernelName:e4,backendName:"cpu",kernelFunc:Sp},{kernelName:e6,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e;I5(t,"addN");let r=t.map(e=>n.data.get(e.dataId).values),a=ot(t[0].shape,t[0].dtype),s=a.values;for(let e=0;e<t.length;e++){let t=r[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:e5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;I5(a,"all");let o=r4.parseAxisParam(s,a.shape),l=o,u=cB.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=S2({inputs:{x:a},backend:n,attrs:{perm:u}}),l=cB.getInnerMostAxes(l.length,a.shape.length)),cB.assertAxesAreInnerMostDims("all",l,h.shape.length);let[p,d]=cB.computeOutAndReduceShapes(h.shape,l),c=r4.sizeFromShape(d),f=r4.makeZerosTypedArray(r4.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=Nz({inputs:{x:g},backend:n,attrs:{shape:cB.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:e8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;I5(a,"any");let o=r4.parseAxisParam(s,a.shape),l=o,u=cB.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=S2({inputs:{x:a},backend:n,attrs:{perm:u}}),l=cB.getInnerMostAxes(l.length,a.shape.length)),cB.assertAxesAreInnerMostDims("any",l,h.shape.length);let[p,d]=cB.computeOutAndReduceShapes(h.shape,l),c=r4.sizeFromShape(d),f=r4.makeZerosTypedArray(r4.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=Nz({inputs:{x:g},backend:n,attrs:{shape:cB.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:e7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;I5(a,"argMax");let i=r4.parseAxisParam(s,a.shape),o=cB.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=S2({inputs:{x:a},backend:n,attrs:{perm:o}})),i=cB.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],cB.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[h,p]=cB.computeOutAndReduceShapes(l.shape,i),d=r4.sizeFromShape(h),c=r4.makeZerosTypedArray(d,"int32"),f=r4.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}c[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}},{kernelName:e9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;I5(a,"argMin");let i=r4.parseAxisParam(s,a.shape),o=cB.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=S2({inputs:{x:a},backend:n,attrs:{perm:o}})),i=cB.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],cB.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[h,p]=cB.computeOutAndReduceShapes(l.shape,i),d=r4.sizeFromShape(h),c=r4.makeZerosTypedArray(d,"int32"),f=r4.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}c[e]=r}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",c)}},{kernelName:te,backendName:"cpu",kernelFunc:NU},{kernelName:tt,backendName:"cpu",kernelFunc:NV},{kernelName:tn,backendName:"cpu",kernelFunc:NG},{kernelName:ta,backendName:"cpu",kernelFunc:NH},{kernelName:tr,backendName:"cpu",kernelFunc:Nj},{kernelName:ts,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n;I5(s,"avgPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;r4.assert(cB.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=cB.computePool2DInfo(s.shape,i,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&r4.arraysEqual(h.inShape,h.outShape))t=Sa({inputs:{x:s},backend:r});else{let e=r.data.get(s.dataId).values,n=r4.computeStrides(s.shape),a=Nq(e,s.shape,s.dtype,n,h,"avg");t=r.makeTensorInfo(h.outShape,s.dtype,a.values)}return t}},{kernelName:to,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;I5(a,"avgPool3d");let h=cB.computePool3DInfo(a.shape,s,i,1,o,l,u),p=NX(n.data.get(a.dataId).values,a.shape,a.dtype,r4.computeStrides(a.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},{kernelName:tl,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;I5([a,s],"avgPool3DGrad");let h=cB.computePool3DInfo(s.shape,i,o,1,l,u),p=h.strideDepth,d=h.strideHeight,c=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,y=h.dilationDepth,b=h.dilationHeight,x=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=w-1-h.padInfo.front,S=k-1-h.padInfo.left,N=v-1-h.padInfo.top,T=ot(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-I,i=r-N,o=a-S,l=0;for(let n=0;n<w;n+=y){let r=(s+n)/p;if(!(r<0)&&!(r>=h.outDepth)&&Math.floor(r)===r)for(let n=0;n<v;n+=b){let a=(i+n)/d;if(!(a<0)&&!(a>=h.outHeight)&&Math.floor(a)===a)for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=h.outWidth||Math.floor(s)!==s||(l+=$.get(e,r,a,s,t))}}}T.set(l*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},{kernelName:ti,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t;I5([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=r,u=cB.computePool2DInfo(s.shape,i,o,1,l),h=u.strideHeight,p=u.strideWidth,d=u.filterHeight,c=u.filterWidth,f=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterHeight,y=u.effectiveFilterWidth,b=y-1-u.padInfo.left,x=g-1-u.padInfo.top,w=ot(s.shape,"float32"),v=1/(d*c),k=n.data.get(a.dataId).values,I=ot(a.shape,"float32",k);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let n=0;n<u.inHeight;++n)for(let r=0;r<u.inWidth;++r){let a=n-x,s=r-b,i=0;for(let n=0;n<g;n+=f){let r=(a+n)/h;if(!(r<0)&&!(r>=u.outHeight)&&Math.floor(r)===r)for(let n=0;n<y;n+=m){let a=(s+n)/p;a<0||a>=u.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}w.set(i*v,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},{kernelName:tu,backendName:"cpu",kernelFunc:NP},{kernelName:t2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;r4.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r4.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r4.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),I5([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let h=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(h.length),g=f.length,y=c.length,b=d.length,x=p.length,w=0,v=0,k=0,I=0;for(let e=0;e<h.length;++e)m[e]=f[w++]+(h[e]-p[v++])*c[k++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},{kernelName:th,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;I5([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=cB.getReshaped(a.shape,s,o),u=cB.getPermuted(l.length,s.length),h=cB.getReshapedPermuted(a.shape,s,o),p=cB.getSliceBeginCoords(i,s.length),d=cB.getSliceSize(h,i,s.length),c=Nz({inputs:{x:a},backend:n,attrs:{shape:l}}),f=S2({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Nz({inputs:{x:f},backend:n,attrs:{shape:h}}),g=Nu({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},{kernelName:tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Sd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},{kernelName:td,backendName:"cpu",kernelFunc:Sm},{kernelName:tf,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=cB.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:tm,backendName:"cpu",kernelFunc:So},{kernelName:tg,backendName:"cpu",kernelFunc:Sw},{kernelName:ty,backendName:"cpu",kernelFunc:NZ},{kernelName:tb,backendName:"cpu",kernelFunc:Sn},{kernelName:tx,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(r4.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}},{kernelName:tw,backendName:"cpu",kernelFunc:NJ},{kernelName:tv,backendName:"cpu",kernelFunc:NQ},{kernelName:tk,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;I5([a,s],"conv2dBackpropFilter");let p=cB.convertConv2DDataFormat(l),d=cB.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new aq(d.filterShape,"float32"),x=d.padInfo.left,w=d.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new aq(a.shape,a.dtype,v),S=new aq(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((w-e)/c)),n=Math.min(d.outHeight,(d.inHeight+w-e)/c);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=t;h<n;++h){let t=e+h*c-w;for(let e=a;e<s;++e){let n=r+e*f-x;y?l+=I.get(u,t,n,i)*S.get(u,h,e,o):l+=I.get(u,i,t,n)*S.get(u,o,h,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:tI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;I5([a,s],"conv2dBackpropInput");let p=r4.computeStrides(s.shape),d=r4.computeStrides(a.shape),c=cB.convertConv2DDataFormat(u),f=cB.computeConv2DInfo(i,s.shape,o,1,l,h,!1,c),m=new aq(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:R,strideWidth:F}=f;c=f.dataFormat;let D=I-1-f.padInfo.top,O=S-1-f.padInfo.left,_="channelsLast"===c,M=m.strides[0],L=_?m.strides[1]:m.strides[2],z=_?m.strides[2]:1,P=_?1:m.strides[1],B=d[0],W=_?d[1]:d[2],U=_?d[2]:1,V=_?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){let r=n-D,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(I+r)/R);for(let i=0;i<C;++i){let o=i-O,l=Math.max(0,Math.ceil(o/F)),u=Math.min(A,(S+o)/F),h=0;for(let n=a;n<s;++n){let a=n*R-r;for(let r=l;r<u;++r){let s=r*F-o,i=B*e+W*n+U*r,l=x*(I-1-a)+w*(S-1-s)+v*t;for(let e=0;e<$;++e)h+=y[i+V*e]*b[l+e]}}g[M*e+L*n+z*i+P*t]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},{kernelName:tS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;I5([a,s],"conv3d");let u=cB.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new aq(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=r4.computeStrides(a.shape),N=r4.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*S[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*w.strides[1],a=e*u.strideDepth-y;for(let e=0;e<h;++e){let n=a+e*c;if(n<0||n>=u.inDepth)continue;let s=e*N[0],i=t+n*S[1];for(let e=0;e<u.outHeight;++e){let t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*N[1],o=i+r*S[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*N[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},{kernelName:tN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;I5([a,s],"conv3dBackpropFilterV2");let u=r4.computeStrides(a.shape),h=r4.computeStrides(s.shape),p=cB.computeConv3DInfo(a.shape,l,i,1,o),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new aq(p.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,$]=h,E=n.data.get(a.dataId).values,[A,R,F,D]=u,O=p.padInfo.front,_=p.padInfo.left,M=p.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(p.outDepth,(p.inDepth+O-e)/d),r=e*w;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((M-a)/c)),i=Math.min(p.outHeight,(p.inHeight+M-a)/c),o=a*v+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((_-r)/f)),u=Math.min(p.outWidth,(p.inWidth+_-r)/f),h=r*k+o;for(let o=0;o<p.inChannels;++o){let m=o*I+h;for(let h=0;h<p.outChannels;++h){let g=0;for(let m=0;m<p.batchSize;++m){let p=m*A,y=m*N;for(let m=t;m<n;++m){let t=(e+m*d-O)*R+p,n=m*T+y;for(let e=s;e<i;++e){let s=(a+e*c-M)*F+t,i=e*C+n;for(let e=l;e<u;++e){let t=(r+e*f-_)*D+s,n=e*$+i;g+=E[t+o]*S[n+h]}}}}x[m+h]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},{kernelName:tT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;I5([a],"conv3dBackpropInputV2");let u=r4.computeStrides(a.shape),h=r4.computeStrides(s.shape),p=cB.computeConv3DInfo(l,s.shape,o,1,i),d=new aq(p.inShape,"float32"),c=d.values,[f,m,g,y]=d.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(s.dataId).values,[S,N,T,C]=h,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:F,inDepth:D,inHeight:O,inWidth:_,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=p,V=E-1-p.padInfo.front,G=A-1-p.padInfo.top,H=R-1-p.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){let r=n-V,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<O;++i){let o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let h=0;h<_;++h){let p=h-H,d=Math.max(0,Math.ceil(p/U)),$=Math.min(P,(R+p)/U),F=0;for(let n=a;n<s;++n){let a=n*B-r;for(let r=l;r<u;++r){let s=r*W-o;for(let i=d;i<$;++i){let o=i*U-p,l=x*e+w*n+v*r+k*i,u=S*(E-1-a)+N*(A-1-s)+T*(R-1-o)+C*t;for(let e=0;e<M;++e)F+=b[l+e]*I[u+e]}}}c[f*e+m*n+g*i+y*h+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},{kernelName:tC,backendName:"cpu",kernelFunc:N0},{kernelName:t$,backendName:"cpu",kernelFunc:N1},{kernelName:tR,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[h,p,d,c]=a.shape,f=s.shape[0],[m,g]=o,y=ot([f,m,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=r4.computeStrides(a.shape),k=r4.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=h)continue;let o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let h=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(h<0||h>p-1){for(let n=0;n<g;n++)for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}if("bilinear"===l){let n=Math.floor(h),a=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){let h=g>1?r*(d-1)+l*f:.5*(r+s)*(d-1);if(h<0||h>d-1){for(let n=0;n<c;n++){let r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}let p=Math.floor(h),m=Math.ceil(h),b=h-p;for(let r=0;r<c;r++){let s=r+p*v[2]+n*v[1]+i*v[0],u=w[s],h=w[s=r+m*v[2]+n*v[1]+i*v[0]],d=w[s=r+p*v[2]+a*v[1]+i*v[0]],c=w[s=r+m*v[2]+a*v[1]+i*v[0]],f=u+(h-u)*b,g=d+(c-d)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=f+(g-f)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(d-1)+n*f:.5*(r+s)*(d-1);if(a<0||a>d-1){for(let r=0;r<c;r++){let a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(h);for(let r=0;r<c;r++){let a=r+o*v[2]+l*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},{kernelName:tE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;I5(a,"cumprod");let l=cB.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=S2({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=cB.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=a1(u.dtype,"int32"),d=r4.makeOnesTypedArray(r4.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let r=m(e,t-1);d[n]=i?c[r]*d[r]:c[n]*d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=S2({inputs:{x:g},backend:n,attrs:{perm:cB.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:tA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;I5(a,"cumsum");let l=cB.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=S2({inputs:{x:a},backend:n,attrs:{perm:l}}));let h=cB.getInnerMostAxes(1,a.shape.length)[0];if(h!==u.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);let p=a1(u.dtype,"int32"),d=r4.makeZerosTypedArray(r4.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let r=m(e,t-1);d[n]=i?c[r]+d[r]:c[n]+d[r]}}let g=n.makeTensorInfo(u.shape,p,d);if(null!=l){let e=S2({inputs:{x:g},backend:n,attrs:{perm:cB.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},{kernelName:tF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=Sd(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=Sc(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},{kernelName:tD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;r4.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],h=a.shape[3],p=l*s,d=u*s,c=h/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<d;++t){let a=Math.floor(t/s),i=t%s,o=(r*s+i)*c;for(let t=0;t<c;++t){let r=t+o+h*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,d,c],a.dtype,m)}},{kernelName:tO,backendName:"cpu",kernelFunc:N2},{kernelName:t_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;I5([a,s],"depthwiseConv2dNativeBackpropFilter");let p=cB.computeConv2DInfo(a.shape,h,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new aq(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,v=new aq(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new aq(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(p.outHeight,(p.inHeight+b-e)/d);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/c)),s=Math.min(p.outWidth,(p.inWidth+y-r)/c);for(let i=0;i<p.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<p.batchSize;++l)for(let h=t;h<n;++h){let t=e+h*d-b;for(let e=a;e<s;++e){let n=r+e*c-y;u+=v.get(l,t,n,o)*I.get(l,h,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},{kernelName:tM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;I5([a,s],"depthwiseConv2DNativeBackpropInput");let p=r4.computeStrides(a.shape),d=r4.computeStrides(s.shape),c=cB.computeConv2DInfo(h,s.shape,i,o,l,u,!0),f=new aq(c.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=d,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:O,outWidth:_,strideHeight:M,strideWidth:L}=c,z=$-1-c.padInfo.top,P=E-1-c.padInfo.left,B=D/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){let r=n-z,a=Math.max(0,Math.ceil(r/M)),s=Math.min(O,($+r)/M);for(let i=0;i<F;++i){let o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(_,(E+o)/L),h=0;for(let n=a;n<s;++n){let a=n*M-r;for(let r=l;r<u;++r){let s=r*L-o,i=w*e+v*n+k*r,l=S*($-1-a)+N*(E-1-s)+T*t;for(let e=0;e<B;++e)h+=x[i+(t*B+e)]*I[l+e]}}m[g*e+y*n+b*i+t]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},{kernelName:tL,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=r4.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=ot([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},{kernelName:tz,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t.data.get(r.dataId).values,u=r.shape.length,h=t.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=cB.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=r4.sizeFromShape(N),C=N.length,$=r4.getArrayFromDType(r.dtype,T);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*x-b.top;for(let s=0;s<y;++s){let i=s*w-b.left;for(let o=0;o<m;++o){let d=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){let s=n+t*I;if(s>=0&&s<c)for(let n=0;n<k;++n){let c=i+n*S;if(c>=0&&c<f){let i=r4.locToIndex([e,s,c,o],u,r4.computeStrides(r.shape)),f=r4.locToIndex([t,n,o],p,r4.computeStrides(a.shape)),m=l[i]+h[f];m>d&&(d=m)}}}$[r4.locToIndex([e,t,s,o],C,r4.computeStrides(N))]=d}}}return{dataId:t.write(r4.toTypedArray($,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},{kernelName:tB,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=r4.toNestedArray(r.shape,t.data.get(r.dataId).values),h=r4.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:c,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=cB.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);r4.assert(s.rank===S.length,()=>`Error in ${tB}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);let N=r4.toNestedArray(S,t.data.get(s.dataId).values),T=r4.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<m;++t){let n=t*b-y.top;for(let r=0;r<g;++r){let a=r*x-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*k;if(r>=0&&r<d)for(let n=0;n<v;++n){let p=a+n*I;if(p>=0&&p<c){let a=u[e][r][p][s]+h[t][n][s];a>i&&(i=a,o=t,l=n)}}}T[o][l][s]+=N[e][t][r][s]}}}return{dataId:t.write(r4.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:tP,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=r4.toNestedArray(r.shape,t.data.get(r.dataId).values),h=r4.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:c,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=cB.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);r4.assert(s.rank===S.length,()=>`Error in ${tP}, dy must have the same rank as output ${S.length}, but got ${s.rank}`);let N=r4.toNestedArray(S,t.data.get(s.dataId).values),T=r4.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<m;++t){let n=t*b-y.top;for(let r=0;r<g;++r){let a=r*x-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*k;if(r>=0&&r<d)for(let n=0;n<v;++n){let p=a+n*I;if(p>=0&&p<c){let a=u[e][r][p][s]+h[t][n][s];a>i&&(i=a,o=r,l=p)}}}T[e][o][l][s]+=N[e][t][r][s]}}}return{dataId:t.write(r4.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:tW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,h=(null==o?void 0:o.contextType)||"2d";if("2d"!==h)throw Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=s.getContext(h,(null==o?void 0:o.contextAttributes)||{});if(null==p)throw Error(`Could not get the context with ${h} type.`);let[d,c]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(c*d*4);for(let e=0;e<d*c;++e){let t=[0,0,0,255*u];for(let n=0;n<f;n++){let r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}let n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}s.width=c,s.height=d;let b=new ImageData(y,c,d);return p.putImageData(b,0,0),a}},{kernelName:tV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,{allDims:s,summedDims:i,idDims:o}=cB.decodeEinsumEquation(a,t.length);cB.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=cB.getEinsumComputePath(i,o),h=u.length,p=null,d=s.length,c=[];for(let e=0;e<h;++e){for(let r of u[e]){let e,{permutationIndices:a,expandDims:s}=cB.getEinsumPermutation(d,o[r]);cB.isIdentityPermutation(a)?e=t[r]:(e=S2({inputs:{x:t[r]},backend:n,attrs:{perm:a}}),c.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);r4.arraysEqual(e.shape,i)||(e=Nz({inputs:{x:e},backend:n,attrs:{shape:i}}),c.push(e)),null===p?p=e:(p=SY({inputs:{a:e,b:p},backend:n}),c.push(p))}e<h-1&&(l[e]>=0&&(p=N3({inputs:{x:p},backend:n,attrs:{axis:l[e]-(s.length-d),keepDims:!1}}),c.push(p)),d--)}for(let e of c)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},{kernelName:tG,backendName:"cpu",kernelFunc:NR},{kernelName:tH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;I5([r,a],"eluGrad");let s=new Float32Array(r4.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];t>=0?s[e]=o[e]:s[e]=o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},{kernelName:tq,backendName:"cpu",kernelFunc:SI},{kernelName:tj,backendName:"cpu",kernelFunc:Te},{kernelName:tK,backendName:"cpu",kernelFunc:SN},{kernelName:tX,backendName:"cpu",kernelFunc:Tt},{kernelName:tZ,backendName:"cpu",kernelFunc:SC},{kernelName:tY,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=r4.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Nz({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Ta(i,!1,n),l=Nz({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},{kernelName:tJ,backendName:"cpu",kernelFunc:Ts},{kernelName:tQ,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=r4.getTypedArrayFromDType(r.dtype,r4.sizeFromShape(r.shape)),[s,i,o,l]=r.shape,u=n.data.get(r.dataId).values;for(let e=0;e<s;e++){let t=e*o*i*l;for(let e=0;e<i;e++){let n=o*l*e;for(let e=0;e<o;e++){let r=e*l;for(let s=0;s<l;s++){let i=Math.round(o-e-1),h=t+n+r+s,p=u[h];i>=0&&i<o&&(p=u[t+n+i*l+s]),a[h]=p}}}}return{dataId:n.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:t0,backendName:"cpu",kernelFunc:SE},{kernelName:t1,backendName:"cpu",kernelFunc:SR},{kernelName:rW,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=NQ({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===h&&1===i.shape.length&&1!==i.shape[0]){let e=Nz({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Sp({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Sp({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===h&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=Nz({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=NL(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=NL(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}},{kernelName:rU,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=r,m=N2({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:p,dimRoundingMode:d}});if(i){let e=m;m=Sp({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=NL(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}},{kernelName:t4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=r4.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,h,p]=cB.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let d=SF(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,h,p,r.shape,s);return n.makeTensorInfo(l,r.dtype,d.values)}},{kernelName:t3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;I5([a,s],"gatherV2");let l=r4.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,h=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];r4.assert(t<=h-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`)}let p=o;null==o&&(p=0);let d=r4.sizeFromShape(s.shape),c=cB.segment_util.collectGatherOpShapeInfo(a,s,l,p),f=Nz({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Nz({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],y=n.bufferSync(m),b=SD(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,b.dtype,b.values)}},{kernelName:t6,backendName:"cpu",kernelFunc:S_},{kernelName:t5,backendName:"cpu",kernelFunc:SL},{kernelName:t8,backendName:"cpu",kernelFunc:Sa},{kernelName:t7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=r4.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Nz({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Ta(i,!0,n),l=Nz({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},{kernelName:t9,backendName:"cpu",kernelFunc:NY},{kernelName:ne,backendName:"cpu",kernelFunc:Ti},{kernelName:nt,backendName:"cpu",kernelFunc:To},{kernelName:nn,backendName:"cpu",kernelFunc:Tl},{kernelName:nr,backendName:"cpu",kernelFunc:NF},{kernelName:na,backendName:"cpu",kernelFunc:SP},{kernelName:ns,backendName:"cpu",kernelFunc:SW},{kernelName:ni,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=SU(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},{kernelName:no,backendName:"cpu",kernelFunc:SG},{kernelName:nl,backendName:"cpu",kernelFunc:Tu},{kernelName:nu,backendName:"cpu",kernelFunc:Th},{kernelName:nh,backendName:"cpu",kernelFunc:Tp},{kernelName:np,backendName:"cpu",kernelFunc:Td},{kernelName:nm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;I5(a,"LRN");let u=a.shape[3],h=u-1,p=n.data.get(a.dataId).values,d=r4.sizeFromShape(a.shape),c=new Float32Array(d);for(let e=0;e<d;e++){let t=function(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,h),a=0;for(;n<=r;n++){let e=p[n];a+=e*e}return a}(e),n=p[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(a.shape,a.dtype,c)}},{kernelName:ng,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r;I5(i,"LRNGrad");let p=r4.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p);for(let e=0;e<p;e++){let t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*h*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}},{kernelName:nb,backendName:"cpu",kernelFunc:Tc},{kernelName:nx,backendName:"cpu",kernelFunc:Sq},{kernelName:nw,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n;I5(s,"maxPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;r4.assert(cB.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let h=cB.computePool2DInfo(s.shape,i,o,1,l,u);if(1===h.filterWidth&&1===h.filterHeight&&r4.arraysEqual(h.inShape,h.outShape))t=Sa({inputs:{x:s},backend:r});else{let e=r.data.get(s.dataId).values,n=r4.computeStrides(s.shape),a=Nq(e,s.shape,s.dtype,n,h,"max");t=r.makeTensorInfo(h.outShape,s.dtype,a.values)}return t}},{kernelName:nk,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;I5(a,"maxPool3d");let h=cB.computePool3DInfo(a.shape,s,i,1,o,l,u),p=NX(n.data.get(a.dataId).values,a.shape,a.dtype,r4.computeStrides(a.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},{kernelName:nI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;I5([a,s],"maxPool3DGrad");let h=cB.computePool3DInfo(s.shape,i,o,1,l,u),p=function(e,t){let n=ot(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-d,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){let u=r*a-c,d=u;for(;d<0;)d+=o;let v=Math.min(t.inHeight,h+u);for(let a=0;a<t.outWidth;++a){let c=a*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,p+c),S=-1/0,N=-1;for(let t=x;t<w;t+=i){let n=t-b;for(let r=d;r<v;r+=o){let a=r-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*h*p+a*h+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),h),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterDepth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=b-1-h.padInfo.front,k=w-1-h.padInfo.left,I=x-1-h.padInfo.top,S=ot(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){let s=n-v,i=r-I,o=a-k,l=0;for(let n=0;n<b;n+=m){let r=(s+n)/d;if(!(r<0)&&!(r>=h.outDepth)&&Math.floor(r)===r)for(let a=0;a<x;a+=g){let s=(i+a)/c;if(!(s<0)&&!(s>=h.outHeight)&&Math.floor(s)===s)for(let i=0;i<w;i+=y){let u=(o+i)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;let d=+(b*x*w-1-p.get(e,r,s,u,t)===n*x*w+a*w+i);0!==d&&(l+=N.get(e,r,s,u,t)*d)}}}S.set(l,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},{kernelName:nv,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t;I5([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=cB.computePool2DInfo(s.shape,o,l,1,u,h),d=n.data.get(s.dataId).values,c=ot(p.outShape,s.dtype,NK(d,s.shape,s.dtype,p).values),f=p.strideHeight,m=p.strideWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,w=x-1-p.padInfo.left,v=b-1-p.padInfo.top,k=ot(s.shape,"float32"),I=n.data.get(a.dataId).values,S=ot(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-v,s=r-w,i=0;for(let n=0;n<b;n+=g){let r=(a+n)/f;if(!(r<0)&&!(r>=p.outHeight)&&Math.floor(r)===r)for(let a=0;a<x;a+=y){let o=(s+a)/m;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;let l=+(b*x-1-c.get(e,r,o,t)===n*x+a);0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},{kernelName:nS,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;I5(r,"MaxPoolWithArgmax");let l=n.data.get(r.dataId).values,u=cB.computePool2DInfo(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){let s=r4.computeStrides(t),i=Nq(e,t,n,s,a,"max"),o=NK(e,t,n,a,!0,r);return[i.values,o.values]}(l,r.shape,r.dtype,o,u),d=n.write(h,u.outShape,r.dtype),c=n.write(p,u.outShape,r.dtype);return[{dataId:d,shape:u.outShape,dtype:r.dtype},{dataId:c,shape:u.outShape,dtype:"int32"}]}},{kernelName:nN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=r4.parseAxisParam(s,a.shape),l=cB.computeOutAndReduceShapes(a.shape,o)[1],u=r4.sizeFromShape(l),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));h.push(p);let d=So({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});h.push(d);let c=Tn({inputs:{a:d,b:p},backend:n});h.push(c);let f=N3({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},{kernelName:nT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;I5(a,"min");let o=r4.parseAxisParam(s,a.shape),l=o,u=cB.getAxesPermutation(l,a.shape.length),h=a;null!=u&&(h=S2({inputs:{x:a},backend:n,attrs:{perm:u}}),l=cB.getInnerMostAxes(l.length,a.shape.length)),cB.assertAxesAreInnerMostDims("min",l,h.shape.length);let[p,d]=cB.computeOutAndReduceShapes(h.shape,l),c=r4.sizeFromShape(d),f=r4.makeZerosTypedArray(r4.sizeFromShape(p),h.dtype),m=n.data.get(h.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(h);let g=n.makeTensorInfo(p,h.dtype,f);if(i){let e=Nz({inputs:{x:g},backend:n,attrs:{shape:cB.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},{kernelName:nC,backendName:"cpu",kernelFunc:SX},{kernelName:n$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;I5(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),h=+("reflect"!==i),p=n.data.get(a.dataId).values,d=a.shape.length,c=r4.computeStrides(a.shape),f=r4.sizeFromShape(o),m=o.length,g=r4.computeStrides(o),y=r4.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=r4.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=u[e]&&(t[e]=(u[e]-1)*2-t[e]+h);t=t.map((e,t)=>e-l[t]);let n=r4.locToIndex(t,d,c);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},{kernelName:nE,backendName:"cpu",kernelFunc:Tf},{kernelName:nA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;I5(a,"multinomial");let l=o?a:Tm({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,d=[u,s],c=r4.makeZerosTypedArray(r4.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];let r=pg.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();c[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){c[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}},{kernelName:nR,backendName:"cpu",kernelFunc:SY},{kernelName:nF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;I5(r,"neg");let[a,s]=SJ(n.data.get(r.dataId).values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,a)}},{kernelName:nO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;I5(a,"NonMaxSuppression");let{selectedIndices:u}=Tg(n.data.get(a.dataId).values,n.data.get(s.dataId).values,i,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:n_,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;I5(a,"NonMaxSuppressionPadded");let{selectedIndices:h,validOutputs:p}=Ty(n.data.get(a.dataId).values,n.data.get(s.dataId).values,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},{kernelName:nM,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;I5(a,"NonMaxSuppressionWithScore");let h=n.data.get(a.dataId).values,{selectedIndices:p,selectedScores:d}=Tb(h,n.data.get(s.dataId).values,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([d.length],"float32",new Float32Array(d))]}},{kernelName:nD,backendName:"cpu",kernelFunc:S0},{kernelName:nz,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r;I5(a,"oneHot");let u=r4.sizeFromShape(a.shape),h=new Float32Array(u*i);h.fill(l);let p=n.data.get(a.dataId).values;for(let e=0;e<u;++e)p[e]>=0&&p[e]<i&&(h[e*i+p[e]]=o);return n.makeTensorInfo([...a.shape,i],s,h)}},{kernelName:nL,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==a.dtype)return Ts({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}});{let t=Ss({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=NY({inputs:{input:a},backend:r}),i=Tx({inputs:{x:s},backend:r}),o=Sn({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}}},{kernelName:nP,backendName:"cpu",kernelFunc:Tw},Tv,{kernelName:nU,backendName:"cpu",kernelFunc:Tk},{kernelName:nV,backendName:"cpu",kernelFunc:NO},{kernelName:nG,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;I5(a,"prod");let o=a.shape.length,l=r4.parseAxisParam(s,a.shape),u=cB.getAxesPermutation(l,o),h=l,p=a,d=[];null!=u&&(d.push(p=S2({inputs:{x:a},backend:n,attrs:{perm:u}})),h=cB.getInnerMostAxes(h.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=S3(p.shape,p.dtype,c,h),y=m;return i&&(y=cB.expandShapeToKeepDim(m,l)),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}},{kernelName:nH,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.data.get(e.dataId).values),u=a.map(e=>e.shape),h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,[d,c,f]=S6(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},{kernelName:nj,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=S5(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([h.length],r.dtype,h)]}},{kernelName:nq,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,d=o.map(e=>n.data.get(e.dataId).values),c=o.map(e=>e.shape),[f,m]=Nt(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}},{kernelName:nK,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=Nn(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},{kernelName:nX,backendName:"cpu",kernelFunc:Ss},Tr,{kernelName:nZ,backendName:"cpu",kernelFunc:TI},{kernelName:nY,backendName:"cpu",kernelFunc:N_},{kernelName:n3,backendName:"cpu",kernelFunc:NM},{kernelName:nJ,backendName:"cpu",kernelFunc:Nz},{kernelName:n1,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;I5(a,"resizeBilinear");let l=r4.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(r4.sizeFromShape([p,u,h,f])),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=0,w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<u;t++){let n,r=Math.max(0,Math.floor(n=i?w*(t+.5)-.5:w*t)),a=n-r,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<h;e++){let t,n=Math.max(0,Math.floor(t=i?v*(e+.5)-.5:v*e)),r=t-n,s=Math.min(c-1,Math.ceil(t)),h=o+n*l[2],p=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[h+e],n=m[p+e],s=m[d+e],i=m[y+e],o=t+(s-t)*r,l=o+(n+(i-n)*r-o)*a;g[x++]=l}}}return n.makeTensorInfo([p,u,h,f],"float32",g)}},{kernelName:n2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;I5([s,a],"resizeBilinearGrad");let o=r4.computeStrides(a.shape),[l,u,h,p]=a.shape,[,d,c]=s.shape,f=new Float32Array(l*u*h*p),m=[i&&d>1?u-1:u,i&&c>1?h-1:h],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,d=1-l;for(let e=0;e<c;e++){let t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,u=1-a,c=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=d*u,k=d*a,I=l*u,S=l*a;for(let e=0;e<p;e++){let t=x[w++];f[c+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,h,u,p],"float32",f)}},{kernelName:nQ,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;I5(a,"resizeNearestNeighbor");let l=r4.computeStrides(a.shape),[u,h]=o,[p,d,c,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*u*h*f),y=[s&&u>1?d-1:d,s&&h>1?c-1:c],b=[s&&u>1?u-1:u,s&&h>1?h-1:h],x=y[0]/b[0],w=y[1]/b[1],v=0;for(let e=0;e<p;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?x*(e+.5):x*e,r=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<h;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([p,u,h,f],a.dtype,g)}},{kernelName:n0,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;I5([s,a],"resizeNearestNeighborGrad");let o=r4.computeStrides(a.shape),l=r4.computeStrides(s.shape),[u,h,p,d]=a.shape,[,c,f]=s.shape,m=new Float32Array(u*h*p*d),g=n.data.get(s.dataId).values,y=[i&&c>1?h-1:h,i&&f>1?p-1:p],b=[i&&c>1?c-1:c,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<h;e++){let n=t+e*o[1],r=Math.floor(Math.floor(e*v)-I/2);for(let a=0;a<p;a++){let s=n+a*o[2],u=Math.floor(Math.floor(a*k)-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){let d=s+r;if(d<0||d>=c)continue;let m=t+d*l[1],y=d*x;if(e===Math.min(h-1,i?Math.round(y):Math.floor(y)))for(let e=0;e<S;e++){let t=e+u;if(t<0||t>=f)continue;let r=m+t*l[2],s=t*w;a===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},{kernelName:n4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;I5(a,"reverse");let i=a.shape.length,o=r4.parseAxisParam(s,a.shape);if(0===i)return Sa({inputs:{x:a},backend:n});let l=new aq(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=a.shape[e]-1-n[e]),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},{kernelName:rP,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=r4.getTypedArrayFromDType(r.dtype,r4.sizeFromShape(r.shape)),[l,u,h,p]=r.shape,[d,c]=cB.getImageCenter(i,u,h),f=Math.sin(a),m=Math.cos(a),g=n.data.get(r.dataId).values;for(let e=0;e<l;e++){let t=e*h*u*p;for(let e=0;e<u;e++){let n=h*p*e;for(let r=0;r<h;r++){let a=r*p;for(let i=0;i<p;i++){let y=[l,e,r,i],b=y[2],x=y[1],w=(b-d)*m-(x-c)*f,v=(b-d)*f+(x-c)*m;w=Math.round(w+d),v=Math.round(v+c);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<h&&v>=0&&v<u&&(k=g[t+h*p*v+w*p+i]),o[t+n+a+i]=k}}}}return{dataId:n.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:n6,backendName:"cpu",kernelFunc:TS},{kernelName:n5,backendName:"cpu",kernelFunc:Na},{kernelName:n8,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=cB.calculateShapes(s,a,i),d=Ns(n.bufferSync(a),n.bufferSync(s),i,p,u,l,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},{kernelName:n9,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){let i=r4.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?function(e,t){let n=0,r=e.length,a=0;for(;n<r;)e[a=Math.floor((n+r)/2)]<t?n=a+1:r=a;return r}(n,t[e+l]):function(e,t){let n=0,r=e.length,a=0;for(;n<r;)e[a=Math.floor((n+r)/2)]<=t?n=a+1:r=a;return r}(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}},{kernelName:re,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;I5([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=a1(a.dtype,s.dtype),p=r4.makeZerosTypedArray(r4.sizeFromShape(a.shape),h),d=0,c=0===i||i>1||1===a.shape.length?1:r4.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?p[d++]=l[e]:p[d++]=u[e];return n.makeTensorInfo(a.shape,h,p)}},{kernelName:rt,backendName:"cpu",kernelFunc:TC},{kernelName:ri,backendName:"cpu",kernelFunc:No},{kernelName:rs,backendName:"cpu",kernelFunc:T$},{kernelName:rr,backendName:"cpu",kernelFunc:TE},{kernelName:ra,backendName:"cpu",kernelFunc:TA},{kernelName:rn,backendName:"cpu",kernelFunc:Nu},{kernelName:rd,backendName:"cpu",kernelFunc:Tm},{kernelName:ro,backendName:"cpu",kernelFunc:TF},{kernelName:rh,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;I5([a],"spaceToBatchND");let o=r4.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=Tv.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=cB.getReshaped(u.shape,s,o,!1),p=cB.getPermuted(h.length,s.length,!1),d=cB.getReshapedPermuted(u.shape,s,o,!1),c=Nz({inputs:{x:u},backend:n,attrs:{shape:h}}),f=S2({inputs:{x:c},backend:n,attrs:{perm:p}}),m=Nz({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}},{kernelName:rc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(2!==r.shape.length)throw Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
        ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values[0],[p,d,c,f,m]=Nh(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},{kernelName:rf,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,h,p]=Np(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},{kernelName:rm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
          ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=Nd(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}},{kernelName:rg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
         ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,h]=Nd(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}},{kernelName:ry,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=a,{sliceRank:u,numUpdates:h,sliceSize:p,strides:d,outputSize:c}=cB.calculateShapes(i,s,l),f=r.bufferSync(s);switch(i.dtype){case"bool":t=Ns(f,r.bufferSync(i),l,c,p,h,u,d,!!r.data.get(o.dataId).values[0],!1);break;case"float32":case"int32":t=Ns(f,r.bufferSync(i),l,c,p,h,u,d,r.data.get(o.dataId).values[0],!1);break;case"string":t=Ns(f,r.bufferSync(i),l,c,p,h,u,d,r4.decodeString(r.data.get(o.dataId).values[0]),!1);break;default:throw Error(`Unsupported type ${i.dtype}`)}return r.makeTensorInfo(l,t.dtype,t.values)}},{kernelName:rp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=r4.parseAxisParam(i,a.shape)[0],l=cB.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let r=Nu({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}},{kernelName:rl,backendName:"cpu",kernelFunc:Nf},{kernelName:rx,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e;I5(n,"square");let r=t.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){let t=r[e];a[e]=t*t}return{dataId:t.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},{kernelName:rb,backendName:"cpu",kernelFunc:Ng},{kernelName:rw,backendName:"cpu",kernelFunc:Nb},{kernelName:rL,backendName:"cpu",kernelFunc:TD},{kernelName:rv,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a;I5(s,"stridedSlice");let{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=lT.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=Nz({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){r4.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=lT.computeOutShape(x,w,v),n=Nu({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=Nz({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else{let e=Nx(f,r.bufferSync(s),v,x);t=r.makeTensorInfo(m,e.dtype,e.values)}return t}},{kernelName:rk,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,[d,c]=Nv(n.data.get(h.dataId).values,n.data.get(p.dataId).values,a,s,i,o,l,u);return[n.makeTensorInfo([d.length],"string",d),n.makeTensorInfo(p.shape,"int32",c)]}},{kernelName:rI,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let[o,l,u]=Nk(n.data.get(s.dataId).values,n.data.get(i.dataId).values[0],a),h=l.length;return[n.makeTensorInfo([h,2],"int32",o),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:rS,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=NI(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},{kernelName:rN,backendName:"cpu",kernelFunc:NN},{kernelName:ru,backendName:"cpu",kernelFunc:N3},{kernelName:rT,backendName:"cpu",kernelFunc:TO},{kernelName:rC,backendName:"cpu",kernelFunc:T_},{kernelName:n7,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:h}=cB.calculateShapes(s,a,r.shape),p=n.bufferSync(a),d=n.bufferSync(s),c=n.bufferSync(r),f=Ns(p,d,r.shape,h,l,o,i,u,c,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}},{kernelName:r$,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;I5(a,"tile");let i=NT(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:rE,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;I5(a,"topk");let[o,l]=N$(n.data.get(a.dataId).values,a.shape,a.dtype,s,i);return[n.makeTensorInfo(o.shape,o.dtype,o.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},{kernelName:rA,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=[h,f,m,c],y=r4.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=r4.computeStrides(g),k=v[0],I=v[1],S=v[2],N=r4.getTypedArrayFromDType(a.dtype,r4.sizeFromShape(g));N.fill(l);let T=r.data.get(a.dataId).values,C=r.data.get(s.dataId).values;for(let e=0;e<h;++e){let t=1===s.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<c;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let h=(t[0]*r+t[1]*n+t[2])/u,c=(t[3]*r+t[4]*n+t[5])/u,f=TM(h,d,o),m=TM(c,p,o);switch(i){case"nearest":s=TL(T,p,d,b,x,w,e,Math.round(m),Math.round(f),a,l);break;case"bilinear":s=function(e,t,n,r,a,s,i,o,l,u,h){let p=Math.floor(o),d=Math.floor(l),c=p+1,f=d+1,m=(f-l)*TL(e,t,n,r,a,s,i,p,d,u,h)+(l-d)*TL(e,t,n,r,a,s,i,p,f,u,h),g=(f-l)*TL(e,t,n,r,a,s,i,c,d,u,h)+(l-d)*TL(e,t,n,r,a,s,i,c,f,u,h);return(c-o)*m+(o-p)*g}(T,p,d,b,x,w,e,m,f,a,l);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*k+n*I+r*S+a]=s}return r.makeTensorInfo(g,a.dtype,N)}return{dataId:r.write(N,g,a.dtype),shape:a.shape,dtype:a.dtype}}},{kernelName:rR,backendName:"cpu",kernelFunc:S2},{kernelName:rF,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;I5(s,"unique");let{outputValues:i,outputShape:o,indices:l}=NE(r.data.get(s.dataId).values,a,s.shape,s.dtype);return[r.makeTensorInfo(o,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:rD,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=Array(i).fill(0),p=a.shape.slice();p[s]=1;let d=Array(o);for(let e=0;e<d.length;e++){h[s]=e;let t=Nu({inputs:{x:a},backend:n,attrs:{begin:h,size:p}});d[e]=Nz({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:rO,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;I5(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],h=[],p=o-l,d=s;for(let e=0;e<p;++e){let t=Tt({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,h.push(t)}for(let e=0;e<i;++e){let t=r4.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=SI({inputs:{a:r,b:d},backend:n}),i=So({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),o=SY({inputs:{a:i,b:a},backend:n}),l=N3({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});u.push(l),h.push(r),h.push(s),h.push(i),h.push(o),h.push(l)}let c=Tw({inputs:u,backend:n,attrs:{axis:0}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},{kernelName:rM,backendName:"cpu",kernelFunc:Tx}])rJ(e);l(I4,I6);var Tz={},TP={};u(TP,"webgl",()=>ER),u(TP,"version_webgl",()=>E$);var TB={};u(TB,"callAndCheck",()=>TK),u(TB,"getWebGLErrorMessage",()=>TZ),u(TB,"canBeRepresented",()=>TX),u(TB,"getExtensionOrThrow",()=>TY),u(TB,"createVertexShader",()=>TJ),u(TB,"createFragmentShader",()=>TQ),u(TB,"logShaderSourceAndInfoLog",()=>T1),u(TB,"createProgram",()=>T2),u(TB,"linkProgram",()=>T3),u(TB,"validateProgram",()=>T4),u(TB,"createStaticVertexBuffer",()=>T6),u(TB,"createStaticIndexBuffer",()=>T5),u(TB,"getNumChannels",()=>T8),u(TB,"createTexture",()=>T7),u(TB,"validateTextureSize",()=>T9),u(TB,"createFramebuffer",()=>Ce),u(TB,"bindVertexBufferToProgramAttribute",()=>Ct),u(TB,"bindTextureUnit",()=>Cn),u(TB,"unbindTextureUnit",()=>Cr),u(TB,"getProgramUniformLocationOrThrow",()=>Ca),u(TB,"getProgramUniformLocation",()=>Cs),u(TB,"bindTextureToProgramUniformSampler",()=>Ci),u(TB,"bindCanvasToFramebuffer",()=>Co),u(TB,"bindColorTextureToFramebuffer",()=>Cl),u(TB,"unbindColorTextureFromFramebuffer",()=>Cu),u(TB,"validateFramebuffer",()=>Ch),u(TB,"getFramebufferErrorMessage",()=>Cp),u(TB,"getBatchDim",()=>Cf),u(TB,"getRowsCols",()=>Cm),u(TB,"getShapeAs3D",()=>Cg),u(TB,"getTextureShapeFromLogicalShape",()=>Cy),u(TB,"isReshapeFree",()=>Cb),u(TB,"getWebGLMaxTextureSize",()=>Cx),u(TB,"resetMaxTextureSize",()=>Cw),u(TB,"resetMaxTexturesInShader",()=>Cv),u(TB,"getMaxTexturesInShader",()=>Ck),u(TB,"getWebGLDisjointQueryTimerVersion",()=>CI),u(TB,"hasExtension",()=>CS),u(TB,"isWebGLVersionEnabled",()=>CN),u(TB,"isCapableOfRenderingToFloatTexture",()=>CT),u(TB,"isDownloadFloatTextureEnabled",()=>CC),u(TB,"isWebGLFenceEnabled",()=>CE),u(TB,"assertNotComplex",()=>CA);let TW={},TU={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function TV(e,t){TW[e]=t}function TG(e,t){if(!(e in TW)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!eP.getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete TW[e]},!1),eP.getBool("SOFTWARE_WEBGL_ENABLED")&&(TU.failIfMajorPerformanceCaveat=!1),1===e)?n.getContext("webgl",TU)||n.getContext("experimental-webgl",TU):n.getContext("webgl2",TU)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;TW[e]=n}let n=TW[e];return null==n||n.isContextLost()?(delete TW[e],TG(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),TW[e])}function TH(e){let t=Math.ceil(r4.sizeFromShape(e)/4);return r4.sizeToSquarishShape(t)}function Tj(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Tq(e,t){let n,r,a,s,i,o,l,u,h,p;return 2===eP.getNumber("WEBGL_VERSION")?(n=e.R32F,r=e.R16F,a=e.RGBA16F,s=e.RGBA32F,i=e.RED,l=4,u=1,h=e.HALF_FLOAT,p=e.FLOAT,o=e.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=e.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:p}}function TK(e,t){let n=t();return eP.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+TZ(e,t))}(e),n}function TX(e){return!!(eP.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||596e-10<Math.abs(e)&&65504>Math.abs(e))}function TZ(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function TY(e,t){return Cd(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function TJ(e,t){let n=Cd(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(TK(e,()=>e.shaderSource(n,t)),TK(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),Error("Failed to compile vertex shader.");return n}function TQ(e,t){let n=Cd(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(TK(e,()=>e.shaderSource(n,t)),TK(e,()=>e.compileShader(n)),eP.get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw T1(t,e.getShaderInfoLog(n)),Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(C||(C={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}($||($={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(E||(E={}));let T0=/ERROR: [0-9]+:([0-9]+):/g;function T1(e,t){let n=T0.exec(t);if(null==n){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>r4.rightPad((t+1).toString(),s)+e),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r4.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function T2(e){return Cd(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function T3(e,t){if(TK(e,()=>e.linkProgram(t)),!eP.get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}function T4(e,t){if(TK(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function T6(e,t){let n=Cd(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return TK(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),TK(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function T5(e,t){let n=Cd(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return TK(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),TK(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function T8(){return 2===eP.getNumber("WEBGL_VERSION")?1:4}function T7(e){return Cd(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function T9(e,t){let n=eP.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function Ce(e){return Cd(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Ct(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return -1!==o&&(TK(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),TK(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),TK(e,()=>e.enableVertexAttribArray(o)),!0)}function Cn(e,t,n){Cc(e,n),TK(e,()=>e.activeTexture(e.TEXTURE0+n)),TK(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Cr(e,t){Cc(e,t),TK(e,()=>e.activeTexture(e.TEXTURE0+t)),TK(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Ca(e,t,n){return Cd(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function Cs(e,t,n){return e.getUniformLocation(t,n)}function Ci(e,t,n,r){TK(e,()=>Cn(e,t,r)),TK(e,()=>e.uniform1i(n,r))}function Co(e){TK(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),TK(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),TK(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Cl(e,t,n){TK(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),TK(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Cu(e,t){TK(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),TK(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Ch(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+Cp(e,t))}function Cp(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Cd(e,t,n){let r=TK(e,()=>t());if(null==r)throw Error(n);return r}function Cc(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw Error(`textureUnit must be in ${e}.`)}}function Cf(e,t=2){return r4.sizeFromShape(e.slice(0,e.length-t))}function Cm(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Cg(e){let t=[1,1,1];return 0!==e.length&&(1!==e.length||1!==e[0])&&(t=[Cf(e),...Cm(e)]),t}function Cy(e,t=!1){let n=eP.getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=eP.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&eP.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map((t,n)=>n>=e.length-2?r4.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length&&(e=r4.squeezeShape(e).newShape);let a=r4.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=Cf(e),n=2,r=2;e.length&&([n,r]=Cm(e)),a=n/2*t*(r/2),s=r4.sizeToSquarishShape(a).map(e=>2*e)}else s=r4.sizeToSquarishShape(a);return s}function Cb(e,t){if(e=e.slice(-2),t=t.slice(-2),r4.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||n%2==0&&r%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function Cx(e){if(null==s){let t=TG(e);s=t.getParameter(t.MAX_TEXTURE_SIZE)}return s}function Cw(){s=null}function Cv(){i=null}function Ck(e){if(null==i){let t=TG(e);i=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,i)}function CI(e){if(0===e)return 0;let t=TG(e);return CS(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:+!!CS(t,"EXT_disjoint_timer_query")}function CS(e,t){return null!=e.getExtension(t)}function CN(e){try{let t=TG(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function CT(e){if(0===e)return!1;let t=TG(e);if(1===e){if(!CS(t,"OES_texture_float"))return!1}else if(!CS(t,"EXT_color_buffer_float"))return!1;return C$(t)}function CC(e){if(0===e)return!1;let t=TG(e);if(1===e){if(!CS(t,"OES_texture_float")||!CS(t,"WEBGL_color_buffer_float"))return!1}else{if(CS(t,"EXT_color_buffer_float"))return C$(t);let e="EXT_color_buffer_half_float";if(CS(t,e)){let a=t.getExtension(e);var n=t,r=a;let s=Tq(n,r),i=n.createTexture();n.bindTexture(n.TEXTURE_2D,i),n.texImage2D(n.TEXTURE_2D,0,s.internalFormatHalfFloat,1,1,0,s.textureFormatFloat,s.textureTypeHalfFloat,null);let o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,i,0);let l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(i),n.deleteFramebuffer(o),l}return!1}return C$(t)}function C$(e){let t=Tq(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function CE(e){return 2===e&&null!=TG(e).fenceSync}function CA(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r4.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let CR=eP;function CF(){let e,t,n,r,a,s,i,o,l,u;return 2===eP.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=eP.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function CD(e,t,n="index"){let r=r4.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${t}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function CO(e,t,n="index"){let r=r4.computeStrides(t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`}).join("")}function C_(e){let t=r4.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function CM(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}CR.registerFlag("HAS_WEBGL",()=>CR.getNumber("WEBGL_VERSION")>0),CR.registerFlag("WEBGL_VERSION",()=>CN(2)?2:+!!CN(1)),CR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),CR.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===CR.get("WEBGL_VERSION")),CR.registerFlag("WEBGL_CPU_FORWARD",()=>!0),CR.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),CR.registerFlag("WEBGL_PACK",()=>CR.getBool("HAS_WEBGL")),CR.registerFlag("WEBGL_PACK_NORMALIZATION",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_CLIP",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_REDUCE",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_LAZILY_UNPACK",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_CONV_IM2COL",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>CR.getBool("WEBGL_PACK")),CR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>Cx(CR.getNumber("WEBGL_VERSION"))),CR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>Ck(CR.getNumber("WEBGL_VERSION"))),CR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=CR.getNumber("WEBGL_VERSION");return 0===e?0:CI(e)}),CR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>CR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ss.isMobile()),CR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>CT(CR.getNumber("WEBGL_VERSION"))),CR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!CR.getBool("WEBGL_FORCE_F16_TEXTURES")&&CR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),CR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>CC(CR.getNumber("WEBGL_VERSION"))),CR.registerFlag("WEBGL_FENCE_API_ENABLED",()=>CE(CR.getNumber("WEBGL_VERSION"))),CR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>4*!!CR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")),CR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),CR.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ss.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),CR.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),CR.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),CR.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),CR.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),CR.registerFlag("WEBGL_EXP_CONV",()=>!1),CR.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>CR.getBool("IS_TEST")),CR.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),CR.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),CR.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),CR.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);let CL=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:Cz}=cB,CP=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,CB=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,CW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,CU=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function CV(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function CG(e){return`offset${e}`}function CH(e){let t=e.name,n=r4.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Cj(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";else if(6===e)return"ivec6";else throw Error(`GPU for rank ${e} is not yet supported`)}function Cq(e,t,n){let{newShape:r,keptDims:a}=r4.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!r4.arraysEqual(t,n)&&r.length<s||i,u=l?o:t;return{useSqueezeShape:l,uniformShape:u,keptDims:a}}function CK(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function CX(e,t){return t.map(t=>e[t]).join(", ")}function CZ(e,t,n){let r,a,s,i=[],o=[],l=null,u=null;for(let r of(u=e.getUniformLocation(n,"NAN",!1),1===eP.getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1)),t.variableNames)){let a={name:r,uniform:e.getUniformLocation(n,r,!1),offset:e.getUniformLocation(n,`offset${r}`,!1)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,!1),a.texShape=e.getUniformLocation(n,`${r}TexShape`,!1)),i.push(a)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",!1),s=e.getUniformLocation(n,"outShapeStrides",!1),a=e.getUniformLocation(n,"outTexShape",!1)),t.customUniforms)for(let r of t.customUniforms)o.push(e.getUniformLocation(n,r.name,!1));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function CY(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!r4.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!r4.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function CJ(e){return eP.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class CQ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=C.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=CF();this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?CO(["r","c","d"],e):CD(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}class C0{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=C.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=CF();this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?CO(["r","c","d"],e):CD(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}class C1{constructor(e){this.variableNames=["A"],this.outTexUsage=$.DOWNLOAD;let t=CF();this.outputShape=e,this.userCode=`
      ${CL}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}class C2{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$.DOWNLOAD;let t=CF();this.outputShape=e,this.userCode=`
      ${CL}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}let C3={R:0,G:1,B:2,A:3};class C4{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=CF();this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){let t=n[e];s+=`
          if(offset == ${e}) {
            result = values[${C3[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?CM():C_(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}}class C6{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=CF();this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${s}] = values[0];
            } else if (offset == 1) {
              result[${s}] = values[1];
            } else if (offset == 2) {
              result[${s}] = values[2];
            } else {
              result[${s}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?CM():C_(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}}var C5={};function C8(e){let t=CF();return TJ(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function C7(e){return T6(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function C9(e){return T5(e,new Uint16Array([0,1,2,2,1,3]))}function $e(e,t,n,r,a,s){T9(t,n);let i=T7(e),o=e.TEXTURE_2D;return TK(e,()=>e.bindTexture(o,i)),TK(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),TK(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),TK(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),TK(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===eP.getNumber("WEBGL_VERSION")?TK(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):TK(e,()=>e.texStorage2D(o,1,r,t,n)),TK(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function $t(e){return e.internalFormatFloat}function $n(e,t,n,r){let[a,s]=[n,t];return $e(e,a,s,$t(r),r.textureFormatFloat,e.FLOAT)}function $r(e){return e.internalFormatHalfFloat}function $a(e,t,n,r){let[a,s]=[n,t];return $e(e,a,s,$r(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function $s(e){return e.downloadTextureFormat}function $i(e,t,n,r){let[a,s]=[n,t];return $e(e,a,s,$s(r),e.RGBA,e.UNSIGNED_BYTE)}function $o(e){return e.internalFormatPackedFloat}function $l(e,t,n,r){let[a,s]=Tj(t,n);return $e(e,a,s,$o(r),e.RGBA,e.FLOAT)}function $u(e){return e.internalFormatPackedHalfFloat}function $h(e,t,n,r){let[a,s]=Tj(t,n);return $e(e,a,s,$u(r),e.RGBA,r.textureTypeHalfFloat)}function $p(e,t,n){return TK(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ct(e,t,"clipSpacePos",n,3,20,0)&&Ct(e,t,"uv",n,2,20,12)}function $d(e,t,n,r,a,s){let i,o,l;TK(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===eP.getNumber("WEBGL_VERSION")?TK(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):TK(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i)),TK(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function $c(e,t,n){TK(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===eP.getNumber("WEBGL_VERSION")?TK(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):TK(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===eP.getNumber("WEBGL_VERSION")?TK(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):TK(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),TK(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function $f(e,t,n,r){let a=e.createBuffer();TK(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*n;return TK(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),TK(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),TK(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function $m(e,t,n){let r=new Float32Array(n);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,r),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),r}function $g(e,t,n,r){let[a,s]=[n,t],i=new Uint8Array(t*n*4);return TK(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function $y(e,t,n,r,a,s,i,o){let l=new Float32Array(function(e,t){let[n,r]=Tj(e,t);return n*r*4}(s,i));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,l),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),l}function $b(e,t,n){let r=new Float32Array(t*n*4);return TK(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}u(C5,"createVertexShader",()=>C8),u(C5,"createVertexBuffer",()=>C7),u(C5,"createIndexBuffer",()=>C9),u(C5,"getInternalFormatForFloat32MatrixTexture",()=>$t),u(C5,"createFloat32MatrixTexture",()=>$n),u(C5,"getInternalFormatForFloat16MatrixTexture",()=>$r),u(C5,"createFloat16MatrixTexture",()=>$a),u(C5,"getInternalFormatForUnsignedBytesMatrixTexture",()=>$s),u(C5,"createUnsignedBytesMatrixTexture",()=>$i),u(C5,"getInternalFormatForPackedMatrixTexture",()=>$o),u(C5,"createPackedMatrixTexture",()=>$l),u(C5,"getInternalFormatForFloat16PackedMatrixTexture",()=>$u),u(C5,"createFloat16PackedMatrixTexture",()=>$h),u(C5,"bindVertexProgramAttributeStreams",()=>$p),u(C5,"uploadDenseMatrixToTexture",()=>$d),u(C5,"uploadPixelDataToTexture",()=>$c),u(C5,"createBufferFromOutputTexture",()=>$f),u(C5,"downloadFloat32MatrixFromBuffer",()=>$m),u(C5,"downloadByteEncodedFloatMatrixFromOutputTexture",()=>$g),u(C5,"downloadPackedMatrixFromBuffer",()=>$y),u(C5,"downloadMatrixFromPackedOutputTexture",()=>$b);class $x{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=eP.getNumber("WEBGL_VERSION");if(null!=e){var n;this.gl=e,n=e,TW[t]=n}else this.gl=TG(t);if(e=this.gl,2===eP.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>TK(t,()=>t.createVertexArray()),this.bindVertexArray=e=>TK(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>TK(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>TK(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>TK(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>TK(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>TK(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>TK(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===eP.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=TY(this.gl,"OES_texture_float"),CS(this.gl,e))this.textureHalfFloatExtension=TY(this.gl,e);else if(eP.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),CS(this.gl,a))this.colorBufferHalfFloatExtension=TY(this.gl,a);else if(eP.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",CS(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(CS(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=C7(this.gl),this.indexBuffer=C9(this.gl),this.framebuffer=Ce(this.gl),this.textureConfig=Tq(this.gl,this.textureHalfFloatExtension)}get debug(){return eP.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;TK(e,()=>e.finish()),TK(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),TK(e,()=>e.deleteFramebuffer(this.framebuffer)),TK(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),TK(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),TK(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),$n(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),$a(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),$i(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),$c(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),$d(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),$h(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$l(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Cu(this.gl,this.framebuffer),this.outputTexture=null),TK(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>$g(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return $y(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return $m(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=$f(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(eP.getBool("WEBGL_FENCE_API_ENABLED")){let r=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let t=e.clientWaitSync(r,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=r}else eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>$b(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=C8(t));let n=T2(t);TK(t,()=>t.attachShader(n,this.vertexShader)),TK(t,()=>t.attachShader(n,e)),T3(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&T4(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;TK(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),$p(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(TK(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&T4(this.gl,this.program),TK(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return(this.throwIfDisposed(),n)?Ca(this.gl,e,t):Cs(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),TK(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Ci(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=Tj(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&T4(this.gl,this.program),Ch(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),TK(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),TK(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=TY(this.gl,2===eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r4.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let n;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in eP.platform&&(n=eP.platform.setTimeoutCustom.bind(eP.platform)),r4.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Cl(this.gl,e,this.framebuffer),this.debug&&Ch(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Cl(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ch(this.gl)):Cu(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;Cl(r,e,this.framebuffer),this.debug&&Ch(r),this.outputTexture=e,TK(r,()=>r.viewport(0,0,t,n)),TK(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),TK(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}let{addImpl:$w,bincountImpl:$v,bincountReduceImpl:$k,bitwiseAndImpl:$I,castImpl:$S,ceilImpl:$N,concatImpl:$T,equalImpl:$C,expImpl:$$,expm1Impl:$E,floorImpl:$A,gatherNdImpl:$R,gatherV2Impl:$F,greaterImpl:$D,greaterEqualImpl:$O,lessImpl:$_,lessEqualImpl:$M,linSpaceImpl:$L,logImpl:$z,maxImpl:$P,maximumImpl:$B,minimumImpl:$W,multiplyImpl:$U,negImpl:$V,notEqualImpl:$G,prodImpl:$H,raggedGatherImpl:$j,raggedRangeImpl:$q,raggedTensorToTensorImpl:$K,rangeImpl:$X,rsqrtImpl:$Z,scatterImpl:$Y,sigmoidImpl:$J,simpleAbsImpl:$Q,sliceImpl:$0,sparseFillEmptyRowsImpl:$1,sparseReshapeImpl:$2,sparseSegmentReductionImpl:$3,sqrtImpl:$4,staticRegexReplaceImpl:$6,stridedSliceImpl:$5,stringNGramsImpl:$8,stringSplitImpl:$7,stringToHashBucketFastImpl:$9,subImpl:Ee,tileImpl:Et,topKImpl:En,transposeImpl:Er,uniqueImpl:Ea}=I9;function Es(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Ei(e,t){return 1===t?[e]:Es(e,t)}class Eo{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=CJ(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Ei("rc",this.rank),t=Cj(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}class El{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let n=t?function(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map(e=>`${t}[${e}]`),a=Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map((e,t)=>t),t);return r.map((t,a)=>{let s=`int ${e[a]} = ${n} / ${r[a]}`,i=a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`;return`${s}; ${i};`}).join("")}(["r","c","d"],"inputShape"):CD(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${n}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?CM():C_(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}}class Eu{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r,a=Ep(t,n),s=Ed(e,a,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=Eh(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}return a===E.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===E.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===E.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===E.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===E.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(r),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),r}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=Ep(n,r),s=Ed(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Eh(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=eP.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Eh(e,t,n,r,a){let s,i=function(e,t){switch(e){case E.PACKED_2X2_FLOAT32:return $o(t);case E.PACKED_2X2_FLOAT16:return $u(t);case E.UNPACKED_FLOAT32:return $t(t);case E.UNPACKED_FLOAT16:return $r(t);case E.PACKED_4X1_UNSIGNED_BYTE:return $s(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=Tj(e[0],e[1]);s=t*n}else{var o;let[t,n]=(o=e[0],[e[1],o]);s=t*n}return s*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;else if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(n,i)}function Ep(e,t){if(e===$.UPLOAD)return E.PACKED_2X2_FLOAT32;if(e===$.RENDER||null==e)return eP.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?E.PACKED_2X2_FLOAT32:E.UNPACKED_FLOAT32:t?E.PACKED_2X2_FLOAT16:E.UNPACKED_FLOAT16;if(e===$.DOWNLOAD||e===$.PIXELS)return E.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function Ed(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Ec{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let Ef="if (isnan(x)) return x;",Em="return abs(x);",Eg=Ef+`
  return (x < 0.0) ? 0.0 : x;
`,Ey=Ef+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Eb="return x;",Ex=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Ew=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ev=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class Ek{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class EI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length);let t=e.length,n=Ei("rc",t),r=Cj(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}let ES=fH.whereImpl,EN={},ET=eP.getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class EC extends P{nextDataId(){return EC.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!eP.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");null!=e?(t=e instanceof $x?e:new $x(TG(eP.getNumber("WEBGL_VERSION"),e)),this.binaryCache={},this.gpgpuCreatedLocally=!1):(t=new $x(TG(eP.getNumber("WEBGL_VERSION"))),this.binaryCache=function(e){return e in EN||(EN[e]={}),EN[e]}(eP.getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0),this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Eu(this.gpgpu),this.numMBBeforeWarning=null==eP.global.screen?1024:eP.global.screen.height*eP.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new z(this,sr)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let l=new C4(Cg(t),!1,s),u=this.runWebGLProgram(l,[i],n,[[r,a]]);return u.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),u.dataId}write(e,t,n){if((eP.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||eP.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:$.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(eP.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:$.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,n,{values:r,dtype:a,complexTensorInfos:s,slice:i,shape:o,isPacked:l}=this.texData.get(e);if(null!=i){let t;t=l?new Ek(o,Eb):new Ec(o,Eb);let n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=r)return this.convertAndCacheOnCPU(e);if("string"===a)return r;let u=null!=this.activeTimers;if(u&&(t=r4.now()),"complex64"===a){let e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);n=cB.mergeRealAndImagArrays(e,t)}else n=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r4.now()-t),this.convertAndCacheOnCPU(e,n)}async read(e){let t,n;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:r,shape:a,slice:s,dtype:i,complexTensorInfos:o,isPacked:l}=this.texData.get(e);if(null!=s){let t;t=l?new Ek(a,Eb):new Ec(a,Eb);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=r)return this.convertAndCacheOnCPU(e);if(eP.getBool("DEBUG")&&!eP.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===eP.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null;if("complex64"!==i&&eP.get("WEBGL_BUFFER_SUPPORTED")){t=this.decode(e);let n=this.texData.get(t.dataId);u=this.gpgpu.createBufferFromTexture(n.texture.texture,...TH(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){let e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],r=e[1];n=cB.mergeRealAndImagArrays(t,r)}else if(null==u)n=this.getValuesFromTexture(e);else{let e=r4.sizeFromShape(a);n=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=t&&this.disposeIntermediateTensorInfo(t),null!=u){let e=this.gpgpu.gl;TK(e,()=>e.deleteBuffer(u))}let h=this.convertAndCacheOnCPU(e,n),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&sr.removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let{values:n,shape:r,slice:a,dtype:s,isPacked:i,texture:o}=this.texData.get(e);if("complex64"===s)throw Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new Ek(r,Eb):new Ec(r,Eb);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==o)if(null!=n)throw Error("Data is not on GPU but on CPU.");else throw Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape);return Object.assign({tensorRef:sr.makeTensorFromTensorInfo(l)},this.texData.get(l.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>r4.decodeString(e));return ot(e.shape,e.dtype,n)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return ot(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!TX(n)){if(eP.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=r4.sizeFromShape(t);if(eP.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...TH(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=eP.getBool("WEBGL_PACK")&&!0===r,i=s?Cg(t):t,o=s?new C2(i):new C1(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=r4.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=r4.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=r4.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r4.now(),endMs:null}}endTimer(e){return eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=r4.now(),e}async getQueryTime(e){return eP.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ET){return eP.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r4.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){cB.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return ES(e.shape,t)}packedUnaryOp(e,t,n){let r=new Ek(e.shape,t),a=this.compileAndRun(r,[e],n);return sr.makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=$Q(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(eP.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Em,e.dtype);let t=new Ec(e.shape,Em),n=this.compileAndRun(t,[e]);return sr.makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&r4.isString(n[0])){let a=n.map(e=>r4.encodeString(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return sr.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new EI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Eo(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[Cf(e.shape),...Cm(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=new El([Cf(t),...Cm(t)],n),s=this.runWebGLProgram(a,[r],e.dtype,[n],!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}decode(e,t){let n,{isPacked:r,shape:a,dtype:s}=this.texData.get(e);if(null!=t){let e=r4.sizeFromShape(a),n=t[0]*t[1]*4;r4.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Cg(a);n=r?new C0(i):new CQ(i);let o=[null!=t?t:TH(i)],l=this.runWebGLProgram(n,[{shape:i,dtype:s,dataId:e}],s,o,!0,t);return{dtype:s,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i,o=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===C.DENSE&&(l.texShape=(null!=s?s:TH(e.outputShape)).map(e=>2*e)),null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===r4.sizeFromShape(o.shape))return l.values=r4.getTypedArrayFromDType(o.dtype,0),o;let u=[],h=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r4.sizeFromShape(t.shape)<=eP.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Cb(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(o.dataId);let p={shape:o.shape,texData:l,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=Cq(e.packedInputs,t.shape,s),u="",h="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=r4.computeStrides(o);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&r4.arraysEqual(t.shape,s),f=1===r4.sizeFromShape(t.shape),m=cB.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&r4.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${h}_${p}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});let a=e.userCode,s=e.constructor.name;return s+("_"+r+"_"+a+`${eP.getNumber("WEBGL_VERSION")}`)}(e,h,p),c=this.getAndSaveBinary(d,()=>(function(e,t,n,r){let a=n.map((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=a.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=function(e,t,n){var r,a,s,i;let o,l,u=[];if(e.forEach(e=>{let t=r4.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?u.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(u.push(`uniform sampler2D ${e.name};`),u.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=Cq(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:u.push(`uniform int ${e.name}Shape;`);break;case 2:u.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:u.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:u.push(`uniform ivec4 ${e.name}Shape;`)}u.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:u.push("uniform int outShape;");break;case 2:u.push("uniform ivec2 outShape;"),u.push("uniform int outShapeStrides;");break;case 3:u.push("uniform ivec3 outShape;"),u.push("uniform ivec2 outShapeStrides;");break;case 4:u.push("uniform ivec4 outShape;"),u.push("uniform ivec3 outShapeStrides;")}u.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{u.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let h=u.join("\n"),p=e.map(e=>(function(e,t,n=!1,r){let a="";n?a+=function e(t,n){switch(t.shapeInfo.logicalShape.length){case 0:var r=t;let a=r.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=CF();return`
    vec4 ${s}() {
      return ${i.texture2D}(${a}, halfCR);
    }
  `;case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=CF();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}(t,n);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=CF();if(null!=s&&r4.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],h=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}(t,n);case 3:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===r[0]){let a=CK(t,r.slice(1));return`
        ${e(a,n)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${CX(["b","row","col"],[1,2])});
        }
      `}let l=CF();if(n)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `;let u=o[0],h=o[1],p=Math.ceil(r[2]/2),d=p*Math.ceil(r[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${d}, ${p}, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `}(t,n);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=CF();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],p=Math.ceil(s[i-1]/2),d=p*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`
    vec4 ${r}(${c}) {
      int index = ${f};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});
      return ${a.texture2D}(${n}, uv);
    }
  `}(t,n)}}(e,r):a+=function e(t,n=!1){let r=t.shapeInfo.logicalShape;switch(r.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=CG(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${CH(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=CG(n);return 1===i?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:1===s?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}(t,n);case 2:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape;if(null!=i&&r4.arraysEqual(r,i)){if(n)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `;let e=i[0],t=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${a}, uv);
    }
  `}let{newShape:o,keptDims:l}=r4.squeezeShape(r);if(o.length<r.length){let r=CK(t,o);return`
      ${e(r,n)}
      float ${s}(int row, int col) {
        return ${s}(${CX(["row","col"],l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${r[1]}, 1)));
        ${CH(t)}
      }
    `;let u=i[0],h=i[1],p=CG(a);return 1===h?n?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${a}, uv);
    }
  `:1===u?n?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${r[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${a}, uv);
    }
  `:n?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
        return sampleTexture(${a}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${r[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${h}, index);
    return sampleTexture(${a}, uv);
  }
`}(t,n);case 3:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=r[1]*r[2],o=r[2],{newShape:l,keptDims:u}=r4.squeezeShape(r);if(l.length<r.length){let r=CK(t,l);return`
        ${e(r,n)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${CX(["row","col","depth"],u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${CH(t)}
      }
    `;let h=t.shapeInfo.texShape,p=h[0],d=h[1],c=t.shapeInfo.flatOffset;if(d===i&&null==c)return n?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${a}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${a}, uv);
        }
      `;if(d===o&&null==c)return n?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${r[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${a}, uv);
    }
  `;let f=CG(a);return n?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${a}Shape[1] * ${a}Shape[2];
      int stride1 = ${a}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
      return sampleTexture(${a}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${a}, uv);
      }
  `}(t,n);case 4:return function(t,n){let r=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=r[3],o=r[2]*i,l=r[1]*o,{newShape:u,keptDims:h}=r4.squeezeShape(r);if(u.length<r.length){let r=CK(t,u);return`
      ${e(r,n)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${CX(["row","col","depth","depth2"],h)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${o}, ${i}, 1)));
        ${CH(t)}
      }
    `;let p=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,c=d[0],f=d[1],m=`int stride2 = ${a}Shape[3];`,g=`int stride1 = ${a}Shape[2] * stride2;`,y=`int stride0 = ${a}Shape[1] * stride1;`;if(f===l&&null==p)return n?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&null==p)return n?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r[1]*r[2]}, ${r[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let b=CG(a);return n?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${c}, ${f}, index + ${b});
      return sampleTexture(${a}, uv);
    }
  `}(t,n);case 5:return function(t){let n=t.shapeInfo.logicalShape,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[4],i=n[3]*s,o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:h}=r4.squeezeShape(n);if(u.length<n.length){let n=CK(t,u);return`
      ${e(n)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${CX(["row","col","depth","depth2","depth3"],h)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${o}, ${i}, ${s})) +
          depth3;
        ${CH(t)}
      }
    `;let p=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,c=d[0],f=d[1];if(f===l&&null==p)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(f===s&&null==p)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]},
               ${n[2]*n[3]}, ${n[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${r}, uv);
      }
    `;let m=CG(r);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} + depth * ${i} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${r}, uv);
    }
  `}(t);case 6:return function(t){let n=t.shapeInfo.logicalShape,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),{newShape:s,keptDims:i}=r4.squeezeShape(n);if(s.length<n.length){let n=CK(t,s);return`
      ${e(n)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${CX(["row","col","depth","depth2","depth3","depth4"],i)});
      }
    `}let o=n[5],l=n[4]*o,u=n[3]*l,h=n[2]*u,p=n[1]*h;if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${CH(t)}
      }
    `;let d=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,f=c[0],m=c[1];if(m===p&&null==d)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(m===o&&null==d)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${n[1]*n[2]*n[3]*n[4]},
               ${n[2]*n[3]*n[4]},
               ${n[3]*n[4]},
               ${n[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;let g=CG(r);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${r}, uv);
    }
  `}(t);default:throw Error(`${r.length}-D input sampling is not yet supported`)}}(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Cz(e.shapeInfo.logicalShape,t.logicalShape),l=Cj(i),u=i-s,h=["x","y","z","w","u","v"];n=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${h[e+u]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+u]}`).join(", ");let d="return outputValue;",c=1===r4.sizeFromShape(e.shapeInfo.logicalShape),f=1===r4.sizeFromShape(t.logicalShape);if(1!==s||c||f){if(c&&!f)d=1===i?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(o.length){let e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+a+"AtOutCoords"}() {
      ${l} coords = getOutputCoords();
      ${n}
      vec4 outputValue = get${a}(${p});
      ${d}
    }
  `}(e,t):a+=function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&r4.arraysEqual(o,i))return`
      float ${s}() {
        return sampleTexture(${r}, resultUV);
      }
    `;let h=Cj(u),p=Cz(e.shapeInfo.logicalShape,t.logicalShape),d=u-l,c=["x","y","z","w","u","v"];n=0===l?"":u<2&&p.length>=1?"coords = 0;":p.map(e=>`coords.${c[e+d]} = 0;`).join("\n");let f="";return f=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+d]}`).join(", "),`
    float ${s}() {
      ${h} coords = getOutputCoords();
      ${n}
      return get${a}(${f});
    }
  `}(e,t)),a})(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),d=t.texShape,c=CF(),f=(r=c,`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `),m=(a=c,`${a.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${a.varyingFs} vec2 resultUV;
    ${a.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${a.defineSpecialNaN}
    ${a.defineSpecialInf}
    ${a.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${CP}
    ${CB}
    ${CW}
  `);return t.isPacked?(o=function(e,t,n){switch(e.length){case 0:return CV();case 1:var r=t,a=n;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return 1===s[0]?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:1===s[1]?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `;case 2:var i=e,o=t,l=n;let u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(r4.arraysEqual(i,o))return l?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${u[0]}, ${u[1]}));
      }
    `;let h=Math.ceil(i[1]/2);return l?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${u[0]}, ${u[1]}));

      int index = resTexRC.x * ${u[1]} + resTexRC.y;
      int r = 2 * (index / ${h});
      int c = imod(index, ${h}) * 2;

      return ivec2(r, c);
    }
  `;case 3:var p=e,d=t,c=n;if(c)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let f=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],m=Math.ceil(p[2]/2),g=m*Math.ceil(p[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${f[0]}, ${f[1]}));
      int index = resTexRC.x * ${f[1]} + resTexRC.y;

      int b = index / ${g};
      index -= b * ${g};

      int r = 2 * (index / ${m});
      int c = imod(index, ${m}) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`
      int b${t} = index / ${i};
      index -= b${t} * ${i};
    `+o,l=`b${t}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}(e,t,n)}}(t.logicalShape,d,n.enableShapeUniforms),s=c,l=`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `):(o=function(e,t,n){switch(e.length){case 0:return CV();case 1:return r=t,a=n,1===r[0]?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${r[1]}.0);
      }
    `:1===r[1]?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${r[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return resTexRC.x * ${r[1]} + resTexRC.y;
    }
  `;case 2:return s=e,i=t,o=n,r4.arraysEqual(s,i)?o?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${i[0]}, ${i[1]}));
      }
    `:1===s[1]?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${i[0]}, ${i[1]}));
        int index = resTexRC.x * ${i[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===s[0]?o?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${i[0]}, ${i[1]}));
        int index = resTexRC.x * ${i[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:o?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${i[0]}, ${i[1]}));
      int index = resTexRC.x * ${i[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `;case 3:var r,a,s,i,o,l=e,u=t,h=n;if(h){let e=CO(["r","c","d"],l);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${e}
    return ivec3(r, c, d);
  }
`}let p=CD(["r","c","d"],l);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${u[0]}, ${u[1]}));
      int index = resTexRC.x * ${u[1]} + resTexRC.y;
      ${p}
      return ivec3(r, c, d);
    }
  `;case 4:var d=e,c=t,f=n;if(f){let e=CO(["r","c","d","d2"],d);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${e}
      return ivec4(r, c, d, d2);
    }
  `}let m=CD(["r","c","d","d2"],d);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${c[0]}, ${c[1]}));
      int index = resTexRC.x * ${c[1]} + resTexRC.y;
      ${m}
      return ivec4(r, c, d, d2);
    }
  `;case 5:var g=e,y=t;let b=CD(["r","c","d","d2","d3"],g);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${y[0]},
                             ${y[1]}));

      int index = resTexRC.x * ${y[1]} + resTexRC.y;

      ${b}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `;case 6:var x=e,w=t;let v=CD(["r","c","d","d2","d3","d4"],x);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${w[0]}, ${w[1]}));
      int index = resTexRC.x * ${w[1]} + resTexRC.y;

      ${v}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `;default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,d,n.enableShapeUniforms),i=c,l=`
    void setOutput(float val) {
      ${i.output} = vec4(val, 0, 0, 0);
    }
  `),n.packedInputs&&(m+=CU),[m,f,l,h,o,p,n.userCode].join("\n")}(a,i,t),l=TQ(e.gl,o),u=e.createProgram(l);return eP.get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},CZ(e,t,u)))})(this.gpgpu,e,h,p)),f=null!=this.activeTimers;f&&(i=this.startTimer()),eP.get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(CY(t.inShapeInfos,n),CY([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===eP.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){let a=n[r],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){let{uniformShape:n}=Cq(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,a.texData.texShape[0],a.texData.texShape[1]),null!=s){if(a.isUniform){if(2>r4.sizeFromShape(a.shape))e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,r)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=r4.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){let r=t.program.customUniforms[n],s=t.customUniformLocations[n],i=a[n];if("float"===r.type)e.gl.uniform1fv(s,i);else if("vec2"===r.type)e.gl.uniform2fv(s,i);else if("vec3"===r.type)e.gl.uniform3fv(s,i);else if("vec4"===r.type)e.gl.uniform4fv(s,i);else if("int"===r.type)e.gl.uniform1iv(s,i);else if("ivec2"===r.type)e.gl.uniform2iv(s,i);else if("ivec3"===r.type)e.gl.uniform3iv(s,i);else if("ivec4"===r.type)e.gl.uniform4iv(s,i);else throw Error(`uniform type ${r.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,c,h,p,r),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(i=this.endTimer(i),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(i)}));let m=eP.getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=r4.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!eP.getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===a){let e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(eP.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=sA(()=>{if(!eP.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=eP.getBool("DEBUG");eP.set("DEBUG",!1);let t=this.abs(ox(1e-8)).dataSync()[0];if(eP.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t,n=this.texData.get(e),{shape:r,dtype:a,values:s,texture:i,usage:o,isPacked:l}=n;if(null!=i)return;let u=null!=this.activeTimers;u&&(t=r4.now());let h=n.texShape;if(null==h&&(n.texShape=h=Cy(r,l)),null!=s){let e,i=Cg(r),o=h[1],p=h[0],d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!d)&&([o,p]=Tj(h[0],h[1])),e=l?new C6(i,d):new C4(i,d);let c=d?[p,o]:h,f=this.makeTensorInfo(c,a),m=this.texData.get(f.dataId);d?m.usage=$.PIXELS:m.usage=$.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,p,s);let g=[[p,o]],y=this.runWebGLProgram(e,[f],a,g,!0),b=this.texData.get(y.dataId);n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,eP.get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(n.texture=b.texture,n.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=r4.now()-t)}else n.texture=this.acquireTexture(h,o,a,l)}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r4.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await cP(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw T1(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.");throw Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=CZ(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=sr.backend;if(!o.gpgpu.gl.isTexture(r))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(r,t,n,a,s,i);return sr.makeTensorFromDataId(l,t,n,o)}}EC.nextDataId=0;let E$="4.22.0";var EE={};function EA(){eP.set("WEBGL_FORCE_F16_TEXTURES",!0)}u(EE,"forceHalfFloat",()=>EA),u(EE,"MathBackendWebGL",()=>EC),u(EE,"setWebGLContext",()=>TV),u(EE,"GPGPUContext",()=>$x),u(EE,"gpgpu_util",()=>C5),u(EE,"webgl_util",()=>TB),ss.isBrowser()&&sB("webgl",()=>new EC,2);let ER={forceHalfFloat:EA};l(TP,EE);let EF=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ED{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=cB.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=CJ(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}let EO=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class E_{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=cB.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=CJ(a);let s="";if(r)if(0===a||1===r4.sizeFromShape(this.outputShape))s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=Cj(a);if(s=`
          ${e} coords = getOutputCoords();
        `,1===a)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=Ei("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}}function EM(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function EL(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId);return i.complexTensorInfos={real:EM({inputs:{x:r},backend:n}),imag:EM({inputs:{x:a},backend:n})},s}let Ez="return (a < 0.) ? b * a : a;",EP=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,EB="return (a < 0.) ? b * a : a;",EW=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,EU="if (isnan(x)) return x;";function EV({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=r||o.dtype;if(s.shouldExecuteOnCPU([o])&&null!=n){let e=n(s.texData.get(o.dataId).values,l);return s.makeTensorInfo(o.shape,l,e)}return i=eP.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Ek(o.shape,t):new Ec(o.shape,e),s.runWebGLProgram(i,[o],l)}}function EG({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let l,{a:u,b:h}=i;if(r&&"complex64"===u.dtype){let t=o.texData.get(u.dataId),n=o.texData.get(h.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:h.shape},i=new ED(e,u.shape,h.shape);return o.runWebGLProgram(i,[a,s],a1(n.dtype,r.dtype))}),s=EL({inputs:{real:r,imag:a},backend:o});return o.disposeIntermediateTensorInfo(r),o.disposeIntermediateTensorInfo(a),s}let p=s||a1(u.dtype,h.dtype);if(("string"===u.dtype||"string"===h.dtype||o.shouldExecuteOnCPU([u,h]))&&null!=a){let e=o.texData.get(u.dataId).values,t=o.texData.get(h.dataId).values,n="string"===u.dtype?cB.fromUint8ToStringArray(e):e,r="string"===u.dtype?cB.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,h.shape,n,r,p),l=o.makeTensorInfo(i,p);return o.texData.get(l.dataId).values=s,l}return l=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new E_(t,u.shape,h.shape,n):new ED(e,u.shape,h.shape),o.runWebGLProgram(l,[u,h],p)}}function EH(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?Ew:Eg;if("elu"===e)return t?Ex:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?Ev:Ey;if("prelu"===e)return t?EW:EB;else if("leakyrelu"===e)return t?EP:Ez;else if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Ej{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=CJ(this.outputShape.length);let u=Math.ceil((r?e[1]:e[2])/2),h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],d="",c="";i&&(d=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,c="result = activation(result);"),s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let f="rc.x",m="rc.x";e[0]<t[0]?f=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(m=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${d}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${f};
        int batchB = ${m};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${r?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${a?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${p[0]});
          result += (${h[1]} * ${p[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${s?"result += getBiasAtOutCoords();":""}

        ${c}

        setOutput(result);
      }
    `}}let Eq={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class EK{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=cB.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let EX="return a * b;";function EZ(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=cB.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new EK(Eq.REAL,a.shape,s.shape),i=new EK(Eq.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),h=EL({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),h}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=$U(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(EX,a.shape,s.shape):new ED(EX,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}function EY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=r4.sizeFromShape(a.shape),o=r4.inferFromImplicitShape(s,i),l=r4.sizeFromShape(o);r4.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=n.texData.get(a.dataId);return!u.isPacked||Cb(a.shape,o)||null!==u.texture&&Cb(u.shape,o)?(n.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}):function(e,t,n){let r=[Cf(e.shape),...Cm(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=new El([Cf(t),...Cm(t)],r),i=n.runWebGLProgram(s,[a],e.dtype,[r],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(a,o,n)}class EJ{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${r4.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}class EQ{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),h=n%4,p=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";"all"===t?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):"any"===t&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${u};
        if (${1===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${2===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${3===h}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}function E0(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=cB.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:h,outSize:p}=a[i];o="mean"===n?0===i?new EJ({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},u):new EJ({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p}):new EQ({windowSize:h,inSize:u,batchSize:e.shape[0],outSize:p},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}class E1{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=Cj(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}class E2{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=Cj(this.rank),a=Es("rc",this.rank),s=Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}function E3(e,t,n){let r=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new E2(e.shape,t):new E1(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function E4(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=e.shape.length,s=r4.parseAxisParam(t,e.shape),i=s,o=cB.getAxesPermutation(i,a),l=null!=o,u=e;l&&(u=E3(e,o,r),i=cB.getInnerMostAxes(i.length,a)),cB.assertAxesAreInnerMostDims("sum",i,a);let[h,p]=cB.computeOutAndReduceShapes(u.shape,i),d=h;n&&(d=cB.expandShapeToKeepDim(h,s));let c=r4.sizeFromShape(p),f=EY({inputs:{x:u},attrs:{shape:[r4.sizeFromShape(e.shape)/c,c]},backend:r}),m=E0(f,a2(e.dtype),"sum",r),g=EY({inputs:{x:m},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),l&&r.disposeIntermediateTensorInfo(u),g}(a,s,i,n)}function E6(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=Array(s.shape.length);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];if(r.shouldExecuteOnCPU([s])){let e=Er(r.texData.get(s.dataId).values,s.shape,s.dtype,i,o);t=r.makeTensorInfo(o,s.dtype),r.texData.get(t.dataId).values=e}else t=E3(s,i,r);return t}function E5({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u,h=e.shape.length,p=t.shape.length,d=n?e.shape[h-2]:e.shape[h-1],c=r?t.shape[p-1]:t.shape[p-2],f=n?e.shape[h-1]:e.shape[h-2],m=r?t.shape[p-2]:t.shape[p-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r4.sizeFromShape(g),x=r4.sizeFromShape(y),w=o_.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r4.assert(d===c,()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let v=n?[b,d,f]:[b,f,d],k=r?[x,m,c]:[x,c,m],I=EY({inputs:{x:e},backend:a,attrs:{shape:v}}),S=EY({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(b,x),C=n?I.shape[1]:I.shape[2],$=null!=s,E=null!=i,A="leakyrelu"===l,R=null!=l?EH(l,!0):null,F=$||E||A||null!=R;if((1===f||1===m)&&C>1e3&&!1===F){let e=I,t=S;n&&(e=E6({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=E6({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));let s=1!==m,i=1===m,o=e;s&&(o=EY({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(o));let l=t;i&&(l=EY({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(l));let h=EZ({inputs:{a:o,b:l},backend:a});u=E4({inputs:{x:h},backend:a,attrs:{axis:1===m?2:1,keepDims:!0}}),N.push(h)}else{let l=a1(e.dtype,t.dtype),h=new Ej(v,k,[T,f,m],n,r,$,R,E,A),p=[I,S];if(null!=s&&p.push(s),E&&p.push(i),A){let e=a.makeTensorInfo([],"float32",r4.createScalarValue(o,"float32"));p.push(e),N.push(e)}u=a.runWebGLProgram(h,p,l)}let D=EY({inputs:{x:u},backend:a,attrs:{shape:w}});for(let e of(N.push(u),N))a.disposeIntermediateTensorInfo(e);return D}let E8="return abs(x);",E7=EV({opSnippet:Ef+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),E9=EV({opSnippet:Ef+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),Ae="return a + b;",At=EG({opSnippet:Ae,packedOpSnippet:Ae,supportsComplex:!0,cpuKernelImpl:$w});class An{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join("\n        ")}

        float result = ${r};
        setOutput(result);
      }
    `}}class Ar{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${n.join("\n        ")}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}class Aa{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class As{constructor(e,t,n,r){let a,s;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r4.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let i=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");let o=this.outputShape,l=o.length,u=Cj(l),h=Ei("coords",l);if(1===i){let e=Cj(s=l+1);a=`
        ${e} sourceLocR = ${e}(${h.join()}, 0);
        ++${h[l-1]};
        ${e} sourceLocG = ${e}(${h.join()}, 0);
        ++${h[l-2]};
        ${e} sourceLocA = ${e}(${h.join()}, 0);
        --${h[l-1]};
        ${e} sourceLocB = ${e}(${h.join()}, 0);
        --${h[l-2]};`}else s=l,a=`
        ${u} sourceLocR = coords;
        ++${h[l-1]};
        ${u} sourceLocG = coords;
        ++${h[l-2]};
        ${u} sourceLocA = coords;
        --${h[l-1]};
        ${u} sourceLocB = coords;
        --${h[l-2]};`;let p=["x","y","z","w","u","v"].slice(0,s),d="."+p[s-1],c=p.map(e=>"int "+e),f=Ei("sourceLocR",s-1).concat("inIdx.r"),m=Ei("sourceLocG",s-1).concat("inIdx.g"),g=Ei("sourceLocB",s-1).concat("inIdx.b"),y=Ei("sourceLocA",s-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,v=r?"":`
      float getBestIndicesAChannel(${c.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${c.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${v}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${h[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${h[l-2]} < ${o[l-2]-1};
        ${a}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function Ai(e,t,n,r){let a=[n];if(cB.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!eP.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&n.push(o=e.unpackTensor(t));let[l,u]=cB.computeOutAndReduceShapes(o.shape,a),h=EY({inputs:{x:o},backend:e,attrs:{shape:[-1,r4.sizeFromShape(u)]}});n.push(h);let p=function e(t,n,r,a=null){let s=n.shape[0],i=n.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);let o=cB.computeOptimalWindowSize(i),l=new Aa({windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},r,null==a),u=[n];null!=a&&u.push(a);let h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;let p=e(t,n,r,h);return t.disposeIntermediateTensorInfo(h),p}(e,h,r);n.push(p);let d=EY({inputs:{x:p},backend:e,attrs:{shape:l}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return function e(t,n,r,a=null){let s=null!=a?a.shape:n.shape,i=s[s.length-1],o=new As(s,cB.computeOptimalWindowSize(i),r,null==a),l=null==a?[n]:[n,a],u=t.runWebGLProgram(o,l,"int32");if(u.shape.length===n.shape.length){let a=e(t,n,r,u);return t.disposeIntermediateTensorInfo(u),a}return u}(e,t,r)}let Ao=EV({opSnippet:Ef+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),Al=EV({opSnippet:Ef+"return log(x + sqrt(x * x + 1.0));"}),Au=EV({opSnippet:Ef+`
  return atan(x);
`}),Ah=EG({opSnippet:EF+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+EO+`
  return result;
`}),Ap=EV({opSnippet:Ef+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`});class Ad{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let x=4*Math.floor(s/4),w=s%4,v=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${v}
          }

          int xC = xCCorner + ${x};
          if (${1===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${2===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${3===w}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${v}
          }
        }
        setOutput(${b});
      }
    `}}class Ac{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");let v=4*Math.floor(s/4),k=s%4,I=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${I}
            }

            int xC = xCCorner + ${v};
            if (${1===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${2===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${I}
            } else if (${3===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${I}
            }
          }
        }
        setOutput(${w});
      }
    `}}class Af{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,h=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${1/(t*n)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Am{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=h-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*n*r)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ag{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],cB.assertAndGetBroadcastShape(e,t),cB.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(cB.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(cB.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class Ay{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],cB.assertAndGetBroadcastShape(e,t),cB.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(cB.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(cB.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}}class Ab{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let n=Cj(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ax.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),a=e.map((e,t)=>`sourceLoc.${Ax[t]} = start[${t}] + coords.${Ax[t]};`);t=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${a.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${r}));
      }
    `}}let Ax=["x","y","z","w","u","v"];class Aw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Cj(this.rank),n=Ei("coords",this.rank),r=Ei("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}}function Av(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=lT.parseSliceParams(a,s,i);if(lT.assertParamsValid(a,o,l),0===r4.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=$0(n.texData.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,e)}let{isPacked:u}=n.texData.get(a.dataId),h=lT.isSliceContinous(a.shape,o,l);if(u||!h){let e=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aw(l):new Ab(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=lT.computeFlatOffset(t,r4.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}let Ak=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,AI=`
  return float(int(a.r) & int(b.r));
`,AS=EG({opSnippet:"return float(a != b);",cpuKernelImpl:$G,dtype:"bool"});function AN(e){let{inputs:t,backend:n}=e,{input:r}=t;return EM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}let AT="return ceil(x);",AC=EV({opSnippet:AT,packedOpSnippet:AT,cpuKernelImpl:$N});class A${constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class AE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}class AA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function AR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}class AF{constructor(e){this.outputShape=[],this.outputShape=cB.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join("\n        ")}
      }
    `}}class AD{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=cB.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=Cj(r),s=Ei("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),h=i.join(),p=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];p+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${AO(i,l,t)}),
            vec2(${AO(u,l,t)}));
        }`}let d=o.length,c=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${AO(i,l,c)}),
          vec2(${AO(u,l,c)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${p}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}}function AO(e,t,n){let r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function A_(e){let{inputs:t,backend:n}=e,{input:r}=t;return EM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}function AM(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=r4.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);cB.assertParamsConsistent(i,s);let o=cB.computeOutShape(t.map(e=>e.shape),s);if(0===r4.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>r4.sizeFromShape(e.shape)>0);return 1===l.length?EM({inputs:{x:l[0]},backend:n}):function e(t,n,r){let a=t[0].dtype;if("complex64"===a){let a=t.map(e=>AN({inputs:{input:e},backend:r})),s=t.map(e=>A_({inputs:{input:e},backend:r})),i=e(a,n,r),o=e(s,n,r),l=EL({inputs:{real:i,imag:o},backend:r});return a.forEach(e=>r.disposeIntermediateTensorInfo(e)),s.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}let s=r.shouldExecuteOnCPU(t);if("string"===a&&(s=!0),s){let e=t.map(e=>{let t=r4.sizeFromShape(e.shape.slice(n));return EY({inputs:{x:e},backend:r,attrs:{shape:[-1,t]}})}),s=e.map(e=>({vals:r.readSync(e.dataId),shape:e.shape})),i=$T(s,cB.computeOutShape(e.map(e=>e.shape),1),a,1===e[0].shape[0]),o=cB.computeOutShape(t.map(e=>e.shape),n),l=r.makeTensorInfo(o,a,i);return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),l}let i=t.filter(e=>r4.sizeFromShape(e.shape)>0),o=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){let e=o?new Ec(t[0].shape,Eb):new Ek(t[0].shape,Eb);return r.runWebGLProgram(e,t,a)}let l=eP.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>l){let t=[];for(let a=0;a<i.length;a+=l){let s=i.slice(a,a+l);t.push(e(s,n,r))}let a=e(t,n,r);for(let e of t)r.disposeIntermediateTensorInfo(e);return a}if(o){let e=new AD(i.map(e=>e.shape),n);return r.runWebGLProgram(e,i,a)}let{tensors2D:u,outShape:h}=function(e,t,n){let r=cB.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>EY({inputs:{x:e},attrs:{shape:[-1,r4.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:r}}(i,n,r),p=new AF(u.map(e=>e.shape)),d=r.runWebGLProgram(p,u,a);u.forEach(e=>r.disposeIntermediateTensorInfo(e));let c=EY({inputs:{x:d},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(d),c}(l,s,n)}class AL{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",y="";n&&(g=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,y="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${y}
        setOutput(result);
      }
    `}}class Az{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,p=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class AP{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CJ(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<u;e++)h+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<u;e++)h+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(u+1)/2;t++){let n=2*t;if(h+=`
           xC = xCCorner + ${n*o};
           `,1===i){if(n<u&&(s%2==1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }
               `,1===o&&n>0?h+=`
                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);
                   } else {
                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xC${n} = xTexelC${n};
                 `,n+1<u)){let e=s%2==0?r4.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${n+1}.zw = vec2(0.0);
                     }
                     xTexelC${n+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);
                     } else {
                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);
                     }
                     `:h+=`
                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);
                     `):1===e?h+=`
                     xC${n+1} = xTexelC${n};
                     `:h+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${n+1}.zw = vec2(0.0);
                       }
                       xTexelC${n+1}Ready = 1;
                     }

                     xC${n+1} = xTexelC${n+1};
                     `}}else n<u&&(s%2==1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.0);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
               `,n+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {
                   xTexelC${n} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${n}.zw = vec2(0.0);
                   }
                   xTexelC${n}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {
                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${n+1}.zw = vec2(0.);
                   }
                   xTexelC${n+1}Ready = 1;
                 }

                 xC${n} = vec4(
                   xTexelC${n}.xy, xTexelC${n+1}.xy);
               `,n+1<u&&(h+=`
                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);
                 `)));n<u&&(h+=`
             wTexel = getW(r, ${n}, d1, d2);
             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,n+1<u&&(h+=`
               wTexel = getW(r, ${n+1}, d1, d2);
               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   
     }
   
     }
   `;let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:`vec4 activation(vec4 x) {
           ${n}
         }`,d="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${d}
         setOutput(result);
       }
     `}}class AB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=CJ(this.outputShape.length);let{dataFormat:n}=t,r=CF(),a="channelsLast"===n,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}}function AW(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function AU({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,h=r.texData.get(e.dataId),p=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=s){let e=AW(s.shape,f);null!=e&&(s=EY({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(null!=a){let e=AW(a.shape,f);null!=e&&(a=EY({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(!((1===d||1===c)&&p>1e3)&&h.isPacked&&f&&null!=h.texture&&u[2]%2!=0&&r4.arraysEqual(h.shape.slice(-3),u.slice(-3))){let p=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},c=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,r4.assert(Cb(h.shape,d.shape),()=>`packed reshape ${h.shape} to ${d.shape} isn't free`);let f=EY({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let g=E5({a:d,b:f,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);r4.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=c,y.shape=n.outShape,(l=EM({inputs:{x:g},backend:r})).shape=n.outShape,m.push(g)}else{let u=n.outHeight*n.outWidth,h=EY({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),p=EY({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=E5({a:f?h:p,b:f?p:h,transposeA:!f,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=EY({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(h),m.push(p),m.push(d)}for(let e of m)r.disposeIntermediateTensorInfo(e);return l}function AV({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:h,outWidth:p,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*h,g=d*p,y=[n.batchSize,m,g],b=[];if(null!=s){let e=AW(s.shape,f);null!=e&&(s=EY({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=AW(a.shape,f);null!=e&&(a=EY({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}let x=EY({inputs:{x:t},backend:r,attrs:{shape:[1,m,r4.sizeFromShape(t.shape)/m]}});b.push(x);let w=new AB(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",v),I=EY({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,C=o?EH(o,!0):null,$=new Ej(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,S,C,N,T),E=f?[I,x]:[x,I];if(a&&E.push(a),N&&E.push(s),T){let e=r.makeTensorInfo([],"float32",r4.createScalarValue(i,"float32"));E.push(e),b.push(e)}let A=r.runWebGLProgram($,E,"float32"),R=EY({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});for(let e of(b.push(A),b))r.disposeIntermediateTensorInfo(e);return R}class AG{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class AH{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Aj{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Aq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class AK{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=CJ(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}let AX=EV({opSnippet:EU+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${EO}
  return result;
`}),AZ=EV({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`});class AY{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[h,p]=n;this.outputShape=[u,h,p,l];let[d,c]=[`${i-1}.0`,`${o-1}.0`],[f,m,g]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[y,b,x]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${c} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${c}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${b};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${c} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${+("bilinear"===r)} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}!function(e){e.Prod="*",e.Sum="+"}(A||(A={}));class AJ{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===A.Prod?"1.0":"0.0",i=n?s:`getX(${AQ(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=r?`end != ${o-1}`:"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Cj(a)} coords = getOutputCoords();
        int end = ${A0(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${A0(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${AQ(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function AQ(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function A0(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function A1(e,t,n,r,a,s){let i=t.shape.length,o=cB.getAxesPermutation([r],i),l=t;null!=o&&(l=E6({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=cB.getInnerMostAxes(1,i)[0];if(u!==i-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let h=l.shape[u],p=EM({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(h))-1;t++){let r=new AJ(e,l.shape,!1,s),a=[[t]],i=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){let t=new AJ(e,l.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){let e=E6({inputs:{x:p},backend:n,attrs:{perm:cB.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}class A2{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class A3{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CJ(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${u}
        setOutput(result);
      }
    `}}class A4{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=CJ(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<h;e++)p+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<h;e++)p+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(h+1)/2;e++){let t=2*e;if(p+=`
          xC = xCCorner + ${t*l};
          `,1===o){if(t<h&&(i%2==1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===l&&t>0?p+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<h)){let e=i%2==0?r4.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:p+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?p+=`
                    xC${t+1} = xTexelC${t};
                    `:p+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<h&&(i%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<h&&(p+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<h&&(p+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<h&&(p+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  
      }
    `;let d="",c="";n&&(d=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`vec4 activation(vec4 x) {
          ${n}
        }`,c="result = activation(result);"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${c}
        setOutput(result);
      }
    `}}class A6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class A5{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class A8{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}class A7{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:h,left:p}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${h}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let A9=EV({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),Re=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Rt=EG({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:$C}),Rn=EV({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${cB.ERF_P};
  float a1 = ${cB.ERF_A1};
  float a2 = ${cB.ERF_A2};
  float a3 = ${cB.ERF_A3};
  float a4 = ${cB.ERF_A4};
  float a5 = ${cB.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),Rr=EV({opSnippet:EU+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:$$,dtype:"float32"});function Ra(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(r4.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),EY({inputs:{x:s},backend:r,attrs:{shape:o}})}let Rs="return exp(x) - 1.0;",Ri=EV({opSnippet:Rs,packedOpSnippet:Rs,cpuKernelImpl:$E});class Ro{constructor(e,t,n){let r;this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${a}.0`:"1.0";if("real"===e)r="return real * expR - imag * expI;";else if("imag"===e)r="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${r}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function Rl(e,t,n){let r=n.texData.get(e.dataId),a=r4.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=EY({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new Ro("real",o,t),u=new Ro("imag",o,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),c=EL({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);let f=EY({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}class Ru{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function Rh(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if("string"===(s=s||r4.inferDtype(a))){let e=r4.getArrayFromDType(s,r4.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new Ru(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}class Rp{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let Rd="return floor(x);",Rc=EV({opSnippet:Rd,packedOpSnippet:Rd,cpuKernelImpl:$A}),Rf=EG({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"});class Rm{constructor(e){this.variableNames=["A"];let t=CF(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class Rg{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=CF(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}let Ry=eP.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class Rb{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=Cj(n.length),s=`
    int index;`;for(let e=0;e<this.sliceDim;e++)s+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}class Rx{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Cj(this.rank),r=function(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e,0);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Rw(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=r4.parseAxisParam(i,a.shape)[0];if(eP.get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];r4.assert(r<=t-1&&r>=0,()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`)}}let u=cB.segment_util.collectGatherOpShapeInfo(a,s,l,o),h=r4.sizeFromShape(s.shape),p=[],d=EY({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=EY({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});p.push(d),p.push(c);let f=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(c),t=$F(n.bufferSync(d),e,f);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,t.dtype,t.values)}let m=new Rx(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);p.push(g);let y=EY({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}let Rv=EG({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:$D,dtype:"bool"}),Rk=EG({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:$O}),RI=EV({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RS=EV({opSnippet:"return float(isinf(x));",dtype:"bool"}),RN=EV({opSnippet:"return float(isnan(x));",dtype:"bool"}),RT=EG({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:$_,dtype:"bool"}),RC=EG({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:$M,dtype:"bool"}),R$=EV({opSnippet:EU+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:$z}),RE=EV({opSnippet:EU+`
  return log(1.0 + x);
`}),RA=EG({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),RR=EV({opSnippet:"return float(!(x >= 1.0));"}),RF=EG({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"});class RD{constructor(e,t,n,r,a){let s;this.variableNames=["x"],this.outputShape=[];let i=e[3]-1;this.outputShape=e;let o=`float(${n}) + float(${r}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${s};
        setOutput(val);
      }
    `}}class RO{constructor(e,t,n,r,a){let s;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e[3]-1;this.outputShape=e;let o=`float(${n}) + float(${r}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${s};
        setOutput(result);
      }
    `}}class R_{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}function RM(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{reductionIndices:i,keepDims:o}=a,l=s.shape.length,u=r4.parseAxisParam(i,s.shape),h=u,p=cB.getAxesPermutation(h,l),d=null!=p,c=r.shouldExecuteOnCPU([s]),f=s;if(d){if(c){let e=r.texData.get(f.dataId).values,t=Array(l);for(let e=0;e<t.length;e++)t[e]=s.shape[p[e]];let n=Er(e,s.shape,s.dtype,p,t);f=r.makeTensorInfo(t,s.dtype),r.texData.get(f.dataId).values=n}else f=E3(s,p,r);h=cB.getInnerMostAxes(h.length,l)}cB.assertAxesAreInnerMostDims("max",h,l);let[m,g]=cB.computeOutAndReduceShapes(f.shape,h),y=m;if(o&&(y=cB.expandShapeToKeepDim(m,u)),c){let e=$P(r.texData.get(f.dataId).values,r4.sizeFromShape(g),y,s.dtype);t=r.makeTensorInfo(y,s.dtype),r.texData.get(t.dataId).values=e}else t=function(e,t,n,r){let a=r4.sizeFromShape(t),s=r4.sizeFromShape(e.shape),i=EY({inputs:{x:e},attrs:{shape:[s/a,a]},backend:r}),o=E0(i,e.dtype,"max",r),l=EY({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(f,g,y,r);return d&&r.disposeIntermediateTensorInfo(f),t}let RL=EG({opSnippet:EF+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+EO+`
  return result;
`,cpuKernelImpl:$B});class Rz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class RP{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=o-1-e.padInfo.front,p=l-1-e.padInfo.top,d=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let RB=EG({opSnippet:EF+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+EO+`
  return result;
`,cpuKernelImpl:$W});class RW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Cj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=+("reflect"!==n);if(1===r){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}}class RU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Cj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Ei("rc",r),l=Ei("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=+("reflect"!==n),d="";if(1===r){let e=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[r-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{let e=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${o[r-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${e}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${o[r-1]} += 1;
          if(${u}) {
            ${e}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}}let RV=EG({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+EO+`
  return result;
`});class RG{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}let RH=EG({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),Rj="return a - b;",Rq=EG({opSnippet:Rj,packedOpSnippet:Rj,supportsComplex:!0,cpuKernelImpl:Ee});function RK(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=r4.parseAxisParam([s],a.shape),o=RM({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=cB.expandShapeToKeepDim(o.shape,i),u=EY({inputs:{x:o},backend:n,attrs:{shape:l}}),h=Rq({inputs:{a:a,b:u},backend:n}),p=Rr({inputs:{x:h},backend:n}),d=E4({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),c=EY({inputs:{x:d},backend:n,attrs:{shape:l}}),f=RH({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}let RX=Ef+`
  return -x;
`,RZ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RY=fH.nonMaxSuppressionV3Impl,RJ=fH.nonMaxSuppressionV4Impl,RQ=fH.nonMaxSuppressionV5Impl;class R0{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}}function R1(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"!==r.dtype)return Rh({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n});{let e=AN({inputs:{input:r},backend:n}),t=R1({inputs:{x:e},backend:n}),a=A_({inputs:{input:r},backend:n}),s=R1({inputs:{x:a},backend:n}),i=EL({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}}class R2{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Cj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(1===r){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}}class R3{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let r=e.length,a=Cj(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=Ei("rc",r),l=Ei("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${u}) {
      `,1===r?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;
         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===r?2:4;e<t;e++)c+=`
        ${p[e]}
        if (${d}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${h});
        }
      `;c+=1===r?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}}let R4=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===r4.sizeFromShape(a.shape))return Rh({backend:n,attrs:{shape:s.map((e,t)=>e[0]+a.shape[t]+e[1]),value:i,dtype:a.dtype}});let o=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new R3(a.shape,s,i):new R2(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},R6=EG({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+EO+`
  return result;
`}),R5=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=$X(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},R8=EV({opSnippet:"return 1.0 / x;"}),R7=EV({opSnippet:Ef+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),R9=EV({opSnippet:Ef+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`});class Fe{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class Ft{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}class Fn{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class Fr{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class Fa{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u=[r&&t>1?i-1:i,r&&n>1?o-1:o],h=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}class Fs{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],h=o[1]/l[1],p=1/u,d=1/h,c=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}class Fi{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=Cj(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}class Fo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Ei("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Cj(n);function o(n){let r=e.map((r,a)=>{var s,i;return s=a,i=n,-1!==t.indexOf(s)&&1!==e[s]?`${e[s]} - ${i[s]} - 1`:`${i[s]}`}),a=r.join(","),s=r.slice(-2).join(",");return`getChannel(getX(${a}), vec2(${s}))`}1===n?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};
          }
          if(${s}) {
            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};
            if(${a}) {
              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};
            }
          }
          setOutput(result);
        }
    `}}class Fl{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let Fu=EV({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),Fh=EV({opSnippet:"return inversesqrt(x);",cpuKernelImpl:$Z});class Fp{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=Cj(a.length),u=Cj(s.length),h="";1===n?h="i":2===n&&(h="i, j");let p=`getIndices(${h})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}class Fd{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=Cj(a.length),u=Cj(s.length),h="";1===n?h="i":2===n&&(h="i, j");let p=`getIndices(${h})`,d="";1===r?d="i":2===r&&(d="i, coords[1]");let c=`getUpdates(${d})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}class Fc{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===eP.getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${s}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===r?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}class Ff{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=Cj(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}let Fm=EV({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${cB.SELU_SCALEALPHA};
  float scale = ${cB.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),Fg=EV({opSnippet:EU+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:$J}),Fy=EV({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),Fb=EV({opSnippet:EU+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${EO}
  return result;
`}),Fx=EV({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Fw=EV({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),Fv="return sqrt(x);",Fk=EV({opSnippet:Fv,packedOpSnippet:Fv,cpuKernelImpl:$4}),FI=EV({opSnippet:"return x * x;"}),FS="return (a - b) * (a - b);",FN=EG({opSnippet:FS,packedOpSnippet:FS});class FT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=Cj(n.length),s=Cj(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}let FC=EV({opSnippet:"return tan(x);"}),F$=EV({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`});class FE{constructor(e,t){this.variableNames=["A"];let n=Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=Cj(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function FA(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>r4.decodeString(e)):e,r=Et(ot(a.shape,a.dtype,t),s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}let i=new FE(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}class FR{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class FF{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function FD(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function FO(e){let t=1;for(;t<e;)t*=2;return t}class F_{constructor(e,t,n,r,a,s){let i;switch(this.variableNames=["Image","Transforms"],this.outputShape=s,r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===n?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}class FM{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u=`
        sumValue += dot(values, segFilter);
    `,h="";a%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}for(let e of[{kernelName:rB,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:p}=r;return E5({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:h})}},{kernelName:e1,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=$Q(r.texData.get(a.dataId).values);return r.makeTensorInfo(a.shape,a.dtype,e)}return t=eP.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ek(a.shape,E8):new Ec(a.shape,E8),r.runWebGLProgram(t,[a],a.dtype)}},{kernelName:e2,backendName:"webgl",kernelFunc:E7},{kernelName:e3,backendName:"webgl",kernelFunc:E9},{kernelName:e4,backendName:"webgl",kernelFunc:At},{kernelName:e6,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t;if(1===n.length)return EM({inputs:{x:n[0]},backend:r});if(n.length>eP.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(n.length/2),a=e({inputs:n.slice(0,t),backend:r}),s=e({inputs:n.slice(t),backend:r});return e({inputs:[a,s],backend:r})}let a=n.map(e=>e.dtype).reduce((e,t)=>a1(e,t)),s=n.map(e=>e.shape),i=eP.getBool("WEBGL_PACK")?new Ar(n[0].shape,s):new An(n[0].shape,s);return r.runWebGLProgram(i,n,a)}},{kernelName:e5,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=r4.parseAxisParam(i,s.shape),h=u,p=cB.getAxesPermutation(h,l),d=s;null!=p&&(d=E6({inputs:{x:s},backend:r,attrs:{perm:p}}),h=cB.getInnerMostAxes(h.length,l)),cB.assertAxesAreInnerMostDims("all",h,l);let[c,f]=cB.computeOutAndReduceShapes(d.shape,h),m=EY({inputs:{x:d},backend:r,attrs:{shape:[-1,r4.sizeFromShape(f)]}}),g=E0(m,m.dtype,"all",r);return t=o?EY({inputs:{x:g},backend:r,attrs:{shape:cB.expandShapeToKeepDim(c,u)}}):EY({inputs:{x:g},backend:r,attrs:{shape:c}}),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),null!=p&&r.disposeIntermediateTensorInfo(d),t}},{kernelName:e8,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=r4.parseAxisParam(i,s.shape),h=u,p=cB.getAxesPermutation(h,l),d=s;null!=p&&(d=E6({inputs:{x:s},backend:r,attrs:{perm:p}}),h=cB.getInnerMostAxes(h.length,l)),cB.assertAxesAreInnerMostDims("any",h,l);let[c,f]=cB.computeOutAndReduceShapes(d.shape,h),m=EY({inputs:{x:d},backend:r,attrs:{shape:[-1,r4.sizeFromShape(f)]}}),g=E0(m,m.dtype,"any",r);return t=o?EY({inputs:{x:g},backend:r,attrs:{shape:cB.expandShapeToKeepDim(c,u)}}):EY({inputs:{x:g},backend:r,attrs:{shape:c}}),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),null!=p&&r.disposeIntermediateTensorInfo(d),t}},{kernelName:e7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=r4.parseAxisParam(s,a.shape),o=cB.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=E6({inputs:{x:a},backend:n,attrs:{perm:o}})),i=cB.getInnerMostAxes(i.length,l.shape.length)),cB.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let h=Ai(n,l,i[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},{kernelName:e9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=r4.parseAxisParam(s,a.shape),o=cB.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=E6({inputs:{x:a},backend:n,attrs:{perm:o}})),i=cB.getInnerMostAxes(i.length,l.shape.length)),cB.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let h=Ai(n,l,i[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},{kernelName:te,backendName:"webgl",kernelFunc:Ao},{kernelName:tt,backendName:"webgl",kernelFunc:Al},{kernelName:tn,backendName:"webgl",kernelFunc:Au},{kernelName:ta,backendName:"webgl",kernelFunc:Ah},{kernelName:tr,backendName:"webgl",kernelFunc:Ap},{kernelName:ts,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;CA(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;r4.assert(cB.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=cB.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&r4.arraysEqual(u.inShape,u.outShape))return EM({inputs:{x:a},backend:n});let h=new Ad(u,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},{kernelName:to,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=new Ac(cB.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},{kernelName:tl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,h=new Am(cB.computePool3DInfo(s.shape,i,o,[1,1,1],l,u));return n.runWebGLProgram(h,[a],s.dtype)}},{kernelName:ti,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t;CA([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=r,u=new Af(cB.computePool2DInfo(s.shape,i,o,1,l));return n.runWebGLProgram(u,[a],s.dtype)}},{kernelName:tu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return E5({a:a,b:s,transposeA:i,transposeB:o,backend:n})}},{kernelName:t2,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;r4.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r4.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r4.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],h=null;null!=i&&(h=i.shape,u.push(i));let p=null;null!=o&&(p=o.shape,u.push(o));let d=eP.getBool("WEBGL_PACK_NORMALIZATION")?new Ay(r.shape,a.shape,s.shape,h,p,l):new Ag(r.shape,a.shape,s.shape,h,p,l);return t.runWebGLProgram(d,u,u[0].dtype)}},{kernelName:th,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;r4.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=cB.getReshaped(a.shape,s,o),u=cB.getPermuted(l.length,s.length),h=cB.getReshapedPermuted(a.shape,s,o),p=cB.getSliceBeginCoords(i,s.length),d=cB.getSliceSize(h,i,s.length),c=[],f=EY({inputs:{x:a},backend:n,attrs:{shape:l}}),m=E6({inputs:{x:f},backend:n,attrs:{perm:u}}),g=EY({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Av({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},{kernelName:tp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=$v(n.readSync(a.dataId),n.readSync(s.dataId),s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},{kernelName:td,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{a:a,b:s}=n,i=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=eP.getNumber("WEBGL_VERSION");if(r.shouldExecuteOnCPU([a,s])||1===o){let e=r.texData.get(a.dataId).values,t=r.texData.get(s.dataId).values,[n,i]=$I(a.shape,s.shape,e,t,a.dtype),o=r.makeTensorInfo(i,a.dtype);return r.texData.get(o.dataId).values=n,o}return t=i?new E_(Ak,a.shape,s.shape,!1):new ED(AI,a.shape,s.shape),r.runWebGLProgram(t,[a,s],a.dtype)}},{kernelName:tf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=cB.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:tm,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return EM({inputs:{x:s},backend:r});let t=h1(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=EL({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=AN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!r4.hasEncodingLoss(s.dtype,i)){let e=EM({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([s])){let[e,t,n]=$S(r.texData.get(s.dataId).values,s.shape,s.dtype,i);return r.makeTensorInfo(e,t,n)}if("int32"===i){let e=new Ec(s.shape,"return float(int(x));"),t=r.runWebGLProgram(e,[s],"int32");return{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}if("bool"===i){let e=r.makeTensorInfo([],"bool",r4.getTypedArrayFromDType("bool",1)),t=AS({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},{kernelName:tg,backendName:"webgl",kernelFunc:AC},{kernelName:ty,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;return t=eP.getBool("WEBGL_PACK_CLIP")?new AE(s.shape):new A$(s.shape),r.runWebGLProgram(t,[s],s.dtype,[[i],[o]])}},{kernelName:tb,backendName:"webgl",kernelFunc:EL},{kernelName:tx,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new AA(r.shape),i=[AR(r,a.complexTensorInfos.real),AR(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},{kernelName:tw,backendName:"webgl",kernelFunc:AM},{kernelName:tv,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:h,dimRoundingMode:p}=a,d=cB.convertConv2DDataFormat(u),c=cB.computeConv2DInfo(s.shape,i.shape,o,h,l,p,!1,d);if(1===c.filterHeight&&1===c.filterWidth&&1===c.dilationHeight&&1===c.dilationWidth&&1===c.strideHeight&&1===c.strideWidth&&("SAME"===c.padInfo.type||"VALID"===c.padInfo.type))t=AU({x:s,filter:i,convInfo:c,backend:r});else if(c.strideWidth<=2&&"channelsLast"===d&&eP.getBool("WEBGL_EXP_CONV")){let e=new AP(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=r.runWebGLProgram(e,[s,i],"float32",n)}else if(eP.getBool("WEBGL_CONV_IM2COL"))t=AV({x:s,filter:i,convInfo:c,backend:r});else{let e=new AL(c);t=r.runWebGLProgram(e,[s,i],"float32")}let f=EY({inputs:{x:t},backend:r,attrs:{shape:c.outShape}});return r.disposeIntermediateTensorInfo(t),f}},{kernelName:tk,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,p=cB.convertConv2DDataFormat(l),d=new AG(cB.computeConv2DInfo(a.shape,h,i,1,o,u,!1,p));return n.runWebGLProgram(d,[a,s],"float32")}},{kernelName:tI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,p=cB.convertConv2DDataFormat(u),d=cB.computeConv2DInfo(i,s.shape,o,1,l,h,!1,p);if(eP.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){let e=[[d.strideHeight,d.strideWidth]],t=new AK(d);return n.runWebGLProgram(t,[a,s],"float32",e)}{let e=new AH(d);return n.runWebGLProgram(e,[a,s],"float32")}}},{kernelName:tS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=new Az(cB.computeConv3DInfo(a.shape,s.shape,i,l,o));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tN,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=new Aj(cB.computeConv3DInfo(a.shape,l,i,1,o));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=new Aq(cB.computeConv3DInfo(l,s.shape,o,1,i));return n.runWebGLProgram(u,[a,s],"float32")}},{kernelName:tC,backendName:"webgl",kernelFunc:AX},{kernelName:t$,backendName:"webgl",kernelFunc:AZ},{kernelName:tR,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,h=new AY(a.shape,s.shape,o,l,u);return n.runWebGLProgram(h,[a,s,i],"float32")}},{kernelName:tE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return A1(A.Prod,a,n,s,i,o)}},{kernelName:tA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return A1(A.Sum,a,n,s,i,o)}},{kernelName:tF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=$v(n.readSync(a.dataId),n.readSync(s.dataId),s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=$k(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},{kernelName:tD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],h="NHWC"===i?a.shape[3]:a.shape[1],p=l*s,d=u*s,c=h/(s*s),f=new A2("NHWC"===i?[o,p,d,c]:[o,c,p,d],s,i);return n.runWebGLProgram(f,[a],a.dtype)}},{kernelName:tO,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u,dimRoundingMode:h}=a,p=u;null==p&&(p=[1,1]),r4.assert(cB.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);let d=cB.computeConv2DInfo(s.shape,i.shape,o,p,l,h,!0);t=eP.getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new A4(d):new A3(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return r.runWebGLProgram(t,[s,i],"float32",c)}},{kernelName:t_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,p=new A6(cB.computeConv2DInfo(a.shape,h,i,o,l,u,!0));return n.runWebGLProgram(p,[a,s],"float32")}},{kernelName:tM,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,p=new A5(cB.computeConv2DInfo(h,s.shape,i,o,l,u,!0));return n.runWebGLProgram(p,[a,s],"float32")}},{kernelName:tL,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=r4.sizeFromShape(r.shape),i=EY({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new A8(s),l=n.runWebGLProgram(o,[i],i.dtype),u=EY({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},{kernelName:tz,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,h=cB.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),p=new A7(h),d=EY({inputs:{x:t=r.runWebGLProgram(p,[s,i],"float32")},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),d}},{kernelName:tV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,{allDims:s,summedDims:i,idDims:o}=cB.decodeEinsumEquation(a,t.length);cB.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=cB.getEinsumComputePath(i,o),h=u.length,p=null,d=s.length,c=[];for(let e=0;e<h;++e){for(let r of u[e]){let e,{permutationIndices:a,expandDims:s}=cB.getEinsumPermutation(d,o[r]);cB.isIdentityPermutation(a)?e=t[r]:(e=E6({inputs:{x:t[r]},backend:n,attrs:{perm:a}}),c.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);r4.arraysEqual(e.shape,i)||(e=EY({inputs:{x:e},backend:n,attrs:{shape:i}}),c.push(e)),null===p?p=e:(p=EZ({inputs:{a:e,b:p},backend:n}),c.push(p))}e<h-1&&(l[e]>=0&&(p=E4({inputs:{x:p},backend:n,attrs:{axis:l[e]-(s.length-d),keepDims:!1}}),c.push(p)),d--)}for(let e of c)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},{kernelName:tG,backendName:"webgl",kernelFunc:A9},{kernelName:tH,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(Re,r.shape,a.shape):new ED("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},{kernelName:tq,backendName:"webgl",kernelFunc:Rt},{kernelName:tj,backendName:"webgl",kernelFunc:Rn},{kernelName:tK,backendName:"webgl",kernelFunc:Rr},{kernelName:tX,backendName:"webgl",kernelFunc:Ra},{kernelName:tZ,backendName:"webgl",kernelFunc:Ri},{kernelName:tY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return Rl(r,!1,n)}},{kernelName:tJ,backendName:"webgl",kernelFunc:Rh},{kernelName:tQ,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=new Rp(n.shape);return t.runWebGLProgram(r,[n],n.dtype)}},{kernelName:t0,backendName:"webgl",kernelFunc:Rc},{kernelName:t1,backendName:"webgl",kernelFunc:Rf},{kernelName:rz,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,u],d=[h,u,s];if(l||i){let e=eP.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==o||e!==Ry)&&(Ry=e,o=document.createElement("canvas").getContext("2d",{willReadFrequently:Ry})),o.canvas.width=u,o.canvas.height=h,o.drawImage(a,0,0,u,h),a=o.canvas}let c=n.makeTensorInfo(p,"int32");n.texData.get(c.dataId).usage=$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(c.dataId),a);let f=eP.getBool("WEBGL_PACK")?new Rg(d):new Rm(d),m=n.runWebGLProgram(f,[c],"int32");return n.disposeData(c.dataId),m}},{kernelName:rW,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dataFormat:p,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=cB.convertConv2DDataFormat(p),y=cB.computeConv2DInfo(s.shape,i.shape,u,d,h,c,!1,g),b=[],x=null!=o,w=null!=l,v="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=EY({inputs:{x:e},backend:r,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(o,p)),w&&e.push(t(l,p)),v){let t=r.makeTensorInfo([],"float32",r4.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1===y.filterHeight&&1===y.filterWidth&&1===y.dilationHeight&&1===y.dilationWidth&&1===y.strideHeight&&1===y.strideWidth&&("SAME"===y.padInfo.type||"VALID"===y.padInfo.type))t=AU({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(y.strideWidth<=2&&"channelsLast"===g&&eP.getBool("WEBGL_EXP_CONV")){let e=new AP(y,x,f?EH(f,!0):null,w,v),n=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=k();t=r.runWebGLProgram(e,a,"float32",n)}else if(eP.getBool("WEBGL_CONV_IM2COL"))t=AV({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=new AL(y,x,f?EH(f,!1):null,w,v),n=k();t=r.runWebGLProgram(e,n,"float32")}let I=EY({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return b.push(t),b.forEach(e=>r.disposeIntermediateTensorInfo(e)),I}},{kernelName:rU,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:h,dilations:p,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=a,m=[],g=p;null==g&&(g=[1,1]),r4.assert(cB.eitherStridesOrDilationsAreOne(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let y=cB.computeConv2DInfo(s.shape,i.shape,u,g,h,d,!0),b=eP.getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=c?EH(c,b):null,w=[s,i],v=null!=o,k=null!=l,I="leakyrelu"===c;if(v&&w.push(o),k&&w.push(l),I){let e=r.makeTensorInfo([],"float32",r4.createScalarValue(f,"float32"));w.push(e),m.push(e)}t=b?new A4(y,v,x,k,I):new A3(y,v,x,k,I);let S=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=r.runWebGLProgram(t,w,"float32",S);return m.forEach(e=>r.disposeIntermediateTensorInfo(e)),N}},{kernelName:t4,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=r4.sizeFromShape(r.shape),[l,u,h,p]=cB.prepareAndValidate(r,a),d=EY({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),c=EY({inputs:{x:r},backend:n,attrs:{shape:[r4.sizeFromShape(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=$R(n.readSync(a.dataId),n.bufferSync(r),r.dtype,u,i,h,p,r.shape,o);return n.makeTensorInfo(l,r.dtype,e.values)}let f=new Rb(i,p,[u,h],r.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=EY({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},{kernelName:t3,backendName:"webgl",kernelFunc:Rw},{kernelName:t6,backendName:"webgl",kernelFunc:Rv},{kernelName:t5,backendName:"webgl",kernelFunc:Rk},{kernelName:t8,backendName:"webgl",kernelFunc:EM},{kernelName:t7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return Rl(r,!0,n)}},{kernelName:t9,backendName:"webgl",kernelFunc:A_},{kernelName:ne,backendName:"webgl",kernelFunc:RI},{kernelName:nt,backendName:"webgl",kernelFunc:RS},{kernelName:nn,backendName:"webgl",kernelFunc:RN},{kernelName:nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",r4.createScalarValue(s,"float32")),o=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(EP,a.shape,i.shape):new ED(Ez,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},{kernelName:na,backendName:"webgl",kernelFunc:RT},{kernelName:ns,backendName:"webgl",kernelFunc:RC},{kernelName:ni,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=$L(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},{kernelName:no,backendName:"webgl",kernelFunc:R$},{kernelName:nl,backendName:"webgl",kernelFunc:RE},{kernelName:nu,backendName:"webgl",kernelFunc:RA},{kernelName:nh,backendName:"webgl",kernelFunc:RR},{kernelName:np,backendName:"webgl",kernelFunc:RF},{kernelName:nm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=eP.getBool("WEBGL_PACK_NORMALIZATION")?new RO(a.shape,s,i,o,l):new RD(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},{kernelName:ng,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:h}=r,p=new R_(a.shape,o,l,u,h);return n.runWebGLProgram(p,[a,s,i],a.dtype)}},{kernelName:nb,backendName:"webgl",kernelFunc:RM},{kernelName:nx,backendName:"webgl",kernelFunc:RL},{kernelName:nw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;CA(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;r4.assert(cB.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=cB.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&r4.arraysEqual(u.inShape,u.outShape))return EM({inputs:{x:a},backend:n});let h=new Ad(u,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},{kernelName:nk,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=new Ac(cB.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},{kernelName:nI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r,h=cB.computePool3DInfo(s.shape,i,o,[1,1,1],l,u),p=new Ac(h,"max",!0),d=n.runWebGLProgram(p,[s],s.dtype),c=new RP(h),f=n.runWebGLProgram(c,[a,d],s.dtype);return n.disposeIntermediateTensorInfo(d),f}},{kernelName:nv,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t;CA([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,p=cB.computePool2DInfo(s.shape,o,l,1,u,h),d=new Ad(p,"max",!0),c=n.runWebGLProgram(d,[s],s.dtype),f=new Rz(p),m=n.runWebGLProgram(f,[a,c],s.dtype);return n.disposeIntermediateTensorInfo(c),m}},{kernelName:nS,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;r4.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let l=[1,1];r4.assert(cB.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let u=cB.computePool2DInfo(r.shape,a,s,l,i),[h,p]=function(e,t,n,r){let a=new Ad(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Ad(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,u,n);return[h,p]}},{kernelName:nN,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=r.shape.length,o=r4.parseAxisParam(s,r.shape),l=o,u=cB.getAxesPermutation(l,i),h=null!=u,p=n.shouldExecuteOnCPU([r]),d=[],c=r;if(h){if(p){let e=n.texData.get(c.dataId).values,t=Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[u[e]];let a=Er(e,r.shape,r.dtype,u,t);c=n.makeTensorInfo(t,r.dtype),n.texData.get(c.dataId).values=a}else c=E3(r,u,n);d.push(c),l=cB.getInnerMostAxes(l.length,i)}cB.assertAxesAreInnerMostDims("sum",l,i);let[f,m]=cB.computeOutAndReduceShapes(c.shape,l),g=f;a&&(g=cB.expandShapeToKeepDim(f,o));let y=function(e,t,n,r){let a=r4.sizeFromShape(t),s=r4.sizeFromShape(e.shape),i=EY({inputs:{x:e},attrs:{shape:[s/a,a]},backend:r}),o=E0(i,"float32","mean",r),l=EY({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(c,m,g,n);for(let e of d)n.disposeIntermediateTensorInfo(e);return y}},{kernelName:nT,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=r4.parseAxisParam(i,s.shape),h=u,p=cB.getAxesPermutation(h,l),d=s;null!=p&&(d=E6({inputs:{x:s},backend:r,attrs:{perm:p}}),h=cB.getInnerMostAxes(h.length,s.shape.length)),cB.assertAxesAreInnerMostDims("min",h,l);let[c,f]=cB.computeOutAndReduceShapes(d.shape,h),m=EY({inputs:{x:d},backend:r,attrs:{shape:[-1,r4.sizeFromShape(f)]}}),g=E0(m,m.dtype,"min",r);return t=o?EY({inputs:{x:g},backend:r,attrs:{shape:cB.expandShapeToKeepDim(c,u)}}):EY({inputs:{x:g},backend:r,attrs:{shape:c}}),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),null!=p&&r.disposeIntermediateTensorInfo(d),t}},{kernelName:nC,backendName:"webgl",kernelFunc:RB},{kernelName:n$,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RU(r.shape,a,s):new RW(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},{kernelName:nE,backendName:"webgl",kernelFunc:RV},{kernelName:nA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:RK({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=new RG(l.shape[0],l.shape[1],s),h=n.runWebGLProgram(u,[l],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(l),h}},{kernelName:nR,backendName:"webgl",kernelFunc:EZ},{kernelName:nF,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let[e,t]=$V(r.texData.get(a.dataId).values,a.shape,a.dtype);return r.makeTensorInfo(t,a.dtype,e)}return t=eP.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ek(a.shape,RZ):new Ec(a.shape,RX),r.runWebGLProgram(t,[a],a.dtype)}},{kernelName:nO,backendName:"webgl",kernelFunc:function(e){cB.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,{selectedIndices:u}=RY(n.readSync(a.dataId),n.readSync(s.dataId),i,o,l);return n.makeTensorInfo([u.length],"int32",new Int32Array(u))}},{kernelName:n_,backendName:"webgl",kernelFunc:function(e){cB.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,{selectedIndices:h,validOutputs:p}=RJ(n.readSync(a.dataId),n.readSync(s.dataId),i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},{kernelName:nM,backendName:"webgl",kernelFunc:function(e){cB.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(a.dataId),{selectedIndices:p,selectedScores:d}=RQ(h,n.readSync(s.dataId),i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([d.length],"float32",new Float32Array(d))]}},{kernelName:nD,backendName:"webgl",kernelFunc:AS},{kernelName:nz,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=r,u=r4.sizeFromShape(a.shape),h=new R0(u,i,o,l),p=EY({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(h,[p],s);n.disposeIntermediateTensorInfo(p);let c=EY({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),c}},{kernelName:nL,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)return Rh({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r});{let t=AN({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=A_({inputs:{input:a},backend:r}),i=R1({inputs:{x:s},backend:r}),o=EL({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}}},{kernelName:nP,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Ra({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{r4.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),r4.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=AM({inputs:t.map(e=>{let t=Ra({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}},{kernelName:nB,backendName:"webgl",kernelFunc:R4},{kernelName:nU,backendName:"webgl",kernelFunc:R6},{kernelName:nV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=eP.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(EW,r.shape,a.shape):new ED(EB,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},{kernelName:nG,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],h=r4.parseAxisParam(i,s.shape),p=h,d=cB.getAxesPermutation(p,l),c=s;if(null!=d&&(c=E6({inputs:{x:s},backend:r,attrs:{perm:d}}),p=cB.getInnerMostAxes(p.length,l),u.push(c)),cB.assertAxesAreInnerMostDims("prod",p,l),r.shouldExecuteOnCPU([c])){let e=r.texData.get(c.dataId).values,{outVals:n,outShape:a,outDtype:s}=$H(c.shape,c.dtype,e,p);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=cB.computeOutAndReduceShapes(c.shape,p),a=EY({inputs:{x:c},backend:r,attrs:{shape:[-1,r4.sizeFromShape(n)]}}),i=E0(a,a2(s.dtype),"prod",r);t=EY({inputs:{x:i},backend:r,attrs:{shape:e}}),u.push(a),u.push(i)}if(o){u.push(t);let e=cB.expandShapeToKeepDim(t.shape,h);t=EY({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),t}},{kernelName:nH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,l=a.map(e=>n.readSync(e.dataId)),u=a.map(e=>e.shape),h=n.readSync(s.dataId),p=n.readSync(i.dataId),[d,c,f]=$j(l,u,h,s.shape,s.dtype,p,i.shape,o),m=d.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}},{kernelName:nj,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=$q(i,r.shape,r.dtype,o,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([h.length],r.dtype,h)]}},{kernelName:nq,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),h=n.readSync(s.dataId),p=n.readSync(i.dataId),d=o.map(e=>n.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=$K(u,a.shape,h,s.shape,s.dtype,p,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}},{kernelName:nK,backendName:"webgl",kernelFunc:R5},{kernelName:nX,backendName:"webgl",kernelFunc:AN},{kernelName:tU,backendName:"webgl",kernelFunc:RH},{kernelName:nZ,backendName:"webgl",kernelFunc:R8},{kernelName:nY,backendName:"webgl",kernelFunc:R7},{kernelName:n3,backendName:"webgl",kernelFunc:R9},{kernelName:nJ,backendName:"webgl",kernelFunc:EY},{kernelName:n1,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=eP.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ft(a.shape,l,u,s,i):new Fe(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],"float32")}},{kernelName:n2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Fn(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},{kernelName:nQ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,h=eP.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Fa(a.shape,l,u,s,i):new Fr(a.shape,l,u,s,i);return n.runWebGLProgram(h,[a],a.dtype)}},{kernelName:n0,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Fs(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},{kernelName:n4,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=r4.parseAxisParam(s,a.shape);if(0===i)return EM({inputs:{x:a},backend:n});let l=eP.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fo(a.shape,o):new Fi(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},{kernelName:rP,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=new Fl(r.shape,s),[l,u]=cB.getImageCenter(i,r.shape[1],r.shape[2]),h=[[l,u,Math.sin(a),Math.cos(a)]];return n.runWebGLProgram(o,[r],r.dtype,h)}},{kernelName:n6,backendName:"webgl",kernelFunc:Fu},{kernelName:n5,backendName:"webgl",kernelFunc:Fh},{kernelName:n8,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{indices:s,updates:i}=n,{shape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=cB.calculateShapes(i,s,o),c=[d/h,h];if(0===d)return r.makeTensorInfo(o,s.dtype);let f=EY({inputs:{x:s},backend:r,attrs:{shape:[u,l]}}),m=EY({inputs:{x:i},backend:r,attrs:{shape:[u,h]}}),g=r.makeTensorInfo([],"float32",new Float32Array([0]));t=eP.getBool("WEBGL_PACK")?new Fd(u,l,f.shape.length,m.shape.length,p,c):new Fp(u,l,f.shape.length,m.shape.length,p,c);let y=r.runWebGLProgram(t,[m,f,g],m.dtype),b=EY({inputs:{x:y},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(g),b}},{kernelName:n9,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new Fc(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}},{kernelName:re,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Ff(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],a1(a.dtype,s.dtype))}},{kernelName:rt,backendName:"webgl",kernelFunc:Fm},{kernelName:ri,backendName:"webgl",kernelFunc:Fg},{kernelName:rs,backendName:"webgl",kernelFunc:Fy},{kernelName:rr,backendName:"webgl",kernelFunc:Fb},{kernelName:ra,backendName:"webgl",kernelFunc:Fx},{kernelName:rn,backendName:"webgl",kernelFunc:Av},{kernelName:rd,backendName:"webgl",kernelFunc:RK},{kernelName:ro,backendName:"webgl",kernelFunc:Fw},{kernelName:rh,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;r4.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],h=R4({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=cB.getReshaped(h.shape,s,o,!1),d=cB.getPermuted(p.length,s.length,!1),c=cB.getReshapedPermuted(h.shape,s,o,!1),f=EY({inputs:{x:h},backend:n,attrs:{shape:p}}),m=E6({inputs:{x:f},backend:n,attrs:{perm:d}}),g=EY({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(h),u.push(f),u.push(m),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},{kernelName:rc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(2!==r.shape.length)throw Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
         ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),h=n.readSync(i.dataId)[0],[p,d,c,f,m]=$1(o,r.shape,r.dtype,l,a.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},{kernelName:rf,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,h,p]=$2(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},{kernelName:rm,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
              ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=$3(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}},{kernelName:rg,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
             ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,h]=$3(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}},{kernelName:ry,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:p,outputSize:d}=cB.calculateShapes(s,a,o);if("string"===s.dtype){let e=n.bufferSync(a),t=$Y(e,n.bufferSync(s),o,d,h,u,l,p,r4.decodeString(n.readSync(i.dataId)[0]),!1);return n.makeTensorInfo(o,t.dtype,t.values)}let c=new Fp(u,l,a.shape.length,s.shape.length,p,[d,1],!1),f=n.runWebGLProgram(c,[s,a,i],s.dtype),m=EY({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},{kernelName:rp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=r4.parseAxisParam(i,a.shape)[0],l=cB.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),h=a.shape.slice();return l.map(e=>{let t=[...h];t[o]=e;let r=Av({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r})}},{kernelName:rl,backendName:"webgl",kernelFunc:Fk},{kernelName:rx,backendName:"webgl",kernelFunc:FI},{kernelName:rb,backendName:"webgl",kernelFunc:FN},{kernelName:rw,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=$6(cB.fromUint8ToStringArray(s),"string",r);return n.makeTensorInfo(a.shape,"string",i)}},{kernelName:rL,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=Ef+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Ec(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},{kernelName:rv,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=lT.sliceInfo(s.shape,i,o,l,u,h,p,d,c);if(g)t=EY({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||b){r4.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=lT.computeOutShape(x,w,v),n=Av({inputs:{x:s},backend:r,attrs:{begin:x,size:e}});t=EY({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=$5(f,ot(s.shape,s.dtype,e),v,x);t=r.makeTensorInfo(m,s.dtype,n.values)}else{let e=new FT(x,v,f);t=r.runWebGLProgram(e,[s],s.dtype)}let k=EY({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),k}},{kernelName:rk,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:p}=t,[d,c]=$8(n.readSync(h.dataId),n.readSync(p.dataId),a,s,i,o,l,u);return[n.makeTensorInfo([d.length],"string",d),n.makeTensorInfo(p.shape,"int32",c)]}},{kernelName:rI,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let[o,l,u]=$7(n.readSync(s.dataId),n.readSync(i.dataId)[0],a),h=l.length;return[n.makeTensorInfo([h,2],"int32",o),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(u))]}},{kernelName:rS,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=$9(n.readSync(s.dataId),a);return n.makeTensorInfo(s.shape,"int32",i)}},{kernelName:rN,backendName:"webgl",kernelFunc:Rq},{kernelName:ru,backendName:"webgl",kernelFunc:E4},{kernelName:rT,backendName:"webgl",kernelFunc:FC},{kernelName:rC,backendName:"webgl",kernelFunc:F$},{kernelName:n7,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:p}=cB.calculateShapes(i,s,a.shape),d=[p/u,u];if(0===p)return n.makeTensorInfo(a.shape,s.dtype);let c=EY({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=EY({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=EY({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new Fp(l,o,c.shape.length,f.shape.length,h,d,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),b=EY({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}},{kernelName:r$,backendName:"webgl",kernelFunc:FA},{kernelName:rE,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=eP.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=eP.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([a])||h<o||s>l){let[e,t]=En(n.readSync(a.dataId),u,a.dtype,s,i);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[a,Rh({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,c=d?n.unpackTensor(a):a,f=r4.sizeFromShape(u)/h,m=EY({inputs:{x:c},attrs:{shape:[f,h]},backend:n});d&&FD(n,c);let g=FO(s),y=FO(h),b=null,x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{let a=x(),s=new FR(r),i=[[h],[+(null===b)],[-1/0],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),FD(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=x(),r=new FF([f,e/2]),a=[[h],[+(null===b)],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),FD(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=Av({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),FD(n,v);let k=Rw({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});FD(n,m);let I=u.slice(0,-1);I.push(s),v=b,b=EY({inputs:{x:b},attrs:{shape:I},backend:n}),FD(n,v);let S=k;return k=EY({inputs:{x:k},attrs:{shape:I},backend:n}),FD(n,S),[k,b]}},{kernelName:rA,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[h,p,d,c]=a.shape,[f,m]=null!=u?u:[p,d],g=new F_(p,d,i,o,l,[h,f,m,c]);return n.runWebGLProgram(g,[a,s],"float32")}},{kernelName:rR,backendName:"webgl",kernelFunc:E6},{kernelName:rF,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;CA(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:i,outputShape:o,indices:l}=Ea(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeTensorInfo(o,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:rD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let h=[],p=Array(i).fill(0),d=a.shape.slice();d[s]=1;let c=Array(o);for(let e=0;e<c.length;e++){p[s]=e;let t=Av({inputs:{x:a},backend:n,attrs:{begin:p,size:d}}),r=EY({inputs:{x:t},backend:n,attrs:{shape:l}});c[e]=r,h.push(t)}return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},{kernelName:rO,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,h=cB.getAxesPermutation([u],o),p=a;null!=h&&(p=E6({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),u=cB.getInnerMostAxes(1,o)[0]);let d=cB.segment_util.computeOutShape(p.shape,u,i),c=r4.sizeFromShape([p.shape[u]]),f=EY({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=a2(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=cB.segment_util.segOpComputeOptimalWindowSize(o,s),h=new FM({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),p=n.compileAndRun(h,[e,r],a);if(l.push(p),p.shape[1]===s)return p;let d=R5({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=FA({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(c),g(p,t,c,a,s)},y=EY({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),b=y;return null!=h&&(l.push(y),b=E6({inputs:{x:b},backend:n,attrs:{perm:cB.getUndoAxesPermutation(h)}})),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},{kernelName:rM,backendName:"webgl",kernelFunc:R1}])rJ(e);l(Tz,TP);let FL={"tfjs-core":l2,"tfjs-backend-cpu":NA,"tfjs-backend-webgl":E$,"tfjs-data":I3,"tfjs-layers":yM,"tfjs-converter":k9,tfjs:"4.22.0"};l(M,L),l(M,f8),l(M,v_),l(M,I4),l(M,Tz);let Fz={Two:{id:"manageTab",value:"new"},Three:{id:"manageTab",value:"close"},Four:{id:"reloadPage",value:null},"Open Hand":{id:"openDashboard",value:null}},FP={reloadPage:async(e,t)=>{t&&await chrome.tabs.reload(t.id)},openDashboard:async()=>{await chrome.runtime.openOptionsPage()},openPage:async e=>{if(!e||"string"!=typeof e)return void chrome.notifications.create("InvalidURL",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Invalid Custom Value",message:"You must enter a valid URL (ex: https://google.com) for the controlZoom action."});await chrome.tabs.create({url:e})},scrollBy:async(e,t)=>{let n=parseInt(e,10);return isNaN(n)?void chrome.notifications.create("InvalidScroll",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Invalid Custom Value",message:"You must enter a number for the scrollBy action."}):t?.url?.startsWith("chrome")||t.url?.startsWith("https://chromewebstore.google.com/")?void chrome.notifications.create("RestrictedURL",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Restricted URL",message:"The scroll action cannot be used in this page."}):void(t&&chrome.scripting.executeScript({target:{tabId:t.id},func:e=>window.scrollBy(0,document.body.scrollHeight*(e/100)),args:[n]}))},muteControl:async(e,t)=>{if(t)switch(e){case"toggle":await chrome.tabs.update(t.id,{muted:!t.mutedInfo?.muted});break;case"mute":await chrome.tabs.update(t.id,{muted:!0});break;case"unmute":await chrome.tabs.update(t.id,{muted:!1})}},moveTab:async(e,t)=>{if(!t)return;let n=-1;switch(e){case"start":n=0;break;case"end":n=-1;break;case"left":n=t.index-1;break;case"right":n=t.index+1;break;default:let r=parseInt(e,10);isNaN(r)||(n=r-1)}(n>=0||-1===n)&&await chrome.tabs.move(t.id,{index:n})},manageTab:async(e,t)=>{switch(e){case"new":await chrome.tabs.create({});break;case"close":t&&await chrome.tabs.remove(t.id);break;case"duplicate":t&&await chrome.tabs.duplicate(t.id);break;case"pin":t&&await chrome.tabs.update(t.id,{pinned:!t.pinned})}},switchTab:async e=>{if("next"===e||"previous"===e){let t=await chrome.tabs.query({currentWindow:!0});if(t.length<=1)return;let n=t.findIndex(e=>e.active),r="next"===e?(n+1)%t.length:(n-1+t.length)%t.length;await chrome.tabs.update(t[r].id,{active:!0})}else if(e&&"string"==typeof e){let t=(await chrome.tabs.query({currentWindow:!0})).find(t=>t.title.toLowerCase().includes(e.toLowerCase())||t.url.toLowerCase().includes(e.toLowerCase()));t?await chrome.tabs.update(t.id,{active:!0}):chrome.notifications.create("NoTabFound",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Tab Not Found",message:"There is no currently opened tab that matches your query."})}},navigateHistory:async(e,t)=>{if(t?.url?.startsWith("chrome")||t.url?.startsWith("https://chromewebstore.google.com/"))return void chrome.notifications.create("RestrictedURL",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Restricted URL",message:"Navigate History cannot be used in this page."});if(!t)return;let n="back"===e?()=>history.back():()=>history.forward();chrome.scripting.executeScript({target:{tabId:t.id},func:n})},controlZoom:async(e,t)=>{if(t?.url?.startsWith("chrome://")||t.url?.startsWith("https://chromewebstore.google.com/"))return void chrome.notifications.create("RestrictedURL",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Restricted URL",message:"Control zoom cannot be used in this page."});if(t)if(e.startsWith("+")||e.startsWith("-")){let n=parseInt(e,10);if(isNaN(n))return void chrome.notifications.create("InvalidControlZoom",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Invalid Custom Value",message:"You must enter a number for the controlZoom action."});let r=await chrome.tabs.getZoom(t.id);await chrome.tabs.setZoom(t.id,r+n/100)}else{let n=parseInt(e,10);if(isNaN(percentChange))return void chrome.notifications.create("InvalidControlZoom",{type:"basic",iconUrl:chrome.runtime.getURL("icons/icon128.png"),title:"Invalid Custom Value",message:"You must enter a number for the controlZoom action."});await chrome.tabs.setZoom(t.id,n/100)}}},FB="None",FW="None",FU=0,FV=fetch(`${chrome.runtime.getURL("core/model/label_mapping.json")}?t=${Date.now()}`).then(e=>e.json()),FG=500,FH=null;async function Fj(){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});FH=e}async function Fq(e){let t=((await chrome.storage.sync.get("actionMap")).actionMap??Fz)[e];if(!t||!t.id)return;let n=FP[t.id];n&&n(t.value,FH).catch(console.error)}function FK(e){let t=Date.now();e!==FB?(FB=e,FU=t,FG=500):t-FU>=FG&&(FW=e,FU=t,FG=800,Fq(FW))}function FX(e,t,n,r){let a=e[t].x,s=e[t].y,i=e[n].x,o=e[n].y,l=(a-i)*(r?-1:1),u=s-o;return Math.abs(l)>Math.abs(u)?l>0?"right":"left":u>0?"down":"up"}async function FZ(e,t,n){let r=n.tensor2d([e]),a=t.predict(r),s=a.argMax(-1).dataSync()[0],i=(await FV)[s];return r.dispose(),a.dispose(),i}async function FY(e,t,n){let r=function(e){if(!e||21!==e.length)return[];let t=e[0].x,n=e[0].y,r=e.map(e=>[e.x-t,e.y-n]),[a,s]=[r[9][0],r[9][1]],i=Math.atan2(s,a),o=Math.cos(-i),l=Math.sin(-i),u=r.map(([e,t])=>[e*o-t*l,e*l+t*o]),h=[5,9,13,17],p=h.map(e=>Math.hypot(u[e][0],u[e][1])).reduce((e,t)=>e+t,0)/h.length||1;return u.map(([e,t])=>[e/p,t/p]).flat()}(e);return await FZ(r,t,n)}let FJ=null,FQ=null,F0=null,F1=!1,F2={},F3="none",F4=!1,F6=!1;async function F5(){let e=await chrome.storage.sync.get(["mirrorEnabled","actionMap"]);F2.mirrorEnabled=e.mirrorEnabled??!1,F2.actionMap=e.actionMap}async function F8(){FJ||(await M.setBackend("webgl"),await M.ready(),FJ=await M.loadLayersModel(chrome.runtime.getURL("core/model/model.json")))}async function F7(){if(!F4&&(F4=!0,!(!F1||await F9())))try{await chrome.offscreen.createDocument({url:"ui/offscreen.html",reasons:["USER_MEDIA"],justification:"To process hand gestures from the webcam."}),chrome.runtime.sendMessage({type:"start-camera",target:"offscreen"})}catch(e){console.error("Error creating offscreen document:",e)}finally{F4=!1}}async function F9(){return(await clients.matchAll()).some(e=>e.url.endsWith("ui/offscreen.html"))}async function De(){if(!F6)try{F6=!0,await chrome.offscreen.hasDocument()&&await chrome.offscreen.closeDocument()}catch(e){console.error("Error closing offscreen document:",e)}finally{F6=!1}}async function Dt(e){if(FJ)try{let t=await FY(e,FJ,M);if("Point"===t||"Thumb Point"===t){let n=function(e,t,n=!1){switch(t){case"Point":return FX(e,8,5,n);case"Thumb Point":return FX(e,4,2,n);default:return null}}(e,t,F2.mirrorEnabled);t+=` (${n})`}FK(t),FQ&&FQ.postMessage({type:"gesture-data",data:{gesture:FW,keypoints:e}})}catch(e){console.error("Error processing keypoints:",e)}}async function Dn(e){F1=e,e&&await F8(),await Dr()}async function Dr(){let e="none";if(F1){let[t]=await chrome.tabs.query({active:!0,currentWindow:!0});e=F0&&t&&t.id===F0?"options":"offscreen"}e!==F3&&("options"===F3&&FQ?FQ.postMessage({type:"stop-camera"}):"offscreen"===F3&&await De(),"options"===e&&FQ?FQ.postMessage({type:"start-camera"}):"offscreen"===e&&await F7(),F3=e)}chrome.runtime.onConnect.addListener(async e=>{"options-page"===e.name&&(FQ=e,F0=e.sender.tab.id,await Dr(),e.onDisconnect.addListener(async()=>{"options"===F3&&(F3="none"),FQ=null,F0=null,await Dr()}))}),chrome.tabs.onActivated.addListener(Dr),chrome.windows.onFocusChanged.addListener(Dr),chrome.runtime.onMessage.addListener(async(e,t,n)=>{switch(e.type){case"keypoints":e.keypoints?await Dt(e.keypoints):FQ&&(FK("None"),FQ.postMessage({type:"gesture-data",data:{gesture:"None",keypoints:null}}));break;case"toggle-recognition":n({status:"acknowledged"}),await Dn(e.isActive);break;case"getCameraStatus":return n({isCameraActive:"none"!==F3}),!0}}),chrome.runtime.onStartup.addListener(async()=>{await chrome.storage.local.set({recognitionActive:!1})}),chrome.storage.onChanged.addListener(F5),F5(),chrome.tabs.onActivated.addListener(Fj),chrome.tabs.onUpdated.addListener(Fj),chrome.windows.onFocusChanged.addListener(Fj)})();
//# sourceMappingURL=background.js.map
